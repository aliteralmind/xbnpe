__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
kbh -- Link to THIS-class cnstr, with params-only in the clipboard (see klhsyn)	{#insert zzSetAllParamsToCBPapToL1c}<CODE>{#insert z1PPThisCnstrLinkDispCNm_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	kbh
kbhh -- kbh, display 'this'	{#insert zzSetAllParamsToCBPapToL1c}<CODE>{#insert z1PPThisCnstrLinkDispQths_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	kbhh
kbhht -- kbhh, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert z1PPThisCnstrLinkDispQths_M_prmsPap}{#insert zzKlhsyn_M_yon}	kbhht
kbht -- kbh, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert z1PPThisCnstrLinkDispCNm_M_prmsPap}{#insert zzKlhsyn_M_yon}	kbht
kbhn -- kbh, display 'constructor', non-CODE-d (0 pre-opts)	{#insert zzSetAllParamsToCBThenCIB}{#insert zvDISPLAY_stQcnstrQ}{#insert z1PPThisCnstrLinkPapES_M_prmsDsp}{#insert zzKlhsyn_M_yon}	kbhn
kbr -- Link to super-class cnstr, with params-only in CB (no target pre-opt-char)	{#insert zzSetAllParamsToCBPapToL1c}<CODE>{#insert z1PPSuperCnstrLinkDispCNm_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	kbr
kbrk -- kbr, w/ pre-link file-link	{#insert zzSetAllParamsToCBPapToL1c}{#insert zvPREK_stL1c}<CODE>{#insert z1PPSuperCnstrLinkWPrekDispCNm_M_prmsPapPrk}</CODE>{#insert zzKlhsyn_M_yon}	kbrk
kbrt -- kbr, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert z1PPSuperCnstrLinkDispCNm_M_prmsPap}{#insert zzKlhsyn_M_yon}	kbrt
kbrtk -- kbrk, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert zvPREK_stL1c}{#insert z1PPSuperCnstrLinkWPrekDispCNm_M_prmsPapPrk}{#insert zzKlhsyn_M_yon}	kbrtk
kbrn -- kbr, display 'constructor', non-CODE-d	{#insert zzSetAllParamsToCBThenCIB}{#insert zvDISPLAY_stQcnstrQ}{#insert z1PPSuperCnstrLinkPapES_M_prmsDsp}{#insert zzKlhsyn_M_yon}	kbrn
kbrr -- kbr, display 'super'	{#insert zzSetAllParamsToCBPapToL1c}<CODE>{#insert z1PPSuperCnstrLinkDispQspr_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	kbrr
kbrrt -- kbrh, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert z1PPSuperCnstrLinkDispQspr_M_prmsPap}{#insert zzKlhsyn_M_yon}	kbrrt
klh -- Link to THIS-class cnstr, with params-only b4 the cursor (see klhsyn)	{#insert zzSetPapToL1cPostParamsSet}<CODE>{#insert z1PPThisCnstrLinkDispCNm_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	klh
klhh -- klh, display 'this'	{#insert zzSetPapToL1cPostParamsSet}<CODE>{#insert z1PPThisCnstrLinkDispQths_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	klhh
klhht -- klhh, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCddPostParamsSetDel}{#insert z1PPThisCnstrLinkDispQths_M_prmsPap}{#insert zzKlhsyn_M_yon}	klhht
klht -- klh, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCddPostParamsSetDel}{#insert z1PPThisCnstrLinkDispCNm_M_prmsPap}{#insert zzKlhsyn_M_yon}	klht
klhn -- klh, display 'constructor', non-CODE-d	{#insert zPostParamsSetDel}{#insert zvDISPLAY_stQcnstrQ}{#insert z1PPThisCnstrLinkPapES_M_prmsDsp}{#insert zzKlhsyn_M_yon}	klhn
klhtptsyn	{#BALLOON -title 1+ param cnstr link OPTIONS -text params~only in clip[b]oard, or [l]eft of cursor  //  [h]=THIS class, [r]=super~class  //  Display: [hh]='this', [rr]='super', [n]='constructor'  //  [t]=non~CODE~d, [k]=pre~link class~file link (see klhprksyn)  //  klhsyn}	klhtptsyn
klhpapsyn	{#BALLOON -title Post~</A> params PRE~OPT -text [t,m,v,y] declares what should be displayed after the closing </A>. {#insert zzPreOptsMustBeTxtPap}  //  Examples: rtklrk, mkbrr  //  klhsyn}	klhpapsyn
klhprksyn	{#BALLOON -title Pre~link class~file link PRE~OPT -text [f,r,y] declares the style of pre~link class~file link. {#insert zzPreOptsMustBeTxtPrk}  //  Example: imklrk  //  klhsyn}	klhprksyn
klhsyn	{#BALLOON -title Syntax: 1+ param Java constructor link -text {#insert zzKlhsyns1of3}=cnstr link  //  {#insert zzKlhsyns2of3}=w/ pre~link file~link  //  Options: klhtptsyn, [f,r,y]=klhprksyn, [t,m,v,y]=klhprksyn  //  {#insert zzKlhsyns3of3}=display 'cnstr'  //  klhtestall  //  javasyn}	klhsyn
zzKlhsyns1of3	[t,m,v,y]k[b,l][h[h],r[r]][t]	zzKlhsyns1of3
zzKlhsyns2of3	[f,r,y][t,m,v,y]k[b,l]r[t]k	zzKlhsyns2of3
zzKlhsyns3of3	k[b,l][h,r]n	zzKlhsyns3of3
klhtestall	{#insert zFcsTPFileNew}{#insert zzDlgStartingTestSynOffWrn}{#insert zzzSetPapPap2ToPrompt}{#insert zzzSetPrkPrk2ToPrompt}{#insert zvSYNTAX_ON_stES}{#insert zzDemoJavaClassLine}Testing function parameters:{#insert zzzEnterTestFuncParams}{#insert zENTER2}{#insert zzzYLToYTWarningTxt}{#insert zzzPap2}kbh{#insert zzzEnterPapSetCBToTestFuncParams}{#insert kbh}{#insert zzzEtrPap2}kbhh{#insert zzzEnterPapSetCBToTestFuncParams}{#insert kbhh}{#insert zzzEtrPap2ForNonCdd}kbhht{#insert zzEnterPap2ForNonCddSetCBToTestFuncParams}{#insert kbhht}{#insert zzzEtrPap2ForNonCdd}kbht{#insert zzEnterPap2ForNonCddSetCBToTestFuncParams}{#insert kbht}{#insert zENTER}kbhn{#insert zENTER}{#insert zzSetCBToTestFuncParams}{#insert kbhn}{#insert zzzEtrPap2}kbr{#insert zzzEnterPapSetCBToTestFuncParams}{#insert kbr}{#insert zzzEtrPrek2Pap2}kbrk{#insert zzzEtrPrek2Pap2}{#insert zzSetCBToTestFuncParams}{#insert kbrk}{#insert zzzEtrPap2ForNonCdd}kbrt{#insert zzEnterPap2ForNonCddSetCBToTestFuncParams}{#insert kbrt}{#insert zzzEtrPrekPap4NonCdd}kbrtk{#insert zzzEtrPrekPap4NonCdd}{#insert zzSetCBToTestFuncParams}{#insert kbrtk}{#insert zENTER}kbrn{#insert zENTER}{#insert zzSetCBToTestFuncParams}{#insert kbrn}{#insert zzzEtrPap2}kbrr{#insert zzzEnterPapSetCBToTestFuncParams}{#insert kbrr}{#insert zzzEtrPap2ForNonCdd}kbrrt{#insert zzEnterPap2ForNonCddSetCBToTestFuncParams}{#insert kbrrt}{#insert zzzEtrPap2}klh{#insert zzEnterPrintTestFuncParamsPap}{#insert klh}{#insert zzzEtrPap2}klhh{#insert zzEnterPrintTestFuncParamsPap}{#insert klhh}{#insert zzzEtrPap2ForNonCdd}klhht{#insert zzEnterPrintTestFuncParamsPap4NonCdd}{#insert klhht}{#insert zzzEtrPap2ForNonCdd}klht{#insert zzEnterPrintTestFuncParamsPap4NonCdd}{#insert klht}{#insert zENTER}klhn{#insert zzzEnterTestFuncParams}{#insert klhn}{#insert zzzEtrPap2}klr{#insert zzEnterPrintTestFuncParamsPap}{#insert klr}{#insert zzzEtrPrek2Pap2}klrk{#insert zzzEnterTestFuncParams}{#insert zzzPrek2Pap2}{#insert klrk}{#insert zzzEtrPap2ForNonCdd}klrt{#insert zzEnterPrintTestFuncParamsPap4NonCdd}{#insert klrt}{#insert zzzEtrPrekPap4NonCdd}klrtk{#insert zzzEnterTestFuncParams}{#insert zzzPrekPap2ForNonCdd}{#insert klrtk}{#insert zENTER}klrn{#insert zzzEnterTestFuncParams}{#insert klrn}{#insert zzzEtrPap2}klrr{#insert zzEnterPrintTestFuncParamsPap}{#insert klrr}{#insert zzzEtrPap2ForNonCdd}klrrt{#insert zzEnterPrintTestFuncParamsPap4NonCdd}{#insert klrrt}{#insert zvSYNTAX_ON_stOn}{#insert zzKlhsyn_M_yon}	klhtestall
klr -- Link to super-class cnstr, with params-only b4 the cursor (no target pre-opt-char)	{#insert zzSetPapToL1cPostParamsSet}<CODE>{#insert z1PPSuperCnstrLinkDispCNm_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	klr
klrk -- klr, w/ pre-link file-link	{#insert zvPAP_stL1c}{#insert zvPREK_stL1c}{#insert zPostParamsSetDel}<CODE>{#insert z1PPSuperCnstrLinkWPrekDispCNm_M_prmsPapPrk}</CODE>{#insert zzKlhsyn_M_yon}	klrk
klrt -- klr, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCddPostParamsSetDel}{#insert z1PPSuperCnstrLinkDispCNm_M_prmsPap}{#insert zzKlhsyn_M_yon}	klrt
klrtk -- klrk, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCdd}{#insert zvPREK_stL1c}{#insert zPostParamsSetDel}{#insert z1PPSuperCnstrLinkWPrekDispCNm_M_prmsPapPrk}{#insert zzKlhsyn_M_yon}	klrtk
klrn -- klr, display 'constructor', non-CODE-d	{#insert zPostParamsSetDel}{#insert zvDISPLAY_stQcnstrQ}{#insert z1PPSuperCnstrLinkPapES_M_prmsDsp}{#insert zzKlhsyn_M_yon}	klrn
klrr -- klr, display 'super'	{#insert zzSetPapToL1cPostParamsSet}<CODE>{#insert z1PPSuperCnstrLinkDispQspr_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	klrr
klrrt -- klrh, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCddPostParamsSetDel}{#insert z1PPSuperCnstrLinkDispQspr_M_prmsPap}{#insert zzKlhsyn_M_yon}	klrrt
lybadinfo	{#BALLOON -title WARNING: non-CODE-d & 'y' pap bad -text The 'y' post-</A> parameter pre-option-character is valid only for CODE-d (1+ parameter) function/constructor links (such as klh or kglk). Attempting the 'y' pap pre-opt-char w/ a non-CODE-d link will result in an error.  //  See: kgl[pap]syn, klh[pap]syn}	lybadinfo
