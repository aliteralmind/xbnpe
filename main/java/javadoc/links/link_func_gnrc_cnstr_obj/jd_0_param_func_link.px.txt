__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
kfb -- 0-param link from func-name in CB (requires 1 pre-opt-char)	{#insert zzSetFObjNmCBDrnL1c}<CODE>{#insert z0PFuncLinkDispFNm_M_fnmDrn}</CODE>{#insert zzKflsyn_M_yon}	kfb
kfbk -- kfb, w/ pre-link file-link (requires 2 pre-opt-chars)	{#insert zzSetFObjNmCBDrnPrekL1cX2}<CODE>{#insert z0PFuncLinkDispFNmWPrek_M_fnmDrnPrk}</CODE>{#insert zzKflsyn_M_yon}	kfbk
kfbt -- kfb, non-CODE-d	{#insert zzSetFObjNmCBDrnL1c}{#insert z0PFuncLinkDispFNm_M_fnmDrn}{#insert zzKflsyn_M_yon}	kfbt
kfbtk -- kfbt w/ pre-link file-link (requires 2 pre-opt-chars)	{#insert zzSetFObjNmCBDrnPrekL1cX2}{#insert z0PFuncLinkDispFNmWPrek_M_fnmDrnPrk}{#insert zzKflsyn_M_yon}	kfbtk
kfby -- kfb, no display-text (y-mark, non-CODE-d, requires 1 pre-opt-char)	{#insert zzSetFObjNmCBDrnL1c}{#insert z0PFuncLinkDsplyYmkPapES_M_fnmDrn}{#insert zzKflsyn_M_yon}	kfby
kfbyc -- kfby, CODE-d (requires 1 pre-opt-char)	{#insert zzSetFObjNmCBDrnL1c}<CODE>{#insert z0PFuncLinkDsplyYmkPapES_M_fnmDrn}</CODE>{#insert zzKflsyn_M_yon}	kfbyc
kfl -- 0-param link from func-name word-left (requires 1 pre-opt-char)	{#insert zzSetDrnL1cFObjNmL1w}<CODE>{#insert z0PFuncLinkDispFNm_M_fnmDrn}</CODE>{#insert zzKflsyn_M_yon}	kfl
kflh -- kfl, target THIS class	{#insert zzSetDrnToHFNmToL1w}<CODE>{#insert z0PFuncLinkDispFNm_M_fnmDrn}</CODE>{#insert zzKflsyn_M_yon}	kflh
kflht -- kflh, non-CODE-d	{#insert zzSetDrnToHFNmToL1w}{#insert z0PFuncLinkDispFNm_M_fnmDrn}{#insert zzKflsyn_M_yon}	kflht
kflk -- kfl w/ pre-link file-link (requires 2 pre-opt-chars)	{#insert zzSetDrnPrekL1cFObjNmL1w}<CODE>{#insert z0PFuncLinkDispFNmWPrek_M_fnmDrnPrk}</CODE>{#insert zzKflsyn_M_yon}	kflk
kflksyn	{#BALLOON -title Syntax: Obj/0~param func~link -text {#insert zzKflksyns}=with pre~link class~file link  //  Options: kfltptsyn  //  [h,i,d,r,n]: kfltgtsyn, [f,r,y]: kflprksyn  //  WARNING: khbadinfo  //  See: kflsyn  //  javasyn}	kflksyn
kflprksyn	{#BALLOON -title Pre~link class~file link PRE~OPT -text [f,r,y]=declares the style of pre~link class~file link. [f]=disp class~name, [r]=display 'super', [y]=no display (y~mark), [capitalized]=italic  //  WARNING: khbadinfo  //  Example: Ytkflt  //  kflsyn}	kflprksyn
kflsyn	{#BALLOON -title Syntax: Obj/0~param func~link -text {#insert zzKflsyns1of4}=disp func/obj~nm // {#insert zzKflsyns2of4}=disp y~mk // {#insert zzKflsyns3of4}=dsply in CB // {#insert zzKflsyns4of4}:tgt='h' // [h,i,d,r,n]: kfltgtsyn, Opts: kfltptsyn, See: kflksyn // k[fl,ol,nh]testall // See: kflksyn // hcf[b,l]=non~link // javasyn}	kflsyn
kflt -- kfl, non-CODE-d	{#insert zzSetDrnL1cFObjNmL1w}{#insert z0PFuncLinkDispFNm_M_fnmDrn}{#insert zzKflsyn_M_yon}	kflt
kfltestall	{#insert zFcsTPFileNew}{#insert zzDlgStartingTestSynOffWrn}{#insert zzzSetTstDrn2ToPromptPrintClassLnIfR}{#insert zzzSetTstPrk2ToPromptIfDrn2NotH_M_drn2}{#insert zvSYNTAX_ON_stES}kflh{#insert zENTER}doSomething{#insert kflh}{#insert zENTER}kflht{#insert zENTER}doSomething{#insert kflht}{#insert zENTER}{#insert zzzDrn2}kfb{#insert zzzEtrDrn2}{#insert zzScbDmoFncNm}{#insert kfb}{#insert zzzEtrDrn2}kfbt{#insert zzzEtrDrn2}{#insert zzScbDmoFncNm}{#insert kfbt}{#insert zzzEtrDrn2}kfby{#insert zzzEtrDrn2}{#insert zzScbDmoFncNm}{#insert kfby}{#insert zzzEtrDrn2}kfbyc{#insert zzzEtrDrn2}{#insert zzScbDmoFncNm}{#insert kfbyc}{#insert zzzEtrDrn2}kfl{#insert zENTER}doSomething{#insert zzzDrn2}{#insert kfl}{#insert {#COND -if {#insert zvDRN2} = h -then zzzSkippingKTestsBCHTgtPreOptBal -else zzKfltestallWKOpt}}{#insert zzzEtrDrn2}kflt{#insert zENTER}doSomething{#insert zzzDrn2}{#insert kflt}{#insert zzzEtrDrn2}kfly{#insert zENTER}doSomething{#insert zzzDrn2}{#insert kfly}{#insert zzzEtrDrn2}kflyb{#insert zENTER}doSomething{#insert zzzScbDmoDisp}{#insert zzzDrn2}{#insert kflyb}{#insert zzzEtrDrn2}kflybc{#insert zENTER}doSomething{#insert zzzScbDmoDisp}{#insert zzzDrn2}{#insert kflybc}{#insert zzzEtrDrn2}kflyc{#insert zENTER}doSomething{#insert zzzDrn2}{#insert kflyc}{#insert zENTER}{#insert zvSYNTAX_ON_stOn}{#insert zzKflsyn_M_yon}	kfltestall
kfltgtsyn	{#BALLOON -title Class~file target PRE~OPT -text [h,i,d,r,n] declares the location of target~class. {#insert zzPreOptsMustBeTxtTgt}  //  Example: tkflt  //  See: kflprksyn  //  WARNINGS: [kh,on]badinfo  //  kflsyn}	kfltgtsyn
kfltk -- kflt w/ pre-link file-link (requires 2 pre-opt-chars)	{#insert zzSetDrnPrekL1cFObjNmL1w}{#insert z0PFuncLinkDispFNmWPrek_M_fnmDrnPrk}{#insert zzKflsyn_M_yon}	kfltk
kfltptsyn	{#BALLOON -title Syntax: kf[b,l] OPTIONS -text [f]=0~param func~link, [ko]=internal~object link, [b]=func/obj name in clipboard, [l]=name word~left, [k]=pre~link class~file link (see kflprksyn, WARNING: khbadinfo), [y]=disp y~mk, [yb]=disp in CB  //  [c]=CODE~d, [t]=non~CODE~d  // kflsyn}	kfltptsyn
kfly -- kfl, no display-text (y-mark, non-CODE-d, requires 1 pre-opt-char)	{#insert zzSetDrnL1cFObjNmL1w}{#insert z0PFuncLinkDsplyYmkPapES_M_fnmDrn}{#insert zzKflsyn_M_yon}	kfly
kflyb -- kfly, display in clipboard	{#insert zzSetDsplyCBDrnL1cFObjNmL1w}{#insert z0PFuncLinkPapES_M_fnmDrnDsp}{#insert zzKflsyn_M_yon}	kflyb
kflybc -- kflyc, display in clipboard	{#insert zzSetDsplyCBDrnL1cFObjNmL1w}<CODE>{#insert z0PFuncLinkPapES_M_fnmDrnDsp}</CODE>{#insert zzKflsyn_M_yon}	kflybc
kflyc -- kfly, CODE-d (requires 1 pre-opt-char)	{#insert zzSetDrnL1cFObjNmL1w}<CODE>{#insert z0PFuncLinkDsplyYmkPapES_M_fnmDrn}</CODE>{#insert zzKflsyn_M_yon}	kflyc
khbadinfo	{#BALLOON -title WARNING: 'h' tgt pre~opt illegal w/ [k] -text Any Java function/object/constructor~link action that contains the [k] option (such as kflk or kgllk) may not have a target~class of THIS (which is the target pre~option~character 'h'~~see k[f,g]ltgtsyn). Attempting this will result in an error.}	khbadinfo
z0PFuncLinkDispFNmWPrek_M_fnmDrnPrk	{#insert z0PFuncLinkDispFNm_M_fnmDrn}{#insert zPostLinkCreatePrekGoBackCIDrnH_M_prk}	z0PFuncLinkDispFNmWPrek_M_fnmDrnPrk
zzDel2ParensKflht -[zCASpFOUR]- Delete the two parens following the cursor, then call kflht	{#insert zDEL2}{#insert kflht}	zzDel2ParensKflht
zzKflksyns	[f,r,y][h,i,d,r,n]k[f,o][b,l][t]k	zzKflksyns
zzKflsyns1of4	[h,i,d,r,n]k[f,o][b,l][t]	zzKflsyns1of4
zzKflsyns2of4	k[f,o]by[c]	zzKflsyns2of4
zzKflsyns3of4	[h,i,d,r,n]k[f,o]ly[b][c]	zzKflsyns3of4
zzKflsyns4of4	kflh[t]	zzKflsyns4of4
zzKfltestallWKOpt	{#insert zzzEtrPrek2Drn2}kfbtk{#insert zzzEtrPrek2Drn2}{#insert zzScbDmoFncNm}{#insert kfbtk}{#insert zzzEtrPrek2Drn2}kfbk{#insert zzzEtrPrek2Drn2}{#insert zzScbDmoFncNm}{#insert kfbk}{#insert zzzEtrPrek2Drn2}kfltk{#insert zENTER}doSomething{#insert zzzPrek2Drn2}{#insert kfltk}{#insert zzzEtrPrek2Drn2}kflk{#insert zENTER}doSomething{#insert zzzPrek2Drn2}{#insert kflk}	zzKfltestallWKOpt
zzScbDmoFncNm	{#SETCLIPBOARD doSomething}	zzScbDmoFncNm
zzSetDrnPrekL1cFObjNmL1w	{#insert zvDRN_stL1c}{#insert zvPREK_stL1c}{#insert zvFOBJ_NAME_stL1w}	zzSetDrnPrekL1cFObjNmL1w
zzSetDrnToHFNmToL1w	{#insert zvDRN_stH}{#insert zvFOBJ_NAME_stL1w}	zzSetDrnToHFNmToL1w
