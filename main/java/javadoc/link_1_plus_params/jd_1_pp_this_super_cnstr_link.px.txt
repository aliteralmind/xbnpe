kbh -- Link to THIS-class cnstr, with params-only in the clipboard (see klhsyn)	{#insert zzSetAllParamsToCBPapToL1c}<CODE>{#insert z1PPThisCnstrLinkDispCNm_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	kbh
kbhh -- kbh, display 'this'	{#insert zzSetAllParamsToCBPapToL1c}<CODE>{#insert z1PPThisCnstrLinkDispQthsQ_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	kbhh
kbhhl -- kbhh, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert z1PPThisCnstrLinkDispQthsQ_M_prmsPap}{#insert zzKlhsyn_M_yon}	kbhhl
kbhl -- kbh, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert z1PPThisCnstrLinkDispCNm_M_prmsPap}{#insert zzKlhsyn_M_yon}	kbhl
kbhn -- kbh, display 'constructor', non-CODE-d (0 pre-opts)	{#insert zvALL_PARAMS_stCB}{#insert zvDISPLAY_stQcnstrQ}{#insert z1PPThisCnstrLinkPapES_M_prmsDsp}{#insert zzKlhsyn_M_yon}	kbhn
kbr -- Link to super-class cnstr, with params-only in CB (no target pre-opt-char)	{#insert zzSetAllParamsToCBPapToL1c}<CODE>{#insert z1PPSuperCnstrLinkDispCNm_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	kbr
kbrk -- kbr, w/ pre-link file-link	{#insert zzSetAllParamsToCBPapToL1c}{#insert zzCutSetPrekL1c}<CODE>{#insert z1PPSuperCnstrLinkWPrekDispCNm_M_prmsPapPrk}</CODE>{#insert zzKlhsyn_M_yon}	kbrk
kbrl -- kbr, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert z1PPSuperCnstrLinkDispCNm_M_prmsPap}{#insert zzKlhsyn_M_yon}	kbrl
kbrlk -- kbrk, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert zzCutSetPrekL1c}{#insert z1PPSuperCnstrLinkWPrekDispCNm_M_prmsPapPrk}{#insert zzKlhsyn_M_yon}	kbrlk
kbrn -- kbr, display 'constructor', non-CODE-d	{#insert zvALL_PARAMS_stCB}{#insert zvDISPLAY_stQcnstrQ}{#insert z1PPSuperCnstrLinkPapES_M_prmsDsp}{#insert zzKlhsyn_M_yon}	kbrn
kbrr -- kbr, display 'super'	{#insert zzSetAllParamsToCBPapToL1c}<CODE>{#insert z1PPSuperCnstrLinkDispQsprQ_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	kbrr
kbrrl -- kbrh, non-CODE-d	{#insert zzSetAllParamsToCBPapToL1cCIY4NonCdd}{#insert z1PPSuperCnstrLinkDispQsprQ_M_prmsPap}{#insert zzKlhsyn_M_yon}	kbrrl
klh -- Link to THIS-class cnstr, with params-only b4 the cursor (see klhsyn)	{#insert zzSetPapToL1cPostParamsSet}<CODE>{#insert z1PPThisCnstrLinkDispCNm_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	klh
klhh -- klh, display 'this'	{#insert zzSetPapToL1cPostParamsSet}<CODE>{#insert z1PPThisCnstrLinkDispQthsQ_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	klhh
klhhl -- klhh, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCddPostParamsSetDel}{#insert z1PPThisCnstrLinkDispQthsQ_M_prmsPap}{#insert zzKlhsyn_M_yon}	klhhl
klhl -- klh, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCddPostParamsSetDel}{#insert z1PPThisCnstrLinkDispCNm_M_prmsPap}{#insert zzKlhsyn_M_yon}	klhl
klhn -- klh, display 'constructor', non-CODE-d	{#insert zPostParamsSetDel}{#insert zvDISPLAY_stQcnstrQ}{#insert z1PPThisCnstrLinkPapES_M_prmsDsp}{#insert zzKlhsyn_M_yon}	klhn
klhoptsyn	{#BALLOON -title 1+ param cnstr link OPTIONS -text params~only in clip[b]oard, or [l]eft of cursor  //  [h]=THIS class, [r]=super~class  //  Display: [hh]='this', [rr]='super', [n]='constructor'  //  ending~[l]=non~CODE~d, [k]=pre~link class~file link (see klhprksyn)  //  klhsyn}	klhoptsyn
klhpapsyn	{#BALLOON -title Post~</A> params PRE~OPT -text [t,m,v,y] declares what should be displayed after the closing </A>. {#insert zzPreOptsMustBeTxtPap}  //  Examples: rtklrk, mkbrr  //  klhsyn}	klhpapsyn
klhprksyn	{#BALLOON -title Pre~link class~file link PRE~OPT -text [i,I,r,R,y,Y] declares the style of pre~link class~file link. {#insert zzPreOptsMustBeTxtPrk}  //  Example: imklrk  //  klhsyn}	klhprksyn
klhsyn	{#BALLOON -title Syntax: 1+ param Java constructor link -text {#insert zzKlhsyns1of2}=cnstr link  //  {#insert zzKlhsyns2of2}=w/ pre~link file~link  //  Options: klhoptsyn, [i,I,r,R,y,Y]=klhprksyn, [t,m,v,y]=klhprksyn  //  k[b[h,r],l]n=display 'cnstr'  //  klhtestall  //  javasyn}	klhsyn
zzKlhsyns1of2	[t,m,v,y]k[b,l][h[h],r[r]][l]	zzKlhsyns1of2
zzKlhsyns2of2	[i,I,r,R,y,Y][t,m,v,y]k[b,l]r[l]k	zzKlhsyns2of2
klhtestall	{#insert zFcsTPFileNew}{#insert zzDlgStartingTestSynOffWrn}{#insert zzzSetPapPap2ToPrompt}{#insert zzzSetPrkPrk2ToPrompt}{#insert zvSYNTAX_ON_stES}{#insert zzDemoJavaClassLine}Testing function parameters:{#insert zzzEnterTestFuncParams}{#insert zENTER2}{#insert zzzTstYLToYTWarningTxt}{#insert zzzTstPap2}kbh{#insert zzzEnterPapSetCBToTestFuncParams}{#insert kbh}{#insert zzzEtrTstPap2}kbhh{#insert zzzEnterPapSetCBToTestFuncParams}{#insert kbhh}{#insert zzzEtrTstPap2ForNonCdd}kbhhl{#insert zzEnterPap2ForNonCddSetCBToTestFuncParams}{#insert kbhhl}{#insert zzzEtrTstPap2ForNonCdd}kbhl{#insert zzEnterPap2ForNonCddSetCBToTestFuncParams}{#insert kbhl}{#insert zENTER}kbhn{#insert zENTER}{#insert zzSetCBToTestFuncParams}{#insert kbhn}{#insert zzzEtrTstPap2}kbr{#insert zzzEnterPapSetCBToTestFuncParams}{#insert kbr}{#insert zzzEtrTstPrek2Pap2}kbrk{#insert zzzEtrTstPrek2Pap2}{#insert zzSetCBToTestFuncParams}{#insert kbrk}{#insert zzzEtrTstPap2ForNonCdd}kbrl{#insert zzEnterPap2ForNonCddSetCBToTestFuncParams}{#insert kbrl}{#insert zzzEtrTstPrekPap4NonCdd}kbrlk{#insert zzzEtrTstPrekPap4NonCdd}{#insert zzSetCBToTestFuncParams}{#insert kbrlk}{#insert zENTER}kbrn{#insert zENTER}{#insert zzSetCBToTestFuncParams}{#insert kbrn}{#insert zzzEtrTstPap2}kbrr{#insert zzzEnterPapSetCBToTestFuncParams}{#insert kbrr}{#insert zzzEtrTstPap2ForNonCdd}kbrrl{#insert zzEnterPap2ForNonCddSetCBToTestFuncParams}{#insert kbrrl}{#insert zzzEtrTstPap2}klh{#insert zzEnterPrintTestFuncParamsPap}{#insert klh}{#insert zzzEtrTstPap2}klhh{#insert zzEnterPrintTestFuncParamsPap}{#insert klhh}{#insert zzzEtrTstPap2ForNonCdd}klhhl{#insert zzEnterPrintTestFuncParamsPap4NonCdd}{#insert klhhl}{#insert zzzEtrTstPap2ForNonCdd}klhl{#insert zzEnterPrintTestFuncParamsPap4NonCdd}{#insert klhl}{#insert zENTER}klhn{#insert zzzEnterTestFuncParams}{#insert klhn}{#insert zzzEtrTstPap2}klr{#insert zzEnterPrintTestFuncParamsPap}{#insert klr}{#insert zzzEtrTstPrek2Pap2}klrk{#insert zzzEnterTestFuncParams}{#insert zzzTstPrek2Pap2}{#insert klrk}{#insert zzzEtrTstPap2ForNonCdd}klrl{#insert zzEnterPrintTestFuncParamsPap4NonCdd}{#insert klrl}{#insert zzzEtrTstPrekPap4NonCdd}klrlk{#insert zzzEnterTestFuncParams}{#insert zzzTstPrekPap2ForNonCdd}{#insert klrlk}{#insert zENTER}klrn{#insert zzzEnterTestFuncParams}{#insert klrn}{#insert zzzEtrTstPap2}klrr{#insert zzEnterPrintTestFuncParamsPap}{#insert klrr}{#insert zzzEtrTstPap2ForNonCdd}klrrl{#insert zzEnterPrintTestFuncParamsPap4NonCdd}{#insert klrrl}{#insert zENTER}{#insert zvSYNTAX_ON_stOn}{#insert zzKlhsyn_M_yon}	klhtestall
klr -- Link to super-class cnstr, with params-only b4 the cursor (no target pre-opt-char)	{#insert zzSetPapToL1cPostParamsSet}<CODE>{#insert z1PPSuperCnstrLinkDispCNm_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	klr
klrk -- klr, w/ pre-link file-link	{#insert zvPAP_TMVY_stL1c}{#insert zzCutSetPrekL1c}{#insert zPostParamsSetDel}<CODE>{#insert z1PPSuperCnstrLinkWPrekDispCNm_M_prmsPapPrk}</CODE>{#insert zzKlhsyn_M_yon}	klrk
klrl -- klr, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCddPostParamsSetDel}{#insert z1PPSuperCnstrLinkDispCNm_M_prmsPap}{#insert zzKlhsyn_M_yon}	klrl
klrlk -- klrk, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCdd}{#insert zzCutSetPrekL1c}{#insert zPostParamsSetDel}{#insert z1PPSuperCnstrLinkWPrekDispCNm_M_prmsPapPrk}{#insert zzKlhsyn_M_yon}	klrlk
klrn -- klr, display 'constructor', non-CODE-d	{#insert zPostParamsSetDel}{#insert zvDISPLAY_stQcnstrQ}{#insert z1PPSuperCnstrLinkPapES_M_prmsDsp}{#insert zzKlhsyn_M_yon}	klrn
klrr -- klr, display 'super'	{#insert zzSetPapToL1cPostParamsSet}<CODE>{#insert z1PPSuperCnstrLinkDispQsprQ_M_prmsPap}</CODE>{#insert zzKlhsyn_M_yon}	klrr
klrrl -- klrh, non-CODE-d	{#insert zzSetPapToL1cCIY4NonCddPostParamsSetDel}{#insert z1PPSuperCnstrLinkDispQsprQ_M_prmsPap}{#insert zzKlhsyn_M_yon}	klrrl
lybadinfo	{#BALLOON -title WARNING: non-CODE-d & 'y' pap bad -text The 'y' post-</A> parameter pre-option-character is valid only for CODE-d (1+ parameter) function/constructor links (such as klh or kglk). Attempting the 'y' pap pre-opt-char w/ a non-CODE-d link will result in an error.  //  See: kgl[pap]syn, klh[pap]syn}	lybadinfo
