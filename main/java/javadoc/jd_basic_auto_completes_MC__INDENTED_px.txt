 __XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
@see  #	@see  #	@se
@see  #	@see  #	2se
@return	@return  (*ends w 2spc*)	2re
@return	@return  (*ends w 2spc*)	@re
@return  <CODE>...</CODE>	@return  <CODE>{#insert zYmark}</CODE>{#insert zYUp}	2re
@return  <CODE>...</CODE>	@return  <CODE>{#insert zYmark}</CODE>{#insert zYUp}	@re
@return  <I>{@code this}</I>	@return  <I>{@code this}</I>	2re
@return  <I>{@code this}</I>	@return  <I>{@code this}</I>	@re
@return  {@code ...}	@return  {@code {#insert zYmark}\\\}{#insert zYUp}	2re
@return  {@code ...}	@return  {@code {#insert zYmark}\\\}{#insert zYUp}	@re
@exception	@exception  (*ends w 2spc*)	2ex
@exception	@exception  (*ends w 2spc*)	@ex
{@docRoot}/	{@docRoot\\\}/	[2
{@docRoot}/	{@docRoot\\\}/	{@
{@code ...} -- c  (also: '[2c')	{@code {#CURSOR}\\\}	{@
	{@code ''}	{@code {#insert zAscQQ}{#CURSOR}{#insert zAscQQ}\\\}	{@c
	{@code '[paste]'}	{@code {#insert zAscQQ}{#insert zTPPaste}{#insert zAscQQ}\\\}	{@c
	{@code [paste]}	{@code {#insert zTPPaste}\\\}	{@c
{@code ...} -- c	{@code {#CURSOR}\\\}	[2
	{@code ''}	{@code {#insert zAscQQ}{#CURSOR}{#insert zAscQQ}\\\}	[2c
	{@code '[paste]'}	{@code {#insert zAscQQ}{#insert zTPPaste}{#insert zAscQQ}\\\}	[2c
	{@code [paste]}	{@code {#insert zTPPaste}\\\}	[2c
{@literal ...}	{@literal {#CURSOR}\\\}	[2
{@literal ...}	{@literal {#CURSOR}\\\}	{@
{@link ...} -- l	(*Make changes to the '[2' branch, then duplicate it to the '{@' branch*){@link {#CURSOR}}	{@
	 1. {@link [paste]}	{@link {#insert zTPPaste}}	{@l
	 2. {@link #[paste]}	{@link #{#insert zTPPaste}\\\}	{@l
	 3. {@link ... [paste]}	{@link {#insert zXmark} {#insert zTPPaste}\\\}{#insert zXUp}	{@l
	 4. {@link #... [paste]}	{@link #{#insert zXmark} {#insert zTPPaste}\\\}{#insert zXUp}	{@l
	 5. {@link Class}.{@link Class#OBJ OBJ}	{#insert zzAtLinkPreClsLinkDotObj}	{@l
	 6. {@link Class#OBJ OBJ}	{@link {#insert zTPPaste}{#insert zzzCopySpcPasteL1w}\\\}	{@l
	 7. Class.{@link Class#OBJ OBJ}	{#insert zzAtLinkPreClsDotObj}	{@l
	Display function name -- f	.	{@l
		1. {@link [paste]} -- ALL in this list display the function name	{#insert zzAtLinkUseFuncNameAsDispNoHash_M_urlcb}	{@lf
		2. {@link #[paste]}	{#insert zzAtLinkUseFuncNameAsDispWHash_M_urlcb}	{@lf
		3. {@link Class}.{@link [paste]}	{#insert zzAtLinkPreClsDotFunc}	{@lf
		4. {@link SuperClass}.{@link [paste]}	{#insert zzAtLinkPreClsSprDotFunc}	{@lf
		5. CLASS.{@link [paste]}	{#insert zzAtLinkPreClsSprDotFunc}	{@lf
		6. {@link #[paste] super} -- Super-constructor	{@link #{#insert zTPPaste} super\\\}	{@lf
		7. {@link [paste] super} -- Super-constructor	{@link {#insert zTPPaste} super\\\}	{@lf
{@link ...} -- l	(*Make changes to the '[2' branch, then duplicate it to the '{@' branch*){@link {#CURSOR}}	[2
	 1. {@link [paste]}	{@link {#insert zTPPaste}}	[2l
	 2. {@link #[paste]}	{@link #{#insert zTPPaste}\\\}	[2l
	 3. {@link ... [paste]}	{@link {#insert zXmark} {#insert zTPPaste}\\\}{#insert zXUp}	[2l
	 4. {@link #... [paste]}	{@link #{#insert zXmark} {#insert zTPPaste}\\\}{#insert zXUp}	[2l
	 5. {@link Class}.{@link Class#OBJ OBJ}	{#insert zzAtLinkPreClsLinkDotObj}	[2l
	 6. {@link Class#OBJ OBJ}	{@link {#insert zTPPaste}{#insert zzzCopySpcPasteL1w}\\\}	[2l
	 7. Class.{@link Class#OBJ OBJ}	{#insert zzAtLinkPreClsDotObj}	[2l
	Display function name -- f	.	[2l
		1. {@link [paste]} -- ALL in this list display the function name	{#insert zzAtLinkUseFuncNameAsDispNoHash_M_urlcb}	[2lf
		2. {@link #[paste]}	{#insert zzAtLinkUseFuncNameAsDispWHash_M_urlcb}	[2lf
		3. {@link Class}.{@link [paste]}	{#insert zzAtLinkPreClsDotFunc}	[2lf
		4. {@link SuperClass}.{@link [paste]}	{#insert zzAtLinkPreClsSprDotFunc}	[2lf
		5. Class.{@link [paste]}	{#insert zzAtLinkPreClsSprDotFunc}	[2lf
		6. {@link #[paste] super} -- Super-constructor	{@link #{#insert zTPPaste} super\\\}	[2lf
		7. {@link [paste] super} -- Super-constructor	{@link {#insert zTPPaste} super\\\}	[2lf
{@linkplain ...} -- p   (also: '[2p')	{@linkplain {#CURSOR}}	{@
	1. {@linkplain [paste]}	{@linkplain {#insert zTPPaste}}	{@p
	2. {@linkplain #[paste]}	{@linkplain #{#insert zTPPaste}\\\}	{@p
	3. {@linkplain #... [paste]}	{@linkplain #{#insert zXmark} {#insert zTPPaste}\\\}{#insert zXUp}	{@p
	4. {@linkplain ... [paste]}	{@linkplain {#insert zXmark} {#insert zTPPaste}}{#insert zXUp}	{@p
{@linkplain ...} -- p	{@linkplain {#CURSOR}}	[2
	1. {@linkplain [paste]}	{@linkplain {#insert zTPPaste}}	[2p
	2. {@linkplain #[paste]}	{@linkplain #{#insert zTPPaste}\\\}	[2p
	3. {@linkplain #... [paste]}	{@linkplain #{#insert zXmark} {#insert zTPPaste}\\\}{#insert zXUp}	[2p
	4. {@linkplain ... [paste]}	{@linkplain {#insert zXmark} {#insert zTPPaste}}{#insert zXUp}	[2p
non --  non-{@code null}	non-{@code null}	non
non -- <B>non-{@code null}</B>	<B>non-{@code null}</B>	non
shou -- <I>Should</I> not be {@code nul	<I>Should</I> not be {@code nl}
shou -- <I>Should</I> not be {@code null} or empt	<I>Should</I> not be {@code null} or ey.
<PRE>{@literal ...}</PRE>	<PRE>{@literal {#CURSOR}\\\}</PRE>	<PR
<PRE>{@literal ...}</PRE>	<PRE>{@literal {#CURSOR}\\\}</PRE>	,PR
<A H -- <CODE><!-- GENERIC PARAMETERS FAIL... 	<CODE>{#insert zzzGenericsFailsInJDHrefLink}</CODE>	<A H
<A H -- <!-- GENERIC PARAMETERS FAIL... 	{#insert zzzGenericsFailsInJDHrefLink}	<A H
<A H -- <CODE><!-- GENERIC PARAMETERS FAIL... 	<CODE>{#insert zzzGenericsFailsInJDHrefLink}</CODE>	,A H
<A H -- <!-- GENERIC PARAMETERS FAIL... 	{#insert zzzGenericsFailsInJDHrefLink}	,A H
