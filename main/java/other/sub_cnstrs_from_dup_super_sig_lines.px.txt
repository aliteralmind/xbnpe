__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
dcnstr -- Duplicate super constructor signature in sub-class	{#SETPHRASE -description zvCNSTR_CNT -content 1 -autotext zvCNSTR_CNT -folder ctvv_folder}{#insert zzSubCnstrFromSprSigLines_M_cnsc}{#insert zBalloonDone}{#sleep 2000}{#insert zzDcnstrsyn_M_yon}	dcnstr
dcnstrs -- dcnstr for multiple signatures	{#SETPHRASE -description zvCNSTR_CNT -content {#INPUT -head How many constructors? (1+) -single} -autotext zvCNSTR_CNT -folder ctvv_folder}{#insert zzSubCnstrFromSprSigLines_M_cnsc}{#insert zBalloonDone}{#sleep 2000}{#insert zzDcnstrsyn_M_yon}	dcnstrs
dcnstrsx	{#insert zXmark}public GLTRawIsListOfE(boolean b_elementsCopyable, String s_rgcName)  {{#insert zEnterBksp}public GLTRawIsListOfE(List<Q> l_st, boolean b_elementsCopyable, String s_rgcName)  {{#insert zEnterBksp}public GLTRawIsListOfE(List<Q> l_st, boolean b_elementsCopyable, ExceptionContext x_c)  {{#insert zEnterBksp}{#insert zXUp}{#insert zzSqBrkCURSORSlk2Bksp8}	dcnstrsx
dcnstrsyn	{#BALLOON -title Syntax: Duplicate super~cnstr from sig~lines -text {#insert zzDcnstrsyns}=Create sub~class constructors from DUPLICATE super~class signature lines.  //  [s]=multiple, [x]=example input  //  dcnstrsyn  //  javasyn}	dcnstrsyn
zzAtJDEqlToParaEnd_delSprCnstrSigGTNextSprSigAstrk2srchtrm -- Needs search-term='**'	{#insert zHOME}(*Search-term is two asterisks:*){#insert zTPFindPrev}{#insert zUP}{#insert zHOME}{#insert zSelectEntireLine}{#insert zDEL}{#insert zTMFindNextJavaFuncSigLine}{#insert zRIGHT}{#insert zTPMatchBracket}{#insert zDownGT1stNonWSCharInLine}	zzAtJDEqlToParaEnd_delSprCnstrSigGTNextSprSigAstrk2srchtrm
zzDcnstrsyns	dcnstr[s[x]]	zzDcnstrsyns
zzDcnstrIntroDlg	{#MSGBOX -head dcnstrs intro -text {#insert zzDcnstrsyns}  //  About to create sub~class constructor(s) from duplicate super~class signature lines. Generic~types THAT ARE ENCLOSED IN < and > should be changed to as needed by the sub~class. See 'dcnstrsx' for example input.  //  Cursor must be somewhere in the first signature line.  //  WARNINGS: Word~wrap must be on, and the constructors must have either public or protected access (package protected not allowed), no empty~lines between the signatures, each signature must be contained on a single line.}	zzDcnstrIntroDlg
zzDcnstrsyn_M_yon -- Needs zvSYNTAX_ON	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then dcnstrsyn -else z1slp}}	zzDcnstrsyn_M_yon
zzSubCnstrFromSprSigLines_M_cnsc -*- Needs zvCNSTR_CNT	{#insert zzDcnstrIntroDlg}{#insert zWordWrapOffFromTPDfltState}{#insert zHOME}{#insert zMoveR2w}{#insert zCopyL1w}{#insert zvFOBJ_NAME_stCB}{#insert zvDRN_stU}{#insert zvPAP_stM}{#insert zvPREK_stES}{#insert zvDISPLAY_stQspr}{#insert zXJavaCopyThisClassNmXDownDel}(*Needed search-term:*){#insert zFindDlgOpenMCOnly}**{#insert zFindDlgClose}{#SETPHRASE -description zvTHIS_CLS_NM -content {#INSERTCLIPBOARD} -autotext zvTHIS_CLS_NM -folder ctvv_folder}{#LOOP {#insert zzWWoff_dupSuperCnstrSigCreateSubBodyGTBodyStart_M_tcm}{#insert zzWWoffAtSubSigStart_dupCnstrCreateJDBlock_M_tcmDrnPapPrkeDspqspr}{#insert zzAtJDEqlToParaEnd_delSprCnstrSigGTNextSprSigAstrk2srchtrm} -count {#insert zvCNSTR_CNT}}{#insert zWordWrapOn}	zzSubCnstrFromSprSigLines_M_cnsc
zzWWoffAtSubSigStart_dupCnstrCreateJDBlock_M_tcmDrnPapPrkeDspqspr_M_tcmDrnPapPrkeDspqspr -(*Needs*)-	(*Needs: zvTHIS_CLS_NM, zvFOBJ_NAME=super, zvDRN_stU, zvPAP_stM, zvPREK_stES, zvDISPLAY_stQspr*){#insert zzEtrUpSlshAstrAstrEnterTab}<P>Create a new <CODE>{#insert zvTHIS_CLS_NM}</CODE>.</P>{#insert zENTER2}{#insert zYmark}{#insert zENTER2}{#insert zzPEqlToThrOpenCode}{#insert zXmark}{#insert z1PPJTRCnstrKFromPrv1SigParamsAtX_M_wycHunFnmDspPapPrk}</CODE></P>{#insert zEnterBksp} **/	zzWWoffAtSubSigStart_dupCnstrCreateJDBlock_M_tcmDrnPapPrkeDspqspr
zzWWoff_dupSuperCnstrSigCreateSubBodyGTBodyStart_M_tcm -- Needs zvTHIS_CLS_NM	{#insert zTPDupLine}{#insert zHOME}{#insert zzAtJFSigStartSelectFuncName}{#insert zvTHIS_CLS_NM}{#insert zEND}{#insert zENTER}super{#insert zzSetAngToNWycTo1}{#insert zzXPastePrvJFParamsAtCrsrDelRqstdFrom_M_wycAng};{#insert zENTER}\\\}{#insert zTPMatchBracket}{#insert zGT1stNonWSCharInLine}	zzWWoff_dupSuperCnstrSigCreateSubBodyGTBodyStart_M_tcm
