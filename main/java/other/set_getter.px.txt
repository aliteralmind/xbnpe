__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
jdbg1 -- Getter using DUPED just-above sig line, param 1	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnToPrevPpnToNextParamNumTo1}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbg1
jdbg2 -- jdbg1, param 2	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnToPrevPpnToNextParamNumTo2}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbg2
jdbg3 -- jdbg1, param 3	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnToPrevPpnToNextParamNumTo3}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbg3
jdbg4 -- jdbg1, param 4	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnToPrevPpnToNextParamNumTo4}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbg4
jdbg5 -- jdbg1, param 5	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnToPrevPpnToNextParamNumTo5}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbg5
jdbga -- Getter using DUPED just-above sig line, LAST param	{#insert zzSetGpnPpnToPrevParamNumTo1}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbga
jdbgb -- jdbga, 2nd-to-last param	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnPpnToPrevParamNumTo2}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbgb
jdbgc -- jdbga, 3rd-to-last param	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnPpnToPrevParamNumTo3}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbgc
jdbgd -- jdbga, 4th-to-last param	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnPpnToPrevParamNumTo4}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbgd
jdbge -- jdbga, 5th-to-last param	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnPpnToPrevParamNumTo5}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbge
jdbggn -- jdbga, [prompt #]-to-last param	{#insert zvF_OR_H_stL1w}{#insert zzSetGpnPpnToPrevParamNumToPrompt}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbggn
jdbgn -- jdbg1, [prompt #] param	{#insert zvF_OR_H_stL1w}{#insert zvF_OR_H_stL1w}{#insert zzSetGpnToPrevPpnToNextParamNumToPrompt}{#insert zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh}{#insert zzJsgsyn_M_yon}	jdbgn
jsgd -- Getter & setter have unrelated names: getIt, setThat	{#insert zCutL1w}{#SETPHRASE -description zvSETTER_NM -content {#INSERTCLIPBOARD} -autotext zvSETTER_NM -folder ctvv_folder}{#insert zBKSP}{#insert zCutL1w}{#SETPHRASE -description zvGETTER_NM -content {#INSERTCLIPBOARD} -autotext zvGETTER_NM -folder ctvv_folder}{#insert zBKSP}{#insert zzSetParamIntrnlDfltTypeFromL1wX4}{#insert zJavaSetGetter_M_gtrSttrPnmInmTyp}{#insert zzJsgsyn_M_yon}	jsgd
jsgdx -- Example parameters	String sS s_s getString setIt[CURSOR]{#insert zzJsgsyn_M_yon}	jsgdx
jsgs -- Getter & setter have same postfix: getIt, setIt	{#insert zCutL1w}{#SETPHRASE -description zvSET_GET_POST -content {#INSERTCLIPBOARD} -autotext zvSET_GET_POST -folder ctvv_folder}{#insert zBKSP}{#insert zzSetParamIntrnlDfltTypeFromL1wX4}{#SETPHRASE -description zvGETTER_NM -content get{#insert zvSET_GET_POST} -autotext zvGETTER_NM -folder ctvv_folder}{#SETPHRASE -description zvSETTER_NM -content set{#insert zvSET_GET_POST} -autotext zvSETTER_NM -folder ctvv_folder}{#insert zJavaSetGetter_M_gtrSttrPnmInmTyp}{#insert zzJsgsyn_M_yon}	jsgs
jsgsx -- Example parameters	String sS s_s TheString[CURSOR]{#insert zzJsgsyn_M_yon}	jsgsx
jsgsyn	{#BALLOON -title Syntax: Java setter-getter -text {#insert zzJsgsyns1of2}=Create setter & getter for 1 var ([s]=func~name postfixes eql, [d]=diff, [x]=xmpl input) // {#insert zzJsgsyns2of2}=gtr JD blk from DUPED sig~ln up ([f]=fnc~nm, [h]='this', [1~5,a~z,[g]n]=For specific param, [n]=prompt, [a]=LAST) // javasyn}	jsgsyn
zzJsgsyn_M_yon -- Needs zvSYNTAX_ON	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then jsgsyn -else z1slp}}	zzJsgsyn_M_yon
zJavaSetGetter_M_gtrSttrPnmInmTyp -- Needs zvSETTER_NM, zvGETTER_NM, zvPARAM_NM, zvINTRNL_NM, zvTYPE	{#insert zvGENERICS_stPrompt_M_typ}{#MSGBOX -head Init line? -text Need initialization line? -yes zzJsgInitLine_M_typInmGnr -no z1slp}{#MSGBOX -head Setter? -text Need setter function? -yes zzJsgSetter_M_gtrSttrPnmInmTypGnr -no z1slp}{#MSGBOX -head Getter? -text Need getter function? -yes zzJsgGetter_M_gtrSttrPnmInmTypGnr -no z1slp}	zJavaSetGetter_M_gtrSttrPnmInmTyp
zvNULL_BAD_Y_stYes	{#SETPHRASE -description zvNULL_BAD_Y -content yes -autotext zvNULL_BAD_Y -folder ctvv_folder}	zvNULL_BAD_Y_stYes
zzErrDlgBadJsgParams -- Also use for debugging	{#MSGBOX -head ERROR -text ERROR ~~ Bad parameters for jsg[d,s]: zvSETTER_NM='{#insert zvSETTER_NM}', zvGETTER_NM='{#insert zvGETTER_NM}', zvPARAM_NM='{#insert zvPARAM_NM}', zvINTRNL_NM='{#insert zvINTRNL_NM}', zvTYPE='{#insert zvTYPE}'  //  See jsg[d,s]x for examples, and jsg[d]syn for more info.{#insert zCancelProcNowPostTxt}}	zzErrDlgBadJsgParams
zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh -- Needs zvGPRV_NXT, zvPNXT_PRV, zvPARAM_NUM, zvF_OR_H	{#insert zvANG_stN}{#insert zXmark}{#insert zzSelCopyParamPart_M_angGpnPpnPnum}{#SETPHRASE -description zvPARAM_NAME -content {#INSERTCLIPBOARD} -autotext zvPARAM_NAME -folder ctvv_folder}{#insert zTPSelectParagraph}{#insert zJFSigLineSlctd_selCopyEntireSig}{#insert zParaNotAtCol0_deleteEntire}{#insert zXUpDownOppositeDir_M_gpn}{#insert zSigInCBSetFuncNmSetCIBParams}{#insert zzGetterJDBlock_M_fnmPrmsPnmFh}	zzGetterJDBlockWDupedSigLineUp_M_gPpnPnumFh
zzGetterJDBlock_M_fnmPrmsPnmFh -- Needs zvFOBJ_NAME, zvALL_PARAMS, zvPARAM_NAME	{#insert zzEtrUpSlshAstrAstrEnterTab}<P>Get{#insert zYmark}</P>{#insert zENTER2}{#insert zYmark}{#insert zENTER2}@return  <CODE>{#insert zvPARAM_NAME}</CODE>  As provided to {#insert zzSetDrnToHPapToV}<CODE>{#insert {#COND -if {#insert zvF_OR_H} = f -then zvDISPLAY_stFncObjNm -else {#COND -if {#insert zvF_OR_H} = h -then zvDISPLAY_stQths -else zzDlgBadFOrH_M_fh}}}{#insert z1PPFuncLink_M_drnFnmPrmsDspPap}</CODE>.{#insert zEnterBksp} **/{#insert zDOWN}{#insert zGT1stNonWSCharInLine}	zzGetterJDBlock_M_fnmPrmsPnmFh
zzDlgBadFOrH_M_fh -- Needs zvF_OR_H	{#MSGBOX -head ERROR -text ERROR ~~ Pre-option must be 'f' or 'h'. Currently, zvF_OR_H='{#insert zvF_OR_H}'{#insert zCancelProcNowPostTxt}}	zzDlgBadFOrH_M_fh
zzJsgCINullEmptyIfBlk_M_pnmSttr	if({#insert zvPARAM_NM} == null  ||  {#insert zvPARAM_NM}.length() == 0)  {{#insert zENTER}throw  new IllegalArgumentException({#insert zAscQQ}{#insert zvSETTER_NM}: {#insert zvPARAM_NM} (currently \{#insert zAscQQ}{#insert zAscQQ} + {#insert zvPARAM_NM} + {#insert zAscQQ}\{#insert zAscQQ}) is either null has no characters{#insert zAscQQ});{#insert zENTER}\\\}{#insert zENTER}	zzJsgCINullEmptyIfBlk_M_pnmSttr
zzJsgCINullEmptyXCI_M_pnmSttr	ciNullEmptyString({#insert zvPARAM_NM}, {#insert zAscQQ}{#insert zvSETTER_NM}{#insert zAscQQ}, {#insert zAscQQ}{#insert zvPARAM_NM}{#insert zAscQQ});{#insert zENTER}	zzJsgCINullEmptyXCI_M_pnmSttr
zzJsgCINullEmpty_M_pnmSttr	{#MSGBOX -head If block or XBN-style -text Catch null in a basic if-null-or-empty block, or with XBN-Java's ciNullEmptyString(...)? (the latter must extend xbn.lang.XBNObject) -ok zzJsgCINullEmptyIfBlk_M_pnmSttr -cancel zzJsgCINullEmptyXCI_M_pnmSttr}	zzJsgCINullEmpty_M_pnmSttr
zzJsgCINullIfBlk_M_pnmSttr	if({#insert zvPARAM_NM} == null)  {{#insert zENTER}throw  new NullPointerException({#insert zAscQQ}{#insert zvSETTER_NM}: {#insert zvPARAM_NM}{#insert zAscQQ});{#insert zENTER}\\\}{#insert zENTER}	zzJsgCINullIfBlk_M_pnmSttr
zzJsgCINullXCI_M_pnmSttr	ciNull({#insert zvPARAM_NM}, {#insert zAscQQ}{#insert zvSETTER_NM}{#insert zAscQQ}, {#insert zAscQQ}{#insert zvPARAM_NM}{#insert zAscQQ}, null);{#insert zENTER}	zzJsgCINullXCI_M_pnmSttr
zzJsgGetter_M_gtrSttrPnmInmTypGnr -(*Needs*)- 	(*Needs zvSETTER_NM, zvGETTER_NM, zvPARAM_NM, zvINTRNL_NM, zvTYPE, zvGENERICS*)/**{#insert zEnterTab}<P>Get{#insert zYmark}.</P>{#insert zENTER2}@return  <CODE>{#insert zvPARAM_NM}</CODE>, as provided to <CODE><A HREF={#insert zAscQQ}#{#insert zvSETTER_NM}(_4FQP_{#insert zvTYPE}){#insert zAscQQ}>{#insert zvSETTER_NM}</A>((*Set-get, so the default uses the last value:*){#SETPHRASE -description zvTYPE_ABRV -content {#INPUT -head Type abbrev for '{#insert zvTYPE}'? -def {#insert zvTYPE_ABRV} -single} -autotext zvTYPE_ABRV -folder ctvv_folder}{#insert zvTYPE_ABRV})</CODE>{#insert zEnterBksp} **/{#insert zENTER}{#insert zBKSP}public {#insert zvTYPE}{#insert zGenericsInSharpsIfNotES_M_gnr} {#insert zvGETTER_NM}()  {{#insert zENTER}return  {#insert zvINTRNL_NM};{#insert zEnterBksp}\\\}{#insert zENTER}	zzJsgGetter_M_gtrSttrPnmInmTypGnr
zzJsgInitLine_M_typInmGnr -- Needs zvGENERICS	private {#insert zvTYPE}{#insert zGenericsInSharpsIfNotES_M_gnr} {#insert zvINTRNL_NM} = {#INPUT -head Init value? -def null -single};{#insert zENTER}	zzJsgInitLine_M_typInmGnr
zzJsgMnbn	{#insert zvNULL_BAD_Y_stYes}May not be <CODE>null</CODE>. (*ends w spc*)	zzJsgMnbn
zzJsgMnbnFromPrompt_M_typ -- Needs zvTYPE. Sets zvNULL_BAD_Y, zvEMPTY_BAD_Y	{#insert {#COND -if {#insert zvTYPE} = String -then zzJsgStrMnbnDlg -else {#COND -if {#LOWERCASE {#SUBSTR {#insert zvTYPE} -from 1 -count 1}} != {#SUBSTR {#insert zvTYPE} -from 1 -count 1} -then zzJsgObjMnbnDlg -else z1slp}}}	zzJsgMnbnFromPrompt_M_typ
zzJsgMnbne	{#insert zvNULL_BAD_Y_stYes}{#SETPHRASE -description zvEMPTY_BAD_Y -content yes -autotext zvEMPTY_BAD_Y -folder ctvv_folder}May {#insert zzNbne}. (*ends w spc*)	zzJsgMnbne
zzJsgObjMnbnDlg	{#MSGBOX -head Object null ok? -text [OK]=May not be null. [Cancel]=null and empty are okay. -ok zzJsgMnbn -cancel z1slp}	zzJsgObjMnbnDlg
zzJsgSetter_M_gtrSttrPnmInmTypGnr -(*Needs*)-	(*Needs zvSETTER_NM, zvGETTER_NM, zvPARAM_NM, zvINTRNL_NM, zvTYPE, zvGENERICS*){#SETPHRASE -description zvNULL_BAD_Y -content -autotext zvNULL_BAD_Y -folder ctvv_folder}{#SETPHRASE -description zvEMPTY_BAD_Y -content -autotext zvEMPTY_BAD_Y -folder ctvv_folder}/**{#insert zEnterTab}<P>Set{#insert zYmark}.</P>{#insert zENTER2}@param  {#insert zvPARAM_NM}  {#insert zYmark}. {#insert zzJsgMnbnFromPrompt_M_typ}Get with <CODE><A HREF={#insert zAscQQ}#{#insert zvGETTER_NM}(){#insert zAscQQ}>{#insert zvGETTER_NM}</A>()</CODE>{#insert zEnterBksp} **/{#insert zENTER}{#insert zBKSP}public void {#insert zvSETTER_NM}({#insert zvTYPE}{#insert zGenericsInSharpsIfNotES_M_gnr} {#insert zvPARAM_NM})  {{#insert zENTER}{#insert {#COND -if {#insert zvNULL_BAD_Y} = yes -then {#COND -if {#insert zvEMPTY_BAD_Y} = yes -then zzJsgCINullEmpty_M_pnmSttr -else zzJsgCINullIfBlk_M_pnmSttr} -else z1slp}}{#insert zvINTRNL_NM} = {#insert zvPARAM_NM};{#insert zEnterBksp}\\\}{#insert zENTER}	zzJsgSetter_M_gtrSttrPnmInmTypGnr
zzJsgStrMnbnDlg	{#MSGBOX -head String null/empty ok? -text [Yes]=May not be null or empty. [No]=May not be null. [Cancel]=null and empty are okay. -yes zzJsgMnbne -no zzJsgMnbn -cancel z1slp}	zzJsgStrMnbnDlg
zzJsgsyns1of2	jsg[d,s][x]	zzJsgsyns1of2
zzJsgsyns2of2	[f,h]jdbg[1~5,a~z,[g]n]	zzJsgsyns2of2
zzSetParamIntrnlDfltTypeFromL1wX4	{#insert zCutL1w}{#SETPHRASE -description zvPARAM_NM -content {#INSERTCLIPBOARD} -autotext zvPARAM_NM -folder ctvv_folder}{#insert zBKSP}{#insert zCutL1w}{#SETPHRASE -description zvINTRNL_NM -content {#INSERTCLIPBOARD} -autotext zvINTRNL_NM -folder ctvv_folder}{#insert zBKSP}{#insert zCutL1w}{#SETPHRASE -description zvTYPE -content {#INSERTCLIPBOARD} -autotext zvTYPE -folder ctvv_folder}{#insert {#COND -if {#LENGTH {#insert zvTYPE}} > 0  -then z1slp -else {#COND -if {#LENGTH {#insert zvINTRNL_NM}} > 0  -then z1slp -else zzErrDlgBadJsgParams}}}	zzSetParamIntrnlDfltTypeFromL1wX4
zvF_OR_H_stL1w	{#insert zCutL1w}{#SETPHRASE -description zvF_OR_H -content {#INSERTCLIPBOARD} -autotext zvF_OR_H -folder ctvv_folder}	zvF_OR_H_stL1w