__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
ddmtt -- Replace all parameter type-name with 1-char type-abrev, for ddmenus	{#MSGBOX -head ddmtt: WARNING -text WARNING: If return-types are still in the file, this will cause function-names to be eliminated!}{#insert zRplcDlgOpenRE}{#insert zzzMidRplcREParamTo1ChrAbrvObj}{#insert zRplcBtnAllTDHnr}{#insert zzzMidRplcREParamTo1ChrAbrvInt}{#insert zRplcBtnAllTDHnr}{#insert zzzMidRplcREParamTo1ChrAbrvBool}{#insert zRplcBtnAllTDHnr}{#insert zzzMidRplcREParamTo1ChrAbrvString}{#insert zRplcBtnAllTDHnr}{#insert zzzMidRplcREParamTo1ChrAbrvAppendable}{#insert zRplcBtnAllTDHnr}{#insert zzzMidRplcREParamTo1ChrAbrvColl}{#insert zRplcBtnAllTDHnr}{#insert zzzMidRplcREParamTo1ChrAbrvCharSequence}{#insert zRplcBtnAllTDHnr}{#insert zzzMidRplcCommaSpaceToComma}{#insert zRplcBtnAllTDHnrRAW}{#insert zRplcDlgCloseRE}	ddmtt
stubf -- Change INTERFACE signature (w/ ';') into return-null stub function.	{#BALLOON -title WARNING -text This will fail unless word wrap was ON when calling this phrase.}{#insert zWordWrapOffFromTPDfltState}{#insert zGT1stNonWSCharInLine}public final {#insert zEND}{#insert zBKSP}  {{#insert zENTER}return  {#insert zXmark};{#insert zENTER}\\\}{#insert zXUp}null{#insert zWordWrapOn}{#insert zTPSelectL1w}{#insert zBalloonDone}	stubf
zzSaveUnsavedJavaFileCurrWkgDir -[zCSApTHREE]-	{#insert zJavaSelCopyThisClassName}{#insert zvDIRECTORY_stES}{#SETPHRASE -description zvFILE_NAME -content {#INSERTCLIPBOARD}.java -autotext zvFILE_NAME -folder ctvv_folder}{#insert zDirFileSave_M_dirFnm}	zzSaveUnsavedJavaFileCurrWkgDir
zzzMidRplcCommaSpaceToComma	{#SETPHRASE -description zvFIND_WHAT -content , ([^{]) -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcFieldWith}{#SETPHRASE -description zvRPLC_WITH -content ,$1 -autotext zvRPLC_WITH -folder ctvv_folder}{#insert zvRPLC_WITH}	zzzMidRplcCommaSpaceToComma
zzzMidRplcREParamTo1ChrAbrvAppendable	{#SETPHRASE -description zvFIND_WHAT -content \bAppendable \w+ -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcFieldWith}{#SETPHRASE -description zvRPLC_WITH -content apbl -autotext zvRPLC_WITH -folder ctvv_folder}{#insert zvRPLC_WITH}	zzzMidRplcREParamTo1ChrAbrvAppendable
zzzMidRplcREParamTo1ChrAbrvBool	{#SETPHRASE -description zvFIND_WHAT -content \bboolean \w+ -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcFieldWith}{#insert zBB}	zzzMidRplcREParamTo1ChrAbrvBool
zzzMidRplcREParamTo1ChrAbrvColl	{#SETPHRASE -description zvFIND_WHAT -content \bCollection<[^>]+> \w+ -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcFieldWith}{#SETPHRASE -description zvRPLC_WITH -content cll -autotext zvRPLC_WITH -folder ctvv_folder}{#insert zvRPLC_WITH}	zzzMidRplcREParamTo1ChrAbrvColl
zzzMidRplcREParamTo1ChrAbrvInt	{#SETPHRASE -description zvFIND_WHAT -content \bint \w+ -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcFieldWith}{#insert zII}	zzzMidRplcREParamTo1ChrAbrvInt
zzzMidRplcREParamTo1ChrAbrvObj	{#SETPHRASE -description zvFIND_WHAT -content \bObject(\[\]|...)? \w+ -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcFieldWith}{#SETPHRASE -description zvRPLC_WITH -content o$1 -autotext zvRPLC_WITH -folder ctvv_folder}{#insert zvRPLC_WITH}	zzzMidRplcREParamTo1ChrAbrvObj
zzzMidRplcREParamTo1ChrAbrvString	{#SETPHRASE -description zvFIND_WHAT -content \bString(\[\]|...)? \w+ -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcFieldWith}{#SETPHRASE -description zvRPLC_WITH -content s$1 -autotext zvRPLC_WITH -folder ctvv_folder}{#insert zvRPLC_WITH}	zzzMidRplcREParamTo1ChrAbrvString
zzzMidRplcREParamTo1ChrAbrvCharSequence	{#SETPHRASE -description zvFIND_WHAT -content \bCharSequence(\[\]|...)? \w+ -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcFieldWith}{#SETPHRASE -description zvRPLC_WITH -content cs$1 -autotext zvRPLC_WITH -folder ctvv_folder}{#insert zvRPLC_WITH}	zzzMidRplcREParamTo1ChrAbrvCharSequence
zzJRegexSymbolClassForCompileOutput -*-	symbol:[ ]+class	zzJRegexSymbolClassForCompileOutput
zzJRegexSymbolClassOrVarForCompileOutput -*-	symbol:[ ]+(?:class|variable)	zzJRegexSymbolClassOrVarForCompileOutput
zzImportJUArrays -- Sub for MC	{#SETPHRASE -description zvPKG -content java.util. -autotext zvPKG -folder ctvv_folder}{#SETCLIPBOARD Arrays}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}	zzImportJUArrays
zzImportJUObjects -- Sub for MC	{#SETPHRASE -description zvPKG -content java.util. -autotext zvPKG -folder ctvv_folder}{#SETCLIPBOARD Objects}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}	zzImportJUObjects
