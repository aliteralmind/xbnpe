
 __XBN-PhraseExpress is released under the LGPL 2.1	(* <--**MUST_HAVE SPACE BEFORE UNDERSCORES, in this file only**  --XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
, _4FQP_	, _4FQP_	, _
,_4TV_	,_4TV_	,_
--this returns <B><CODE>null</CODE></B> (must return &quot;<CODE>this</CODE>&quot; from non-abstract sub-classes).--this returns <B><CODE>null (must return &quot;<CODE>this...	--this returns <B><CODE>null</CODE></B> (must return &quot;<CODE>this</CODE>&quot; from non-abstract sub-classes){#BALLOON -title Related actions -text rnl, rnldb}	--this r
/*stub functions for implements compile	/*stub functions for implements compile...START{#insert zENTER} stub functions for implements compile...END*/{#insert zEnterTab}{#BALLOON -title Write stub functions here -text Move END comment down when done.}	/*stub
/*stub functions for non-abstract compile...	/*stub functions for non-abstract compile...START{#insert zENTER} stub functions for non-abstract compile...END*/{#insert zEnterTab}{#BALLOON -title Write stub functions here -text Move END comment down when done.}	/*stub
//Doc-ed by interface	//Doc-ed by interface	//Doc
//Doc-ed by super	//Doc-ed by super	//Doc
//Functions that do nothing but call their super-version	//Functions that do nothing but call their super-version...START	//Func
//Functions that do nothing but their super-version	//Functions that do nothing but call their super-version...END	//Func
//-: //------------------[enter-tab]	//------------------{#insert zEnterTab}	//-
@SuppressWarnings('...')	@SuppressWarnings({#insert zAscQQ}{#CURSOR}{#insert zAscQQ})	@S
@SuppressWarnings('unchecked')	@SuppressWarnings({#insert zAscQQ}unchecked{#insert zAscQQ})	@S
A base class for implementing... (for *Base.java)	{#insert zzABaseClassForImplementing}	A base c
A base class for implementing... (for *Base.java)	{#insert zzABaseClassForImplementing}	A base-c
An abstract impl of ... (deletes 'Abstract' from cls-nm)	abstract implementation of <CODE>{#insert zXmark}{#insert zJavaSelCopyThisClassName}{#insert zXUpRight}{#insert zPasteXUpDelete}{#RIGHT -count 8}{#insert zTPDeleteL1w}{#insert zSelectR1wCopy}{#insert zRIGHT}</CODE>.{#MSGBOX -head Need 'see Base'? -text Need 'For classes needing to implement...see XBase.java' sentence? -yes zzSeeBaseForAbstrct -no z1slp}	abstr
Instructions on... (_4prot)	<I><A HREF={#insert zAscQQ}{#insert zYmark}/../package-summary.html#_4prot{#insert zAscQQ}>Instructions</A> on implementing this &quot;<CODE>_4prot</CODE>&quot; function.</I>	instru
Simple interface template	/**{#insert zEnterTab}<P>{#insert zYmark}</P>{#insert zEnterBksp} **/{#insert zEnterBksp}public interface {#insert zYmark} extends {#insert zYmark}  {{#insert zENTER}{#insert zYmark}{#insert zENTER}\\\}{#insert zENTER}{#insert zYUp3}	public i
_4FQP_	_4FQP_	_4
_4TV_	_4TV_	_4
greater-than-or-equal-to	greater-than-or-equal-to	great
in sub-classes, this must be overridden or made abstract.	in sub-classes, this function must be overridden or made abstract.	in sub
less-than-or-equal-to	less-than-or-equal-to	less
public c--Simple class template (class name in clipboard)	{#SETPHRASE -description zvFOBJ_NAME -content {#INSERTCLIPBOARD} -autotext zvFOBJ_NAME -folder ctvv_folder}package  {#insert zXmark};{#insert zENTER2}/**{#insert zEnterTab}<P>{#insert zYmark}</P>{#insert zEnterBksp} **/{#insert zEnterBksp}public class {#insert zvFOBJ_NAME} extends {#insert zYmark}  {{#insert zEnterBksp}//constructors...START{#insert zEnterTab}{#insert zYmark}{#insert zEnterBksp}//constructors...END{#insert zENTER}{#insert zENTER}\\\}{#insert zXUp}	public c
public s--getTSPostfix() function (no super-call)	public String getTSPostfix()  {{#insert zENTER}return  {#insert zYmark};{#insert zEnterBksp}\\\}	public s
public s--getTSPostfix() function (w/ super-call)	public String getTSPostfix()  {{#insert zENTER}return  super.getTSPostfix() + ", {#insert zYmark}";{#insert zEnterBksp}\\\}	public s
zzInpClassNm	{#INPUT -head Class name? -single}	zzInpClassNm
