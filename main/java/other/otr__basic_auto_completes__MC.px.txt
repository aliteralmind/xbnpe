
 __XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
, _4FQP_	, _4FQP_	, _
,_4TV_	,_4TV_	,_
--this returns <B><CODE>null</CODE></B> (must return &quot;<CODE>this</CODE>&quot; from non-abstract sub-classes).--this returns <B><CODE>null (must return &quot;<CODE>this...	--this returns <B><CODE>null</CODE></B> (must return &quot;<CODE>this</CODE>&quot; from non-abstract sub-classes){#BALLOON -title Related actions -text rnl, rnldb}	--this r
/*stub functions...	/*stub functions for non-abstract compile...START{#insert zENTER}stub functions for non-abstract compile...END*/{#insert zEnterTab}	/*stub
//Doc-ed by interface	//Doc-ed by interface	//Doc
//Doc-ed by super	//Doc-ed by super	//Doc
//Functions that do nothing but call their super-version	//Functions that do nothing but call their super-version...START	//Func
//Functions that do nothing but their super-version	//Functions that do nothing but call their super-version...END	//Func
@SuppressWarnings('...')	@SuppressWarnings({#insert zAscQQ}{#CURSOR}{#insert zAscQQ})	@S
@SuppressWarnings('unchecked')	@SuppressWarnings({#insert zAscQQ}unchecked{#insert zAscQQ})	@S
For classes that need to implement... (for *Base.java)	For classes that need to implement <CODE>{#insert zXmark}{#insert zJavaSelCopyThisClassName}{#insert zXUpPaste}{#insert zBKSP4}{#insert zCopyL1w}</CODE>, that cannot extend <CODE>Abstract{#insert zTPPaste}</CODE>. See <CODE><A HREF={#insert zAscQQ}Abstract{#insert zTPPaste}.html{#insert zAscQQ}>Abstract{#insert zTPPaste}</A></CODE>.{#MSGBOX -head '_4prot' instruction -text Need '_4prot' instruction sentence? -yes zz4ProtInstr -no z1slp}	For cla
Simple interface template	/**{#insert zEnterTab}<P>{#insert zYmark}</P>{#insert zEnterBksp} **/{#insert zEnterBksp}public interface {#insert zYmark} extends {#insert zYmark}  {{#insert zENTER}{#insert zYmark}{#insert zENTER}\\\}{#insert zENTER}{#insert zYUp3}	public i
_4FQP_	_4FQP_	_4
_4TV_	_4TV_	_4
abstr -- An abstract impl of ... (deletes 'Abstract' from cls-nm)	abstract implementation of <CODE>{#insert zXmark}{#insert zJavaSelCopyThisClassName}{#insert zXUpRight}{#insert zPasteXUpDelete}{#RIGHT -count 8}{#insert zTPDeleteL1w}{#insert zSelectR1wCopy}{#insert zRIGHT}</CODE>.{#MSGBOX -head Need 'see Base'? -text Need 'For classes needing to implement...see XBase.java' sentence? -yes zzSeeBaseForAbstrct -no z1slp}	abstr
greater-than-or-equal-to	greater-than-or-equal-to	great
instruc -- Instructions on... (_4prot)	<I><A HREF={#insert zAscQQ}{#insert zYmark}/../package-summary.html#_4prot{#insert zAscQQ}>Instructions</A> on implementing this &quot;<CODE>_4prot</CODE>&quot; function.</I>	instruc
less-than-or-equal-to	less-than-or-equal-to	less
public c -- Simple class template	package  {#insert zXmark};{#insert zENTER2}/**{#insert zEnterTab}<P>{#insert zYmark}</P>{#insert zEnterBksp} **/{#insert zEnterBksp}public class {#insert zzInpClassNm} extends {#insert zYmark}  {{#insert zEnterBksp}//constructors...START{#insert zEnterTab}/**{#insert zEnterTab}<P>Create a new <CODE>{#insert zzInpClassNm}</CODE>.</P>{#insert zENTER2}{#insert zYmark}{#insert zEnterBksp} **/{#insert zEnterBksp}public {#insert zzInpClassNm}()  {{#insert zENTER2}{#insert zBKSP}\\\}{#insert zEnterBksp}//constructors...END{#insert zENTER}//setters...START{#insert zENTER2}//setters...END{#insert zENTER}//getters...START{#insert zENTER2}//getters...END{#insert zENTER}//main functionality...START{#insert zENTER2}//main functionality...END{#insert zENTER}//other...START{#insert zEnterTab}public String getTSPostfix()  {{#insert zENTER}return  super.getTSPostfix() + {#insert zAscQQ}, {#insert zYmark}{#insert zAscQQ};{#insert zEnterBksp}\\\}{#insert zEnterBksp}//other...END{#insert zENTER}//static...START{#insert zENTER}//static...END{#insert zENTER}\\\}	public c
zzInpClassNm	{#INPUT -head Class name? -single}	zzInpClassNm
