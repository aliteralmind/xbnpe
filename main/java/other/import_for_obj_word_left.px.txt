__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
mpl -- import [prompt].[obj-word-left]	{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTab}import  {#SETPHRASE -description zvPKG -content {#INPUT -head Package name? (with ending dot!) -def {#insert zvPKG} -single} -autotext zvPKG -folder ctvv_folder}{#insert zzPkgIcbColonXDownDel_M_pkg}{#insert zzCb_stPkg}{#insert zzMplsyn_M_yon}	mpl
mplj -- import [fq-java.* package before cursor, w/ ending '.'!][class-nm BEFORE pkg nm]	{#insert zzvFIND_WHAT_stJavaDt}{#insert zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt}{#insert zzCb_stPkg}{#insert zzMplsyn_M_yon}	mplj
mplo -- import [fq-org.* package before cursor, w/ ending '.'!][class-nm BEFORE pkg nm]	{#insert zzvFIND_WHAT_stOrgDt}{#insert zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt}{#insert zzCb_stPkg}{#insert zzMplsyn_M_yon}	mplo
mpljv -- mpljz, paste class name	{#insert mpljz}{#insert zvFOBJ_NAME}	mpljv
mpljz -- import statement for the 'xbn.' fully-qualified class-name before the cursor	{#insert zzvFIND_WHAT_stJavaDt}{#insert zzCutSetFQPkgDt1Clsnm2WriteImpXDownDel_M_fwt}{#insert zzCb_stPkg}{#insert zzMplsyn_M_yon}	mpljz
mplxv -- mplxz, paste class name	{#insert mplxz}{#insert zvFOBJ_NAME}	mplxv
mplxz -- import statement for the 'xbn.' fully-qualified class-name before the cursor	{#insert zzvFIND_WHAT_stXbnDt}{#insert zzCutSetFQPkgDt1Clsnm2WriteImpXDownDel_M_fwt}{#insert zzCb_stPkg}{#insert zzMplsyn_M_yon}	mplxz
zzCutSetFQPkgDt1Clsnm2WriteImpXDownDel_M_fwt	{#insert zvFOBJ_NAME_stL1w}{#insert zzCutSetPkgNmXSUp_M_fwt}{#SETCLIPBOARD {#insert zvFOBJ_NAME}}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}	zzCutSetFQPkgDt1Clsnm2WriteImpXDownDel_M_fwt
mpljl -- mplj for java.lang.	{#SETPHRASE -description zvPKG -content java.lang. -autotext zvPKG -folder ctvv_folder}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mpljl
mplju -- mplj for java.util.	{#SETPHRASE -description zvPKG -content java.util. -autotext zvPKG -folder ctvv_folder}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mplju
mpljur -- mplj for java.util.regex	{#SETPHRASE -description zvPKG -content java.util.regex. -autotext zvPKG -folder ctvv_folder}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mpljur
mplji -- mplj for java.io.	{#SETPHRASE -description zvPKG -content java.io. -autotext zvPKG -folder ctvv_folder}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mplji
mplp -- import using same package as last mpl* call (needs zvPKG)	{#insert zCopyL1w}{#insert zvFOBJ_NAME_stCB}{#MSGBOX -head mplp -text {#insert zvPKG}{#insert zvFOBJ_NAME}  //  Press [OK] if correct.}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mplp
mplsyn	{#BALLOON -title Syntax: Import stmt for class~nm -text **for class THEN pkg-nm** // {#insert zzMplsyns1of3}  and  {#insert zzMplsyns2of3}  // [x]=fully~qualified 'xbn.' ([l,x[r,v]]=lang,text[.regex,.vpc])  //  [j]='java.', [i,l,u[r]]=[io,lang,util[.regex]], [p]=use previous pkg // javasyn}	mplsyn
mplx -- import [fq-xbn.* package before cursor, w/ ending '.'!][class-nm BEFORE pkg nm]	{#insert zzvFIND_WHAT_stXbnDt}{#insert zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt}{#insert zzCb_stPkg}{#insert zzMplsyn_M_yon}	mplx
mplxl -- mplx for com.github.xbn.lang.	{#insert zvPKG_stXbn}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mplxl
mplxx -- mplx for com.github.xbn.text.	{#SETPHRASE -description zvPKG -content com.github.xbn.text. -autotext zvPKG -folder ctvv_folder}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mplxx
mplxxr -- mplx for com.github.xbn.regexutil.	{#SETPHRASE -description zvPKG -content com.github.xbn.regexutil. -autotext zvPKG -folder ctvv_folder}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mplxxr
mplxxv -- mplx for com.github.xbn.text.vpc.	{#SETPHRASE -description zvPKG -content com.github.xbn.text.vpc. -autotext zvPKG -folder ctvv_folder}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}{#insert zzMplsyn_M_yon}	mplxxv
zzCb_stPkg	{#SETCLIPBOARD {#insert zvPKG}}	zzCb_stPkg
zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt -- Needs zvFIND_WHAT	{#insert zzCutSetPkgNmXSUp_M_fwt}{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg}	zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt
zzCutSetPkgNmXSUp_M_fwt -- Needs zvFIND_WHAT (containing pkg root-dot, like 'xbn.' or 'java.')	{#insert zFindDlgOpenUp}{#insert zvFIND_WHAT}{#insert zFindXSBtnNextXS}{#insert zFindDlgCloseDownWS}{#insert zTPCut}{#SETPHRASE -description zvPKG -content {#INSERTCLIPBOARD} -autotext zvPKG -folder ctvv_folder}	zzCutSetPkgNmXSUp_M_fwt
zzMplsyn_M_yon	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then mplsyn -else z1slp}}	zzMplsyn_M_yon
zzMplsyns1of3	mpl[p,[x[[l,x[r,v]]]]]	zzMplsyns1of3
zzMplsyns2of3	mplj[[i,l,u[r]]]]	zzMplsyns2of3
zzMplsyns3of3	mplo	zzMplsyns3of3
zzPkgIcbColonXDownDel_M_pkg -- Needs zvPKG	{#insert zvPKG}{#INSERTCLIPBOARD};{#insert zXDownDelete}	zzPkgIcbColonXDownDel_M_pkg
zzXGTLineAftrPkg -*-	{#insert zXmark}{#insert zzGTLineAftrPkg}	zzXGTLineAftrPkg
zzGTLineAftrPkg -*-	{#insert zJavaSelectPackageLine}{#insert zTPNewLineAfter}	zzGTLineAftrPkg
zzXGTLineAftrPkgTab -*-	{#insert zzXGTLineAftrPkg}{#insert zTAB}	zzXGTLineAftrPkgTab
zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg	{#insert zzXGTLineAftrPkgTab}import  {#insert zzPkgIcbColonXDownDel_M_pkg}{#insert zzCb_stPkg}	zzXGTLineAftrPkgTabQImprtSpcSpcPkgIcbColonXDownDelSetCbToPkg_M_pkg
zzvFIND_WHAT_stJavaDt	{#SETPHRASE -description zvFIND_WHAT -content java. -autotext zvFIND_WHAT -folder ctvv_folder}	zzvFIND_WHAT_stJavaDt
zzvFIND_WHAT_stOrgDt	{#SETPHRASE -description zvFIND_WHAT -content org. -autotext zvFIND_WHAT -folder ctvv_folder}	zzvFIND_WHAT_stOrgDt
zzvFIND_WHAT_stXbnDt	{#SETPHRASE -description zvFIND_WHAT -content com.github.xbn. -autotext zvFIND_WHAT -folder ctvv_folder}	zzvFIND_WHAT_stXbnDt
zvPKG_stXbn	{#SETPHRASE -description zvPKG -content com.github.xbn.lang. -autotext zvPKG -folder ctvv_folder}	zvPKG_stXbn