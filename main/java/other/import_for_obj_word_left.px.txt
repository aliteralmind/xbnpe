__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
mpl -- import [prompt].[obj-word-left]	{#insert zzCopyL1wXGTLineAftrPkgTab}import  {#SETPHRASE -description zvPKG -content {#INPUT -head Package name? (with ending dot!) -def {#insert zvPKG} -single} -autotext zvPKG -folder ctvv_folder}{#insert zzPkgIcbColonXDownDel_M_pkg}{#insert zzMplsyn_M_yon}	mpl
mplj -- import [fq-java.* package before cursor, w/ ending '.'!][class-nm BEFORE pkg nm]	{#SETPHRASE -description zvFIND_WHAT -content java. -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt}{#insert zzMplsyn_M_yon}	mplj
mpljz -- import statement for the 'xbn.' fully-qualified class-name before the cursor	{#SETPHRASE -description zvFIND_WHAT -content java. -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zzCutSetFQPkgDt1Clsnm2WriteImpXDownDel_M_fwt}{#insert zzMplsyn_M_yon}	mpljz
mplsyn	{#BALLOON -title Syntax: Import stmt for class~nm -text {#insert zzMplsyns}=Write import statement for class~name before cursor  //  [x]=fully~qualified 'xbn...' package~name~~including ending dot!~~BETWEEN class name & cursor. (pkg~nm THEN cls~nm) [j]='java...', [z]=pkg~nm BEFORE class~name  //  javasyn}	mplsyn
mplx -- import [fq-xbn.* package before cursor, w/ ending '.'!][class-nm BEFORE pkg nm]	{#SETPHRASE -description zvFIND_WHAT -content xbn. -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt}{#insert zzMplsyn_M_yon}	mplx
mplxz -- import statement for the 'java.' fully-qualified class-name before the cursor	{#SETPHRASE -description zvFIND_WHAT -content xbn. -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zzCutSetFQPkgDt1Clsnm2WriteImpXDownDel_M_fwt}{#insert zzMplsyn_M_yon}	mplxz
zzCopyL1wXGTLineAftrPkgTab	{#insert zCopyL1w}{#insert zzXGTLineAftrPkgTab}	zzCopyL1wXGTLineAftrPkgTab
zzCutSetFQPkgDt1Clsnm2WriteImpXDownDel_M_fwt	{#insert zvFOBJ_NAME_stL1w}{#insert zzCutSetPkgNmXSUp_M_fwt}{#SETCLIPBOARD {#insert zvFOBJ_NAME}}{#insert zzXGTLineAftrPkgTab}{#insert import  {#insert zzPkgIcbColonXDownDel_M_pkg}}	zzCutSetFQPkgDt1Clsnm2WriteImpXDownDel_M_fwt
zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt -- Needs zvFIND_WHAT	{#insert zzCutSetPkgNmXSUp_M_fwt}{#insert zzCopyL1wXGTLineAftrPkgTab}import  {#insert zzPkgIcbColonXDownDel_M_pkg}	zzCutSetFQPkgDt2Clsnm1WriteImpXDownDel_M_fwt
zzCutSetPkgNmXSUp_M_fwt -- Needs zvFIND_WHAT (containing pkg root-dot, like 'xbn.' or 'java.')	{#insert zFindDlgOpenUp}{#insert zvFIND_WHAT}{#insert zFindXSBtnNextXS}{#insert zFindDlgCloseDownWS}{#insert zTPCut}{#SETPHRASE -description zvPKG -content {#INSERTCLIPBOARD} -autotext zvPKG -folder ctvv_folder}	zzCutSetPkgNmXSUp_M_fwt
zzMplsyn_M_yon	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then mplsyn -else z1slp}}	zzMplsyn_M_yon
zzMplsyns	mpl[[j[z],x[z]]]	zzMplsyns
zzPkgIcbColonXDownDel_M_pkg -- Needs zvPKG	{#insert zvPKG}{#INSERTCLIPBOARD};{#insert zXDownDelete}	zzPkgIcbColonXDownDel_M_pkg
zzXGTLineAftrPkgTab	{#insert zXmark}{#insert zJavaSelectPackageLine}{#insert zTPNewLineAfter}{#insert zTAB}	zzXGTLineAftrPkgTab
