XBN-PhraseExpress: Java code creation (javasyn, xpesyn)
	Function signature
	sglsyn: Entire signature (func-name through close paren) (sglkpsyn)
	{#insert zzSglsyns2of2}  //  {#insert zzSglsyns1of2}
{#insert zBKSP}felsyn: Function name. With alteration: falsyn (fal[link,opt]syn)
	{#insert zzFalsyns1of4}  //  {#insert zzFalsyns3of4}
{#insert zzFalsyns2of4}  //  {#insert zzFalsyns4of4}
{#insert zBKSP}aelsyn: All parameters (aelkpsyn)
	{#insert zzAnlsyns1of3}  //  {#insert zzAnlsyns2of3}  //  {#insert zzAnlsyns3of3}
{#insert zBKSP}rtlsyn: Return-type (rtloptsyn)
	{#insert zzRtlsyns1of3}  //  {#insert zzRtlsyns2of3}  //  {#insert zzRtlsyns3of3}
{#insert zBKSP}[m,n]l1syn: 1 parameter (ml1altersyn, ml1kpsyn)
	{#insert zzNl1syns}
{#insert zzMl1syns}
{#insert zBKSP}tlksyn: Find sig given func-name (tlkoptsyn)
	{#insert zzTlksyns1of2}  //  {#insert zzTlksyns2of2}
{#insert zBKSP2}JavaDoc
	Non-links:
	dz1syn: @param for parameters in below signature
	{#insert zzDz1syns1of3}  //  {#insert zzDz1syns2of3}  //  {#insert zzDz1syns3of3}
{#insert zBKSP}jdbsyn: Basic block  //  jdqtsyn: snippets (jdmfs=MAIN-FUNC block)
sbnesyn: Should, may, must ([not] be equal to...)
lncsyn: null, true, false, ...  //  jdqtsyn: Random snippets
rtndsyn: @return ...
fqplsyn: func/var-name to F()...{#insert zAscQQ}+F()+{#insert zAscQQ}
	{#insert zzFqplsyns}
{#insert zBKSP}hcf[b,l]: Non-link coded function name from word [in clipboard/left]
{#insert zBKSP}Links: Functions/generic constructors/object:
	kflsyn: 0-parameter (w/ internal-object)
(kfl[k,opt,prk,tgt]syn <khbadinfo, nobadinfo>)
	{#insert zzKflsyns1of4}  //  {#insert zzKflsyns3of4}
{#insert zzKflksyns}
{#insert zzKflsyns4of4}  //  {#insert zzKflsyns2of4}  //  Non-link: hcf[b]
{#insert zBKSP}kglsyn: 1+ parameters (kgl[k,opt,pap,prk,tgt]syn)
	{#insert zzKglsyns2of3}  //  {#insert zzKglsyns1of3}
{#insert zzKglsyns3of3}  //  {#insert zzKglksyns}
{#insert zBKSP}kulsyn: From/to neighboring signature
	(kul[prk,tgt]syn, kuzxnsyn)
	{#insert zzKulsyns1of2}
{#insert zzKulsyns2of2}
{#insert zBKSP2}kullsyn: From/to neigboring parameters (kul[prk,tgt]syn)
	{#insert zzKullsyns}
{#insert zBKSP2}Links: this/super constructor:
	knhsyn: 0-parameter (knhprksyn)
	{#insert zzKnhsyns1of5}  //  {#insert zzKnhsyns2of5}  //  {#insert zzKnhsyns3of5}  //  {#insert zzKnhsyns5of5}
{#insert zzKnhsyns4of5}
{#insert zBKSP}klhsyn: 1+ parameter
	(klhoptsyn, klhpapsyn <lybadinfo>, klhprksyn)
	{#insert zzKlhsyns1of3}  //  {#insert zzKlhsyns3of3}
{#insert zzKlhsyns2of3}
{#insert zBKSP2}ktlsyn: From/to neighboring parameters
	(ktloptsyn, ktlpapsyn)
	{#insert zzKtlsyns1of2}
{#insert zzKtlsyns2of2}
{#insert zBKSP3}Links: Class-file:
	kibsyn: Class-file
	{#insert zzKibsyns1of2}  //  {#insert zzKibsyns2of2}
{#insert zBKSP}prfsyn: Class-file-link-'.'  before existing func link
	{#insert zzPrfsyns}
{#insert zBKSP}kutsyn: Function/constructor link to specific target class (func-nm-->)
	kutl[alt,prk]syn, kutl[0,1,o]optsyn, kutlpararmwarn
	{#insert zzKutlsyns3of4}  //  {#insert zzKutlsyns1of4}
{#insert zzKutlsyns2of4}  //  {#insert zzKutlsyns4of4}
{#insert zBKSP2}kotlsyn: Object link with a specific target class (kotlaltsyn, obj-name-->)
	***same as kut..., without '[*]' ('kut' --> 'kot')
{#insert zBKSP4}Other
	gfnsyn: Go to/copy init/getter line for internal var-name before cursor
	{#insert zzGfnsyns1of3}  //  {#insert zzGfnsyns2of3}  //  {#insert zzGfnsyns3of3}
{#insert zBKSP}jsgsyn: Setter and getter functions
	{#insert zzJsgsyns1of2}  //  {#insert zzJsgsyns2of2}
{#insert zBKSP}mplsyn: Write import statement for class-name just before the cursor
	{#insert zzMplsyns1of3}  //  {#insert zzMplsyns2of3}  //  {#insert zzMplsyns3of3}
{#insert zBKSP}hcmlsyn: Get-paste this/super-class name (expects JavaDoc block above class-line)
	{#insert zzHcmlsyns1of3}  //  {#insert zzHcmlsyns2of3}  //  {#insert zzHcmlsyns3of3}
{#insert zBKSP}dcnstrsyn: Create sub-class construtors from dup super-class signatures: {#insert zzDcnstrsyns}
sypsyn: Basic auto-completes
	{#insert zzSypsyns1of7}  //  {#insert zzSypsyns2of7}  //  {#insert zzSypsyns7of7}
{#insert zzSypsyns5of7}  //  {#insert zzSypsyns6of7}
{#insert zBKSP}rtasyn: return & @return
	{#insert zzRtasyns2of4}  //  {#insert zzRtasyns1of4}  //  {#insert zzRtasyns3of4}  //  {#insert zzRtasyns4of4}
{#insert zBKSP}farosyn: Get-paste 1-and-ONLY line in below function: {#insert zzFarosyns}
xnpsyn: Exceptions: catch, specific types
xtnsyn: Exceptions: throw
	{#insert zzXtnsyns1of4}  //  {#insert zzXtnsyns3of4}
{#insert zzXtnsyns2of4}  //  {#insert zzXtnsyns4of4}
{#insert zBKSP}stubf: Turn interface function signature into return-null stub function
{#insert zBKSP}XBN-Java specific:
	clnsyn: CrashIfObject.nnull, CrashIfObject.nullOrReturnCause: {#insert zzClnsyns1of3}
xcgsyn: Copy-constructor and corresponding getObjectCopy() function
	{#insert zzXcgsyns1of6}  //  {#insert zzXcgsyns2of6}  //  {#insert zzXcgsyns3of6}  //  {#insert zzXcgsyns4of6}  //  {#insert zzXcgsyns5of6}  //  {#insert zzXcgsyns6of6}
{#insert zBKSP}xcksyn: Link to THIS or super copy-constructor
	{#insert zzXcksyns1of4}  //  {#insert zzXcksyns2of4}  //  {#insert zzXcksyns3of4}  //  {#insert zzXcksyns4of4}
{#insert zBKSP}xajcsyn: XBN-Java ant '<javac' tags: {#insert zzXajcsyns}
{#insert zBKSP}