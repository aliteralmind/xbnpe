(*This must precede the setter

Creates              For                     Desc
----------------------------------------------------------------------
zvJSGB_JD_MNBN      Setter JavaDoc param    May not be <CODE>null</CODE>.
zvJSG_JAVA_CIFN     setter                  xif(__FUNC_NAME__).null(...) __or__ if(null) throw NPX
zvJXSG_CRASH_JAVA   setter                  xif(__THISFNL__).null(...) __or__ if(null) throw NPX

NOTE that a no new-lines (zENTER), are at the end of any variable. New-lines must be concatenated externally.

(Duplicate these zvJSG[B]_* table rows into zSUB_setter.px.txt.)
*)

(*JSG*)
zjsgCrashIfNull	{#msgbox -head Crash if value is null? -text (If primitive, chose NO) -yes zjsgCrashIfNull_YES -no z5slp}	zjsgCrashIfNull

(*JSG: yes, crash. With what?*)
zjsgCrashIfNull_YES	{#msgbox -head {#insert zjsgbMsgWhichCrash} -text {#insert zjsgbMsgXKTC} -ok zjsgCrashIfNull_YES_XIF -cancel zjsgCrashIfNull_YES_IFNT}	zjsgCrashIfNull_YES
zjsgCrashIfNull_YES_XIF	{#SETPHRASE -description zvJSG_JAVA_CIFN -content {#insert zjsgJavaXif} -autotext zvJSG_JAVA_CIFN -folder ctvv_folder}	zjsgCrashIfNull_YES_XIF
zjsgCrashIfNull_YES_IFNT	{#insert zSetJSGB_JD_MNBN}{#SETPHRASE -description zvJSG_JAVA_CIFN -content {#insert zjsgJavaIfNullThrw} -autotext zvJSG_JAVA_CIFN -folder ctvv_folder}	zjsgCrashIfNull_YES_IFNT

(*JSG: Java*)
zjsgJavaIfNullThrw	{#insert zjsgbIFNTPreFuncName}__THISFNL__{#insert zjsgbIFNTPostFuncName}	zjsgJavaIfNullThrw
zjsgJavaXif	xif({#asc 34}__THISFNL__{#insert zjsgbXifNullPostFuncName}	zjsgJavaXif

(*JXSG*)
jxsgCrashIfNull	{#msgbox -head Crash if value is null?  -text (If primitive, chose NO) -yes zjxsgCrashIfNull_YES -no z5slp}	jxsgCrashIfNull

(*JXSG: yes, crash. With what?*)
zjxsgCrashIfNull_YES	{#insert zSetJSGB_JD_MNBN}{#msgbox -head {#insert zjsgbMsgWhichCrash} -text {#insert zjsgbMsgXKTC} -ok zjxsgCrashIfNull_YES_XIF -cancel zjxsgCrashIfNull_YES_IFNT}	zjxsgCrashIfNull_YES
zjxsgCrashIfNull_YES_XIF	{#SETPHRASE -description zvJXSG_CRASH_JAVA -content {#insert zjxsgJavaXif} -autotext zvJXSG_CRASH_JAVA -folder ctvv_folder}	zjxsgCrashIfNull_YES_XIF
zjxsgCrashIfNull_YES_IFNT	{#SETPHRASE -description zvJXSG_CRASH_JAVA -content {#insert zjxsgJavaIfNullThrw} -autotext zvJXSG_CRASH_JAVA -folder ctvv_folder}	zjxsgCrashIfNull_YES_IFNT

(*JXSG: Java*)
zjxsgJavaIfNullThrw	{#insert zjxsgbIFNTPreFuncName}__FUNC_NAME__{#insert zjxsgbIFNTPostFuncName}	zjxsgJavaIfNullThrw
zjxsgJavaXif	xif({#asc 34}__FUNC_NAME__{#insert zjsgbXifNullPostFuncName}	zjxsgJavaXif

(*BOTH*)
zjsgbXifNullPostFuncName	{#asc 34}, &quot;{#insert zjsgbSetterParamName}&quot;).nnull({#insert zjsgbSetterParamName});	zjsgbXifNullPostFuncName
zjsgbIFNTPreFuncName	if({#insert zjsgbSetterParamName} = null)  {{#insert zENTER}throw  new NullPointerException({#asc 34}	zjsgbIFNTPreFuncName
zjsgbIFNTPostFuncName: {#insert zjsgbSetterParamName}{#asc 34});{#insert zENTER}}{#insert zENTER}	zjsgbIFNTPostFuncName
zSetJSGB_JD_MNBN	{#SETPHRASE -description zvJSGB_JD_MNBN -content {#insert zjsgbJDMsgMNBN} -autotext zvJSGB_JD_MNBN -folder ctvv_folder}	zSetJSGB_JD_MNBN

zjsgbMsgWhichCrash	Use xif().null(), or if(null) throw?	zjsgbMsgWhichCrash
zjsgbMsgXKTC	xif: OK. if(null): CANCEL	zjsgbMsgXKTC
zjsgbJDMsgMNBN	May not be <CODE>null</CODE>. (*ends with space*)	zjsgbJDMsgMNBN


(*Unset*)
zjsgbUnsetALL_CINull	{#insert zUnsetJSG_CRASH_JAVA}{#insert zUnsetJXSG_CRASH_JAVA}{#insert zUnsetJSGB_JD_MNBN}	zjsgbUnsetALL_CINull
zUnsetJSG_CRASH_JAVA	{#SETPHRASE -description zvJSG_JAVA_CIFN -content -autotext zvJSG_JAVA_CIFN -folder ctvv_folder}	zUnsetJSG_CRASH_JAVA
zUnsetJXSG_CRASH_JAVA	{#SETPHRASE -description zvJXSG_CRASH_JAVA -content -autotext zvJXSG_CRASH_JAVA -folder ctvv_folder}	zUnsetJXSG_CRASH_JAVA
zUnsetJSGB_JD_MNBN	{#SETPHRASE -description zvJSGB_JD_MNBN -content -autotext zvJSGB_JD_MNBN -folder ctvv_folder}	zUnsetJSGB_JD_MNBN
