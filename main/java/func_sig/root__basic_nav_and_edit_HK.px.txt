__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zPreFuncSigGTP	{#insert zTPMoveR1w}{#insert zPreBracketGTP}	zPreFuncSigGTP
zPostFuncSigGTP	{#insert zPostBracketGTP}{#insert zTPMoveL1w}	zPostFuncSigGTP
zPostFuncSigSelect	{#insert zPostFuncSigGTP}{#insert zPreFuncSigSelect}	zPostFuncSigSelect
zPreFuncSigSelect -- zSTNextCloseParen ALT KC	{#insert zPreSigSTSigEnd}	zPreFuncSigSelect
zPreFuncSigCopy -- zPreFuncSigSelect then copy [zCApJJ]	{#insert zPreFuncSigSelect}{#insert zTPCopy}	zPreFuncSigCopy
zPostFuncSigDup -- x-mark at mid	{#insert zPostFuncSigSelCopy}{#insert zRIGHT}{#insert zXmark}{#insert zTPPaste}	zPostFuncSigDup
zPostFuncSigDupGTP -- x-mark at mid and end	{#insert zPostFuncSigDupGTMid}{#insert zPostFuncSigGTP}	zPostFuncSigDupGTP
zPostFuncSigDupGTMid -- x-mark at end	{#insert zPostFuncSigDup}{#insert zXThenUp2}	zPostFuncSigDupGTMid
zPostFuncSigDupGTPost -- zPostFuncSigDup ALT KC	{#insert zPostFuncSigDup}	zPostFuncSigDupGTPost
zPostFuncSigSelCopy	{#insert zPostFuncSigGTP}{#insert zPreFuncSigCopy}	zPostFuncSigSelCopy
zNameFromCBSigOrCall	{#substr {#insert zTPPaste}( -from 0 -count {#CALC {#pos {#insert zTPPaste}( -substr (} - 1 -round 0 -thousands none}}	zNameFromCBSigOrCall
zzNameFromCBSigOrCallTEST	Testing zNameFromCBSigOrCall:{#insert zENTER}{#setclipboard myFunc}{#insert zTPPaste}==>{#insert zNameFromCBSigOrCall}{#insert zENTER}{#setclipboard myFunc()}{#insert zTPPaste}==>{#insert zNameFromCBSigOrCall}{#insert zENTER}{#setclipboard myFunc(i_1)}{#insert zTPPaste}==>{#insert zNameFromCBSigOrCall}{#insert zENTER}{#setclipboard myFunc(int i_1)}{#insert zTPPaste}==>{#insert zNameFromCBSigOrCall}{#insert zENTER}{#setclipboard myFunc(int i_1, boolean b_b)}{#insert zTPPaste}==>{#insert zNameFromCBSigOrCall}	zzNameFromCBSigOrCallTEST
zPostFuncSigGTDelName	{#insert zPostFuncSigGTP}{#insert zDeleteR1w}	zPostFuncSigGTDelName
jcigl -- Copy all Interface siGnature Lines	{#insert zFindDlgOpenDownRE}^[ \t]*{#insert zjreRetTypeFuncName}{#insert zjreParams_count0orMore};${#insert zFindMarkAllREClose}{#insert zTPBookmarkCopyAll}{#insert zTPBookmarkClearAll}{#insert zUndo2}	jcigl
zjGTFuncSigUp	{#insert zFindOpenUpRE}{#insert zzjre0orMoreSigFindGoREClose}	zjGTFuncSigUp
zjGTFuncSigDown	{#insert zFindDlgOpenDownRE}{#insert zzjre0orMoreSigFindGoREClose}	zjGTFuncSigDown
zzjre0orMoreSigFindGoREClose	{#insert zjreGenericSig_pCount0orMore}{#insert zFindGoREClose}	zzjre0orMoreSigFindGoREClose
jfu -- zjGTFuncSigUp ALT KC	{#insert zjGTFuncSigUp}	jfu
jfd -- zjGTFuncSigDown ALT KC	{#insert zjGTFuncSigDown}	jfd
grgs -- Cursor Post func-siG or -call	{#insert zPostBracketGTP}{#insert grpw}	grgs
grgsd -- Cursor Post func-siG or -call	{#insert zPostBracketGTP}{#insert grpwd}	grgsd
grpw	{#insert zjMakeSigForPWFuncSearchTerm}{#insert zYThenSelect}	grpw
grpwd	{#insert zCutL1w}{#insert grcb}	grpwd
grcb -- {#insert zYmark}, zjMakeSigForCBFuncSearchTerm	{#insert zYmark}{#insert zjMakeSigForCBFuncSearchTerm}	grcb
zjMakeSigForPWFuncSearchTerm	{#insert zCopyL1w}{#insert zjMakeSigForCBFuncSearchTerm}	zjMakeSigForPWFuncSearchTerm
zjMakeSigForCBFuncSearchTerm	{#insert zFindOpenUpRE}{#insert zjreSigForCBFunc_pCount0orMore}{#insert zFindDlgClose}	zjMakeSigForCBFuncSearchTerm
