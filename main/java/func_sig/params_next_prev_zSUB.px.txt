__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zParamInCBAlterPaste_M_lltrAng -*- zvLC_ALTR (lowercase and not 'c'), zvANG	{#insert {#COND -if {#LENGTH {#insert zvLC_ALTR}} = 0 -then zTPPaste -else {#COND -if {#insert zvLC_ALTR} = q -then zzQQPasteQQ_M_ang -else {#COND -if {#insert zvLC_ALTR} = o -then zzQQPasteQQHtmlEsc_M_ang -else {#COND -if {#insert zvLC_ALTR} = s -then zzQPasteQ_M_ang -else {#COND -if {#insert zvLC_ALTR} = + -then zzQPlsPastePlsQ_M_ang -else {#COND -if {#insert zvLC_ALTR} = _ -then zzLQQPlsPastePlsQLQ_M_ang -else zzErrDlgBadParamAltrFlag_M_lltr}}}}}}}	zParamInCBAlterPaste_M_lltrAng
zParamTypNmSlctd_selectDesiredPortion_M_ang -- Needs zvANG	{#insert {#COND -if {#insert zvPPRV_NXT} = Next -then z1slp -else zTPSelSwapEnds}}{#insert {#COND -if {#LOWERCASE {#insert zvANG}} = a -then z1slp -else {#COND -if {#insert zvANG} = n -then zRightSelectL1w -else {#COND -if {#LOWERCASE {#insert zvANG}} = g -then zSelectL1wL1c -else {#COND -if {#insert zvANG} = u -then zLeftSelectR1w -else zzErrDlgBad1ParamAng_M_ang}}}}}	zParamTypNmSlctd_selectDesiredPortion_M_ang
zPostGenericsHtmlEscape -*-	{#insert zPostBracketSelect}{#insert zHtmlEscSlctdJavaGenerics}	zPostGenericsHtmlEscape
zPostGenericsHtmlEscapeIfAG_M_ang -*-	{#insert {#COND -if {#insert zvANG} = G -then zPostGenericsHtmlEscape -else {#COND -if {#insert zvANG} = A -then zPostVarTypeNameHtmlEscapeGnrcs -else z1slp}}}	zPostGenericsHtmlEscapeIfAG_M_ang
zPostVarTypeNameHtmlEscapeGnrcs	{#insert zXmark}{#insert zTMMoveL1Tag}{#insert zPostGenericsHtmlEscape}{#insert zXDownDelete}	zPostVarTypeNameHtmlEscapeGnrcs
zvANG_stCB -*-	{#SETPHRASE -description zvANG -content {#INSERTCLIPBOARD} -autotext zvANG -folder ctvv_folder}	zvANG_stCB
zzErrDlgBad1ParamAng_M_ang	{#MSGBOX -head ERROR -text ERROR ~~ The keep~which~parameter~part pre-option (currently zvANG='{#insert zvANG}') must be one of the following: [a,A,n,g,G,u] (see ml1kpsyn).{#insert zCancelProcNowPostTxt}}	zzErrDlgBad1ParamAng_M_ang
zzLQQPlsPastePlsQLQ_M_ang	\{#insert zAscQQ}{#insert zzQPlsPastePlsQ_M_ang}\{#insert zAscQQ}	zzLQQPlsPastePlsQLQ_M_ang
zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum -*-	(*See zSelCopyPrvNxtJFSigReturnToXCursor_M_gpnWyc*){#insert zXmarkMaybeCdd_M_cde}{#insert zzSelCopyParamPart_M_angGpnPpnPnum}{#insert zXUpDownOppositeDir_M_gpn}{#insert zParamInCBAlterPaste_M_lltrAng}{#insert zzB4EndCODETagGTPIfCdd_M_cde}	zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum
zzMl1syns	[a,A,n,g,G,u][[c,q,Q,o,O,s,S,+,_]]m[l,z][1~5,a~e,[g]n]	zzMl1syns
zzNl1syns	n[l,z][1~5,a~e,[g]n]	zzNl1syns
zzParamSetLCAltrCddIfUCFromCBCutL1c	{#insert zzParamSetLltrCddIfUFrmCB}{#insert zCutL1c}	zzParamSetLCAltrCddIfUCFromCBCutL1c
zzPastePostGenericsHtmlEscapeIfG_M_ang	{#insert zTPPaste}{#insert zPostGenericsHtmlEscapeIfAG_M_ang}	zzPastePostGenericsHtmlEscapeIfG_M_ang
zzPl1syn_M_yon -- Needs zvSYNTAX_ON	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then nclsyn -else z1slp}}	zzPl1syn_M_yon
zzQPasteQ_M_ang	'{#insert zzPastePostGenericsHtmlEscapeIfG_M_ang}'	zzQPasteQ_M_ang
zzQPlsPastePlsQ_M_ang	{#insert zAscQQ} + {#insert zzPastePostGenericsHtmlEscapeIfG_M_ang} + {#insert zAscQQ}	zzQPlsPastePlsQ_M_ang
zzQQPasteQQHtmlEsc_M_ang	&quot;{#insert zzPastePostGenericsHtmlEscapeIfG_M_ang}&quot;	zzQQPasteQQHtmlEsc_M_ang
zzQQPasteQQ_M_ang	{#insert zAscQQ}{#insert zzPastePostGenericsHtmlEscapeIfG_M_ang}{#insert zAscQQ}	zzQQPasteQQ_M_ang
zzSetCddToCddLltrToESCutL1c	{#insert zzSetCddToCddLltrToES}{#insert zCutL1c}	zzSetCddToCddLltrToESCutL1c
zzSetPNxtPrvToPrevCutL1c	{#insert zvPNXT_PRV_stPrev}{#insert zCutL1c}	zzSetPNxtPrvToPrevCutL1c
zzSetLltrCddAngFromL1cX2	{#insert zCutL1c}{#insert {#COND -if {#INSERTCLIPBOARD} = c -then zzSetCddToCddLltrToESCutL1c -else {#COND -if {#insert zLowercaseCB} = q -then zzParamSetLCAltrCddIfUCFromCBCutL1c -else {#COND -if {#insert zLowercaseCB} = o -then zzParamSetLCAltrCddIfUCFromCBCutL1c -else {#COND -if {#insert zLowercaseCB} = s -then zzParamSetLCAltrCddIfUCFromCBCutL1c -else {#COND -if {#INSERTCLIPBOARD} = + -then zzParamSetLCAltrCddIfUCFromCBCutL1c -else {#COND -if {#INSERTCLIPBOARD} = _ -then zzParamSetLCAltrCddIfUCFromCBCutL1c -else zzSetCddLltrToES}}}}}}}{#insert zvANG_stCB}	zzSetLltrCddAngFromL1cX2
zzPasteParamNameAtCrsr_M_gpnPpnPnum -*-	{#insert zvANG_stN}{#insert zzXCopyParamPartReturnToX_M_angGpnPpnPnum}{#insert zTPPaste}	zzPasteParamNameAtCrsr_M_gpnPpnPnum
zzPasteParamPartAtCrsr_M_angGpnPpnPnum -*-	{#insert zzXCopyParamPartReturnToX_M_angGpnPpnPnum}{#insert zTPPaste}	zzPasteParamPartAtCrsr_M_angGpnPpnPnum
zzXCopyParamPartReturnToX_M_angGpnPpnPnum -*-	{#insert zXmark}{#insert zzSelCopyParamPart_M_angGpnPpnPnum}{#insert zXUpDownOppositeDir_M_gpn}	zzXCopyParamPartReturnToX_M_angGpnPpnPnum
zzSelCopyParamPart_M_angGpnPpnPnum -*-	{#insert zSelectPrvNxtJFSigLine_M_gpn}{#insert zzJFSigLnSlctd_selectNxtPrvParamTypeNm_M_pnpPnum}{#insert zParamTypNmSlctd_selectDesiredPortion_M_ang}{#insert zTPCopy}	zzSelCopyParamPart_M_angGpnPpnPnum
zzzEnterTestAng2ForNonGnrcsLltr2	{#insert zENTER}{#insert zzzAng2ForNonGnrcsLltr2}	zzzEnterTestAng2ForNonGnrcsLltr2
zzzEnterTestAng2Lltr2	{#insert zENTER}{#insert zzzAng2Lltr2}	zzzEnterTestAng2Lltr2
zzzAng2ForNonGnrcs	{#COND -if {#insert zvANG2} = A -then a -else {#COND -if {#insert zvANG2} = G -then g -else {#insert zvANG2}}}{#insert zTSlp}	zzzAng2ForNonGnrcs
zzzAng2ForNonGnrcsLltr2	{#insert zzzAng2ForNonGnrcs}{#insert zzzLltr2}	zzzAng2ForNonGnrcsLltr2
zzzAng2Lltr2	{#insert zzzAng2}{#insert zzzLltr2}	zzzAng2Lltr2
