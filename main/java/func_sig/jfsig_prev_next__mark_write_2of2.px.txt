__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
mwrgtz -- with Return type and func-name, DOWN	{#insert mwrgz}{#insert dapn}	mwrgtz
mwrgyl -- with Return type and func-name, UP	{#insert mwrgl}{#insert dapnkg}	mwrgyl
mwrgyz -- with Return type and func-name, DOWN	{#insert mwrgz}{#insert dapnkg}	mwrgyz
mwrgz -- with Return type and func-name, DOWN	{#insert scmrgz}{#insert zYUpPaste}	mwrgz
mwrtl -- Return type, no generics, UP	{#insert scmrtl}{#insert zYDownPaste}	mwrtl
mwrtz -- Return type, no generics, DOWN	{#insert scmrtz}{#insert zYUpPaste}	mwrtz
mwryhl -- mwryl, html-escaped	{#insert scmryl}{#insert zYDownPasteSelect}{#insert xhEscapeSel}{#insert zRIGHT}	mwryhl
mwryhz -- mwryz, html-escaped	{#insert scmryz}{#insert zYUpPasteSelect}{#insert xhEscapeSel}{#insert zRIGHT}	mwryhz
mwryl -- Return type, with generics, UP	{#insert scmryl}{#insert zYDownPaste}	mwryl
mwryz -- Return type, with generics, DOWN	{#insert scmryz}{#insert zYUpPaste}	mwryz
thisfnl	{#insert zYmark}{#insert zThisfnlEND}	thisfnl
thisfnlc	{#insert zYmarkCoded}{#insert zThisfnlEND}	thisfnlc
thisfnlq	{#asc 34}{#insert thisfnl}{#asc 34}	thisfnlq
thisfnlqh	&quot;{#insert thisfnl}&quot;	thisfnlqh
thisfnz	{#insert zYmark}{#insert zThisfnzEND}	thisfnz
thisfnzc	{#insert zYmarkCoded}{#insert zThisfnzEND}	thisfnzc
thisfnzq	{#asc 34}{#insert thisfnz}{#asc 34}	thisfnzq
thisfnzqh	&quot;{#insert thisfnz}&quot;	thisfnzqh
sprgl -- using params in ABOVE func siGnature	{#insert cnsuper}{#insert mwpl}	sprgl
sprglc -- sprgl CODE-d	{#insert zSupercCoded}{#insert mwpl}	sprglc
sprglk	{#insert mwpl}{#insert fkpr}	sprglk
sprglkc -- sprglk CODE-d	{#insert zSupercCoded}{#insert mwpl}{#insert fkprc}	sprglkc
sprglknp	{#insert mwpl}{#insert fkppr}	sprglknp
sprglknpc -- sprglknp CODE-d	{#insert zSupercCoded}{#insert mwpl}{#insert fkpprc}	sprglknpc
sprgz -- using params in BELOW func siGnature	{#insert cnsuper}{#insert mwpz}	sprgz
sprgzc -- sprgz CODE-d	{#insert zSupercCoded}{#insert mwpz}	sprgzc
sprgzk	{#insert mwpz}{#insert fkpr}	sprgzk
sprgzkc -- sprgzk CODE-d	{#insert zSupercCoded}{#insert mwpz}{#insert fkprc}	sprgzkc
sprgzknp	{#insert mwpz}{#insert fkppr}	sprgzknp
sprgzknpc -- sprgzknp CODE-d	{#insert mwpz}{#insert fkpprc}	sprgzknpc
thisfnl	{#insert zYmark}{#insert zThisfnlEND}	thisfnl
thisfnlc	{#insert zYmarkCoded}{#insert zThisfnlEND}	thisfnlc
thisfnlq	{#asc 34}{#insert thisfnl}{#asc 34}	thisfnlq
thisfnlqh	&quot;{#insert thisfnl}&quot;	thisfnlqh
thisfnz	{#insert zYmark}{#insert zThisfnzEND}	thisfnz
thisfnzc	{#insert zYmarkCoded}{#insert zThisfnzEND}	thisfnzc
thisfnzq	{#asc 34}{#insert thisfnz}{#asc 34}	thisfnzq
thisfnzqh	&quot;{#insert thisfnz}&quot;	thisfnzqh
