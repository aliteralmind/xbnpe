
__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
ml1 -- Sig up: Paste param-1's name at cursor	{#insert zvGPRV_NXT_stPrev}{#insert zvPARAM_NUM_st1}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	ml1
ml1altersyn	{#BALLOON -title Alteration/presentation PRE~OPT -text [[c,q,Q,o,O,s,S,+,_]]=OPTIONAL option // [c]=CODE~d, [q]=surr w/ {#insert zAscQQ}, o=surr w/ &quot;, [s]=surr w/ ', [p]=append (), [d]=apnd (...), +={#insert zAscQQ}+...+{#insert zAscQQ}, _=\{#insert zAscQQ}{#insert zAscQQ}+...+{#insert zAscQQ}\{#insert zAscQQ},  // capitalized=also CODE~d  //  Examples: aeml2, aQeml2  //  ml1syn}	ml1altersyn
ml1kpsyn	{#BALLOON -title What param~part to get? PRE~OPT -text [a,A,n,g,G,u]=declares which part of parameter is wanted. // 'a'=keep all (types, generics, names), 'n'=names only, 'g'=types with generics, 'u'=types without generics  //  capitalized=HTML~esc  //  Examples: Tml2, Tceml1  //  ml1syn}	ml1kpsyn
ml1syn	{#BALLOON -title Syntax: Get~print param from sig -text {#insert zzMl1syns}  //  [a,A,n,g,G,u]: ml1kpsyn, [[c,q,Q,o,O,s,S,+,_]]=ml1altersyn, [l]=param in sig up, [z]=down, [1~5,n]=param# (1=1st), [a-e,gn]=param# (a=last)  //  See nl1syn  //  nl1testall  // javasyn}	ml1syn
ml2 -- ml1, 2nd-param	{#insert zzSetGpnToPrevPpnToNextParamNumTo2}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	ml2
ml3 -- ml3, 3rd-param	{#insert zzSetGpnToPrevPpnToNextParamNumTo3}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	ml3
ml4 -- ml4, 4th-param	{#insert zzSetGpnToPrevPpnToNextParamNumTo4}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	ml4
ml5 -- ml5, 5th-param	{#insert zzSetGpnToPrevPpnToNextParamNumTo5}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	ml5
mla -- Sig up: Paste LAST param's name at cursor	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st1}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mla
mlb -- ml1, 2nd-to-last	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st2}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mlb
mlc -- ml3, 3rd-to-last	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st3}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mlc
mld -- ml4, 4th-to-last	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st4}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mld
mle -- ml5, 5th-to-last	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st5}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mle
mlgn -- mln, nth-to-last (prompt, 1=last)	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_stPrompt}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mlgn
mln -- mln, prompt#-param	{#insert zzSetGpnToPrevPpnToNextParamNumToPrompt}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mln
mz1 -- Sig down: Paste param-1's name at cursor	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st1}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mz1
mz2 -- mz2, 2nd-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st2}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mz2
mz3 -- mz3, 3rd-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st3}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mz3
mz4 -- mz4, 4th-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st4}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mz4
mz5 -- mz5, 5th-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st5}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mz5
mza -- Sig down: Paste LAST param's name at cursor	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st1}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mza
mzb -- mz2, 2nd-to-last	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st2}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mzb
mzc -- mz3, 3rd-to-last	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st3}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mzc
mzd -- mz4, 4th-to-last	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st4}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mzd
mze -- mz5, 5th-to-last	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st5}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mze
mzgn -- mzn, nth-to-last (prompt, 1=last)	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_stPrompt}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mzgn
mzn -- mzn, prompt#-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_stPrompt}{#insert zzSetLltrCddAngFromL1cX2}{#insert zzAlterPasteParamPartAtCrsr_M_cdeAngGpnPpnPnum}{#insert zzPl1syn_M_yon}	mzn
nl1 -- Sig up: Paste param-1's name at cursor, no alteration	{#insert zzSetGpnToPrevPpnToNextParamNumTo1}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nl1
nl1syn	{#BALLOON -title Syntax: Get~print param NAME from sig -text {#insert zzNl1syns}=Paste the parameter name, unaltered, at the cursor  //  [[c,q,Q,o,O,s,S,+,_]]=ml1altersyn  //  [l]=from sig up, [z]=down, [1~5]=1st~5th param, [a~e]:a=LAST param, [[g]n]=prompt~# param ([g]:1=LAST)  //  See: ml1syn  //  javasyn}	nl1syn
nl1testall	{#insert zzJavaTestIntroFileNew}{#insert zzzJFSigWNumberedParamsGnrcsIn4}{#insert zTPGTDocTop}{#SETPHRASE -description zvLC_ALTR2 -content {#INPUT -head Alter opt?: [c,q,Q,o,O,s,S,+,_] (see ml1altersyn) -def c -single} -autotext zvLC_ALTR2 -folder ctvv_folder}{#insert zzzSetAngAng2ToPrompt}{#insert zENTER}NOTE: The what-param-part-to-keep pre-opt, if 'A' or 'G', will be changed to 'a' and 'g' for all non-generic (and prompt-#) parameters.{#insert zENTER2}nz1: {#insert nz1}{#insert zENTER}nz2: {#insert nz2}{#insert zENTER}nz3: {#insert nz3}{#insert zENTER}nz4: {#insert nz4}{#insert zENTER}nz5: {#insert nz5}{#insert zENTER}nzn: {#insert nzn}{#insert zENTER}nza: {#insert nza}{#insert zENTER}nzb: {#insert nzb}{#insert zENTER}nzc: {#insert nzc}{#insert zENTER}nzd: {#insert nzd}{#insert zENTER}nze: {#insert nze}{#insert zENTER}nzgn: {#insert nzgn}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}mz1: {#insert zzzAng2ForNonGnrcsLltr2}{#insert mz1}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}mz2: {#insert zzzAng2ForNonGnrcsLltr2}{#insert mz2}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}mz3: {#insert zzzAng2ForNonGnrcsLltr2}{#insert mz3}{#insert zzzEnterTestAng2Lltr2}mz4: {#insert zzzAng2Lltr2}{#insert mz4}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}mz5: {#insert zzzAng2ForNonGnrcsLltr2}{#insert mz5}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}mzn: {#insert zzzAng2ForNonGnrcsLltr2}{#insert mzn}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}emz1: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert mz1}{#insert zzzEnterTestAng2Lltr2}emz2: {#insert zzzAng2Lltr2}e{#insert mz2}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}emz3: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert mz3}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}emz4: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert mz4}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}emz5: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert mz5}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}emzn: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert mzn}{#insert zENTER}{#insert zTPGTDocBottom}{#insert zzzAng2ForNonGnrcsLltr2}ml1: {#insert zzzAng2ForNonGnrcsLltr2}{#insert ml1}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}ml2: {#insert zzzAng2ForNonGnrcsLltr2}{#insert ml2}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}ml3: {#insert zzzAng2ForNonGnrcsLltr2}{#insert ml3}{#insert zzzEnterTestAng2Lltr2}ml4: {#insert zzzAng2Lltr2}{#insert ml4}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}ml5: {#insert zzzAng2ForNonGnrcsLltr2}{#insert ml5}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}mln: {#insert zzzAng2ForNonGnrcsLltr2}{#insert mln}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}eml1: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert ml1}{#insert zzzEnterTestAng2Lltr2}eml2: {#insert zzzAng2Lltr2}e{#insert ml2}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}eml3: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert ml3}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}eml4: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert ml4}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}eml5: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert ml5}{#insert zzzEnterTestAng2ForNonGnrcsLltr2}emln: {#insert zzzAng2ForNonGnrcsLltr2}e{#insert mln}{#insert zENTER}nla: {#insert nla}{#insert zENTER}nlb: {#insert nlb}{#insert zENTER}nlc: {#insert nlc}{#insert zENTER}nld: {#insert nld}{#insert zENTER}nle: {#insert nle}{#insert zENTER}nlgn: {#insert nlgn}{#insert zENTER}nl1: {#insert nl1}{#insert zENTER}nl2: {#insert nl2}{#insert zENTER}nl3: {#insert nl3}{#insert zENTER}nl4: {#insert nl4}{#insert zENTER}nl5: {#insert nl5}{#insert zENTER}nln: {#insert nln}{#insert zENTER}{#insert zvSYNTAX_ON_stOn}{#insert zzRtlsyn_M_yon}	nl1testall
nl2 -- nl1, 2nd-param	{#insert zzSetGpnToPrevPpnToNextParamNumTo2}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nl2
nl3 -- nl1, 3rd-param	{#insert zzSetGpnToPrevPpnToNextParamNumTo3}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nl3
nl4 -- nl1, 4th-param	{#insert zzSetGpnToPrevPpnToNextParamNumTo4}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nl4
nl5 -- nl1, 5th-param	{#insert zzSetGpnToPrevPpnToNextParamNumTo5}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nl5
nla -- Sig up: Paste LAST param's name at cursor, no alteration	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st1}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nla
nlb -- nla, 2nd-to-last	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st2}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nlb
nlc -- nla, 3rd-to-last	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st3}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nlc
nld -- nla, 4th-to-last	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st4}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nld
nle -- nla, 5th-to-last	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_st5}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nle
nlgn -- nla, nth-to-last (prompt, 1=last)	{#insert zzSetGpnPpnToPrev}{#insert zvPARAM_NUM_stPrompt}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nlgn
nln -- nl1, prompt#-param	{#insert zzSetGpnToPrevPpnToNextParamNumToPrompt}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nln
nz1 -- Sig down: Paste param-1's name at cursor, no alteration	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st1}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nz1
nz2 -- nz1, 2nd-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st2}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nz2
nz3 -- nz1, 3rd-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st3}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nz3
nz4 -- nz1, 4th-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st4}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nz4
nz5 -- nz1, 5th-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_st5}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nz5
nza -- Sig down: Paste LAST param's name at cursor, no alteration	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st1}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nza
nzb -- nza, 2nd-to-last	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st2}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nzb
nzc -- nza, 3rd-to-last	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st3}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nzc
nzd -- nza, 4th-to-last	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st4}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nzd
nze -- nza, 5th-to-last	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_st5}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nze
nzgn -- nza, nth-to-last (prompt, 1=last)	{#insert zzSetGpnToNextPpnToPrev}{#insert zvPARAM_NUM_stPrompt}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nzgn
nzn -- nz1, prompt#-param	{#insert zzSetGpnPpnToNext}{#insert zvPARAM_NUM_stPrompt}{#insert zzPasteParamNameAtCrsr_M_gpnPpnPnum}{#insert zzNl1syn_M_yon}	nzn
