cat
jgx
jfgnext
Java
JFunc-Sig Above/Below
Navigate The Just-Above Or -Below Java Function Signature
Go-to a function-signature, or select-copy it, or write it back it at the original cursor location. A signature always includes parameters, and optionally includes the function-name and return-type. Generics can be included or excluded from the return- or parameter-types. Parameters can be retrieved entirely, or can be configured to only keep names or types. (Throughout these phrases, the 'signature' is defined as the function-name-plus-parameters.)
3
jgpnmw,jggs,jgpns
0

on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoHafterQ}__OPEN_CURLY__#insert zzJgOptInfoHafterY}__OPEN_CURLY__#insert zzJgOptInfoK}__OPEN_CURLY__#insert zzJgOptInfoL}__OPEN_CURLY__#insert zzJgOptInfoM}__OPEN_CURLY__#insert zzJgOptInfoN}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoT}__OPEN_CURLY__#insert zzJgOptInfoY}__OPEN_CURLY__#insert zzJgOptInfoZ}
(*---------------------------------------------------------------*)
cat
jgn
jfgfromname
Java
JFunc-Sig From Name
Navigate The Java Function Signature Having A Particular Name
Go-to a function-signature, or select-copy it, or write it back it at the original cursor location. A signature always includes parameters, and optionally includes the function-name and return-type. Generics can be included or excluded from the return- or parameter-types. Parameters can be retrieved entirely, or can be configured to only keep names or types. (Throughout these phrases, the 'signature' is defined as the function-name-plus-parameters.)
5
jgcb,jgpw,jgkmw,jgkg,jgks
0

on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoHafterQ}__OPEN_CURLY__#insert zzJgOptInfoHafterY}__OPEN_CURLY__#insert zzJgOptInfoK}__OPEN_CURLY__#insert zzJgOptInfoL}__OPEN_CURLY__#insert zzJgOptInfoM}__OPEN_CURLY__#insert zzJgOptInfoN}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoT}__OPEN_CURLY__#insert zzJgOptInfoY}__OPEN_CURLY__#insert zzJgOptInfoZ}
(*---------------------------------------------------------------*)
pset
jggs
jfgsigstart
Jfgnext
gsgt[g,p] ... gsgtr[g,t,y] ... gss[c][r][g,p] ... wxm[g,p][l,z] ... wxm[g,p,r,rg][n,t,y][l,z]
With the cursor at the start of the function-signature-line (column zero in the line on which the signature begins), 'G'o-to, or 'S'elect, or 'S'elect-'C'opy, or copy-then-paste ('W'rite) the signature at the e'X'isting 'M'ark ('__OPEN_CURLY__#insert zYmark}').
on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoL}__OPEN_CURLY__#insert zzJgOptInfoN}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoT}__OPEN_CURLY__#insert zzJgOptInfoY}__OPEN_CURLY__#insert zzJgOptInfoZ}__OPEN_CURLY__#insert zzPhraseFileNameFooter}__OPEN_CURLY__#insert zXPROOT_DIR_jFuncSig}jfsig_from_sig_start.px.txt
(*---------------------------------------------------------------*)
pset
jgks
jfgplinksc
Jfgfromname
scpk[g,m[c],p] ... scpk[u,f[local]]
For the function-name in the url of the 'P'revious lin'K', go to, and then select-and-copy its signature. There are also utility functions to retrieve the url or function name from the previous link-url. (__OPEN_CURLY__#insert zzJgAddtnlPromptFuncsMsg} See 'zidxjfgplinkscx'.)
on
--'scpk[u,f[local]]' utility functions--__OPEN_CURLY__#insert zEnterTab}Retrieves the function name ('f') or entire-url ('u') from the previous link-url. The 'local' option only considers urls beginning with a hash: '#'.__OPEN_CURLY__#insert zEnterBksp}__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoM}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoPromptPost_preSyntax}gtpk[m][p,[r]g][prompt] ... gtpkmf[prompt] ... scpk[m[c]][[p,[r]g]][prompt]__OPEN_CURLY__#insert zzJgOptInfoPromptPost_postSyntax}__OPEN_CURLY__#insert zzPhraseFileNameFooter}__OPEN_CURLY__#insert zXPROOT_DIR_jFuncSig}jfsig_for_prev_url_func_name_sc.px.txt
(*---------------------------------------------------------------*)
pset
jgkmw
jfgplinkmw
Jfgfromname
mw[c]pkg[[n,t,y]] ... mw[c]pkmrg[[n,t,y]] ... mw[c]pkp[[n,t,y]]
For the function-name in the url of the 'P'revious lin'K', print its signature at the cursor. ('M'ark the current cursor position [with a y-mark: '__OPEN_CURLY__#insert zYmark}'], go-to-and-copy the signature, then 'W'rite it back at the mark.)
on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoM}__OPEN_CURLY__#insert zzJgOptInfoN}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoT}__OPEN_CURLY__#insert zzJgOptInfoY}__OPEN_CURLY__#insert zzPhraseFileNameFooter}__OPEN_CURLY__#insert zXPROOT_DIR_jFuncSig}jfsig_for_prev_url_func_name_mw.px.txt
(*---------------------------------------------------------------*)
pset
jgkg
jfgplinkgt
Jfgfromname
gtpkmc[p,[r]g] ... gtpkm[g,p]
For the function-name in the url of the 'P'revious lin'K', go to its signature. (__OPEN_CURLY__#insert zzJgAddtnlPromptFuncsMsg} See 'zidxjfgplinkgtx'.)
on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoM}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoPromptPost_preSyntax}gtpkm[f,p,[r]g]prompt__OPEN_CURLY__#insert zzJgOptInfoPromptPost_postSyntax}__OPEN_CURLY__#insert zzPhraseFileNameFooter}__OPEN_CURLY__#insert zXPROOT_DIR_jFuncSig}jfsig_for_prev_url_func_name_gt.px.txt
(*---------------------------------------------------------------*)
pset
jgpw
jfgprevword
Jfgfromname
mppw[[n,t,y]] ... gtpw[f,g,p,rg][m] ... scpw[g,p,rg][m]
For the function-name in the 'P'revious 'W'ord, go to its signature, or select-copy it, or write it at the cursor.
on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoF}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoM}__OPEN_CURLY__#insert zzJgOptInfoN}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoT}__OPEN_CURLY__#insert zzJgOptInfoY}__OPEN_CURLY__#insert zzPhraseFileNameFooter}__OPEN_CURLY__#insert zXPROOT_DIR_jFuncSig}jfsig_for_prev_word_func_name.px.txt
(*---------------------------------------------------------------*)
pset
jgcb
jfgcbname
Jfgfromname
gtcb[p][g] ... gtcbm[c][g,p,rg] ... mwc[c]b[g,p,rg][[n,t,y]] ... sccb[m[c]][g,p,rg]
For the function name in the 'C'lip'B'oard, go to its signature, or select-copy it, or 'W'rite it at the cursor. (__OPEN_CURLY__#insert zzJgAddtnlPromptFuncsMsg} See 'zidxjgcbnamex'.)
on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoM}__OPEN_CURLY__#insert zzJgOptInfoN}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoT}__OPEN_CURLY__#insert zzJgOptInfoY}__OPEN_CURLY__#insert zzJgOptInfoPromptPost_preSyntax}gtcb[m[c]][[p,[r]g]][prompt] ... sccbg[c[p,[r]g]][prompt] ... sccbm[[p,[r]g]][prompt] ... sccb[p,rg][prompt]__OPEN_CURLY__#insert zzJgOptInfoPromptPost_postSyntax}__OPEN_CURLY__#insert zzPhraseFileNameFooter}__OPEN_CURLY__#insert zXPROOT_DIR_jFuncSig}jfsig_for_func_name_in_cb.px.txt
(*---------------------------------------------------------------*)
pset
jgpnmw
jfgpnmarkwrite
Jfgnext
mw[c][[r]g,p][[n,t,y]][l,z] ... mw[c]r[t,y,yh][l,z] ... sprg[l,z][k[np]][c] ... thisfn[l,z][c,q[h]]
For the signature just above ('L') or below ('Z'), write it at the cursor. ('M'ark the current cursor location, copy the signature, then 'W'rite it at the cursor.) 'sprg*' is the same as 'mw*', but ignores the signature's function (constructor) name, and uses the super-class-name in its place. This phrase-set also contains the 'thisfn' utility function, which retrieves the function name only.
on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoHafterQ}__OPEN_CURLY__#insert zzJgOptInfoHafterY}__OPEN_CURLY__#insert zzJgOptInfoK}__OPEN_CURLY__#insert zzJgOptInfoL}__OPEN_CURLY__#insert zzJgOptInfoN}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoQ}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoT}__OPEN_CURLY__#insert zzJgOptInfoY}__OPEN_CURLY__#insert zzJgOptInfoZ}__OPEN_CURLY__#insert zzPhraseFileNameFooter}__OPEN_CURLY__#insert zXPROOT_DIR_jFuncSig}jfsig_prev_next__go_to_sel_copy.px.txt
(*---------------------------------------------------------------*)
pset
jgpns
jfgpnselcopy
Jfgnext
sc[m[c]][g,p][l,z] ... sc[m[c]]r[g,t,y][l,z] ... gt[m[c]][g,p,rg][l,z]
'G'o 'T'o, and then 'S'elect-and-'C'opy, the signature just above ('L') or below ('Z') the cursor.
on
__OPEN_CURLY__#insert zzAllOptsEntrTb}__OPEN_CURLY__#insert zzJgOptInfoC}__OPEN_CURLY__#insert zzJgOptInfoG}__OPEN_CURLY__#insert zzJgOptInfoHafterY}__OPEN_CURLY__#insert zzJgOptInfoL}__OPEN_CURLY__#insert zzJgOptInfoM}__OPEN_CURLY__#insert zzJgOptInfoP}__OPEN_CURLY__#insert zzJgOptInfoR}__OPEN_CURLY__#insert zzJgOptInfoT}__OPEN_CURLY__#insert zzJgOptInfoY}__OPEN_CURLY__#insert zzJgOptInfoZ}__OPEN_CURLY__#insert zzPhraseFileNameFooter}__OPEN_CURLY__#insert zXPROOT_DIR_jFuncSig}jfsig_prev_next__go_to_sel_copy.px.txt
(*---------------------------------------------------------------*)

