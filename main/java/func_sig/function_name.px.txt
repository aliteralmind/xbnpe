fal -- Sig up: Alter-paste func-name at cursor	{#insert zzFNmSetLCAltrCddFromL1cGPNToPrev}{#insert zXPasteAltrFNmFrom1PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fal
fal2 -- fal, 2 sigs up	{#insert zzFNmSetLCAltrCddFromL1cGPNToPrev}{#insert zXPasteAltrFNmFrom2PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fal2
fal3 -- fal, 3 sigs up	{#insert zzFNmSetLCAltrCddFromL1cGPNToPrev}{#insert zXPasteAltrFNmFrom3PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fal3
falaltersyn1	{#BALLOON -title Alteration/presentation PRE~OPT -text [c,d,D,o,O,p,P,q,Q,s,S,+,\,_]=declares how to alter func nm  //  [c]=CODE~d, [q]=surr w/ {#insert zAscQQ}, o=surr w/ &quot;, [s]=surr w/ ', [p]=append (), [d]=apnd (...)  //  Continued: falaltersyn2   //  capitalized=also CODE~d   //   Examples: afal2, +fazn  //  falsyn}	falaltersyn1
falaltersyn2	{#BALLOON -title Alteration/presentation PRE~OPT -text [c,d,D,o,O,p,P,q,Q,s,S,+,\,_]=declares how to alter func nm  //  Continued from falaltersyn1  //  +={#insert zAscQQ}+...()+{#insert zAscQQ}, \=\{#insert zAscQQ}{#insert zAscQQ}+...()+{#insert zAscQQ}\{#insert zAscQQ}, _=...()=\{#insert zAscQQ}{#insert zAscQQ}+...()+{#insert zAscQQ}\{#insert zAscQQ}  //  falsyn}	falaltersyn2
faln -- fal, [prompt-#] sigs up	{#insert zzFNmSetLCAltrCddFromL1cGPNToPrev}{#insert zXPasteAltrFNmFromPrmptNumPrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	faln
falsyn	{#BALLOON -title Syntax: Alter~paste func~nm from sig -text {#insert zzFalsyns}=Alter~paste function~name from neighboring signature. {#insert zzLz23nSynTxt}, [c,d,D,o,O,p,P,q,Q,s,S,+,\,_]: falaltersyn[1,2]  //  See: fnlsyn  // javasyn}	falsyn
zzFalsyns	[c,d,D,o,O,p,P,q,Q,s,S,+,\,_]fa[l,z][[2~3,n]]	zzFalsyns
faz -- Sig down: Alter-paste func-name at cursor	{#insert zzFNmSetLCAltrCddFromL1cGPNToNext}{#insert zXPasteAltrFNmFrom1PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	faz
faz2 -- faz, 2 sigs down	{#insert zzFNmSetLCAltrCddFromL1cGPNToNext}{#insert zXPasteAltrFNmFrom2PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	faz2
faz3 -- faz, 3 sigs down	{#insert zzFNmSetLCAltrCddFromL1cGPNToNext}{#insert zXPasteAltrFNmFrom3PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	faz3
fazn -- faz, [prompt-#] sigs down	{#insert zzFNmSetLCAltrCddFromL1cGPNToNext}{#insert zXPasteAltrFNmFromPrmptNumPrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fazn
fnl -- Sig up: Paste func-name at cursor	{#insert zzSetCddLltrToESGpnToPrev}{#insert zXPasteAltrFNmFrom1PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fnl
fnl2 -- fnl, 2 sigs up	{#insert zzSetCddLltrToESGpnToPrev}{#insert zXPasteAltrFNmFrom2PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fnl2
fnl3 -- fnl, 3 sigs up	{#insert zzSetCddLltrToESGpnToPrev}{#insert zXPasteAltrFNmFrom3PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fnl3
fnln -- fnl, [prompt-#] sigs up	{#insert zzSetCddLltrToESGpnToPrev}{#insert zXPasteAltrFNmFromPrmptNumPrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fnln
fnlsyn	{#BALLOON -title Syntax: Get~paste func~nm from sig -text fn[l,z][[2~3,n]]=Get~then~paste the function~name from a neighboring signature. {#insert zzLz23nSynTxt}  //  fnltestall  //  See: falsyn  //  javasyn}	fnlsyn
fnltestall	{#insert zzzJavaTestIntroFileNewTest3SigsGTTop}{#SETPHRASE -description zvLC_ALTR2 -content {#INPUT -head Alter opt?: [c,d,D,o,O,p,P,q,Q,s,S,+,\,_] (see falaltersyn) -def c -single} -autotext zvLC_ALTR2 -folder ctvv_folder}fnz: {#insert fnz}{#insert zENTER}fnz2: {#insert fnz2}{#insert zENTER}fnz3: {#insert fnz3}{#insert zENTER}fnzn: {#insert fnzn}{#insert zzzEnterLcAltr2}faz: {#insert zzzTstLltr2}{#insert faz}{#insert zzzEnterLcAltr2}faz2: {#insert zzzTstLltr2}{#insert faz2}{#insert zzzEnterLcAltr2}faz3: {#insert zzzTstLltr2}{#insert faz3}{#insert zzzEnterLcAltr2}fazn: {#insert zzzTstLltr2}{#insert fazn}{#insert zENTER}{#insert zTPGTDocBottom}{#insert zzzTstLltr2_stES}fnl: {#insert fnl}{#insert zENTER}fnl2: {#insert fnl2}{#insert zENTER}fnl3: {#insert fnl3}{#insert zENTER}fnln: {#insert fnln}{#insert zzzEnterLcAltr2}fal: {#insert zzzTstLltr2}{#insert fal}{#insert zzzEnterLcAltr2}fal2: {#insert zzzTstLltr2}{#insert fal2}{#insert zzzEnterLcAltr2}fal3: {#insert zzzTstLltr2}{#insert fal3}{#insert zzzEnterLcAltr2}faln: {#insert zzzTstLltr2}{#insert faln}{#insert zENTER}{#insert zvSYNTAX_ON_stOn}{#insert zzFnlsyn_M_yon}	fnltestall
fnz -- Sig down: Paste func-name at cursor	{#insert zzSetCddLltrToESGpnToNext}{#insert zXPasteAltrFNmFrom1PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fnz
fnz2 -- fnz, 2 sigs down	{#insert zzSetCddLltrToESGpnToNext}{#insert zXPasteAltrFNmFrom2PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fnz2
fnz3 -- fnz, 3 sigs down	{#insert zzSetCddLltrToESGpnToNext}{#insert zXPasteAltrFNmFrom3PrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fnz3
fnzn -- fnz, [prompt-#] sigs down	{#insert zzSetCddLltrToESGpnToNext}{#insert zXPasteAltrFNmFromPrmptNumPrvNxtJFSigAtX_M_cdeGpnWycAltr}{#insert zzFnlsyn_M_yon}	fnzn
zFNmInCBAlterPaste_M_lltr -*- zvLC_ALTR (lowercase and not 'c')	{#insert {#COND -if {#LENGTH {#insert zvLC_ALTR}} = 0 -then zTPPaste -else {#COND -if {#insert zvLC_ALTR} = q -then zzQQPasteQQ_M_cde -else {#COND -if {#insert zvLC_ALTR} = o -then zzQQPasteQQHtmlEsc -else {#COND -if {#insert zvLC_ALTR} = s -then zzQPasteQ -else {#COND -if {#insert zvLC_ALTR} = p -then zzPasteParenParen -else {#COND -if {#insert zvLC_ALTR} = d -then zzPasteParenDDDParen -else {#COND -if {#insert zvLC_ALTR} = + -then zzQPlsPastePlsQ -else {#COND -if {#insert zvLC_ALTR} = \ -then zzLQQPlsPastePlsQLQ -else {#COND -if {#insert zvLC_ALTR} = _ -then zzFNmPPEqlsLQQPlsPastePlsQLQ -else zzErrDlgBadParamAltrFlag_M_lltr}}}}}}}}}}	zFNmInCBAlterPaste_M_lltr
zSelCopyFuncNmInPrvNxtJavaSig_M_gpnWyc -*-	{#insert zGoToOpenParenInPrvNxtJavaSig_M_gpnWyc}{#insert zSelectL1wCopy}	zSelCopyFuncNmInPrvNxtJavaSig_M_gpnWyc
zXPasteAltrFNmFrom1PrvNxtJFSigAtX_M_cdeGpnWycAltr	{#insert zvAWAY_CNT_st1}{#insert zXPasteAltrFNmFromPrvNxtJFSigAtX_M_cdeGpnWycAltr}	zXPasteAltrFNmFrom1PrvNxtJFSigAtX_M_cdeGpnWycAltr
zXPasteAltrFNmFrom2PrvNxtJFSigAtX_M_cdeGpnWycAltr	{#insert zvAWAY_CNT_st2}{#insert zXPasteAltrFNmFromPrvNxtJFSigAtX_M_cdeGpnWycAltr}	zXPasteAltrFNmFrom2PrvNxtJFSigAtX_M_cdeGpnWycAltr
zXPasteAltrFNmFrom3PrvNxtJFSigAtX_M_cdeGpnWycAltr	{#insert zvAWAY_CNT_st3}{#insert zXPasteAltrFNmFromPrvNxtJFSigAtX_M_cdeGpnWycAltr}	zXPasteAltrFNmFrom3PrvNxtJFSigAtX_M_cdeGpnWycAltr
zXPasteAltrFNmFromPrmptNumPrvNxtJFSigAtX_M_cdeGpnWycAltr	{#insert zvAWAY_CNT_stPrompt}{#insert zXPasteAltrFNmFromPrvNxtJFSigAtX_M_cdeGpnWycAltr}	zXPasteAltrFNmFromPrmptNumPrvNxtJFSigAtX_M_cdeGpnWycAltr
zXPasteAltrFNmFromPrvNxtJFSigAtX_M_cdeGpnWycAltr -*-	{#insert zzXmarkMaybeCdd_M_cde}{#insert zSelCopyFuncNmInPrvNxtJavaSig_M_gpnWyc}{#insert zzXUpDownOppositeDir_M_gpn}{#insert zFNmInCBAlterPaste_M_lltr}{#insert zzB4EndCODETagGTPIfCdd_M_cde}	zXPasteAltrFNmFromPrvNxtJFSigAtX_M_cdeGpnWycAltr
zzErrDlgFnmLltr_M_lltr	{#MSGBOX -head ERROR -text ERROR ~~ The alteration pre~option (currently zvLC_ALTR='{#insert zvLC_ALTR}') must be one of the following: [c,d,D,o,O,p,P,q,Q,s,S,+,\,_] (see falaltersyn){#insert zCancelProcNowPostTxt}  //  {#insert zzAltrFlagPrgrmrNoteTxt}{#insert zCancelProcNowPostTxt}}	zzErrDlgFnmLltr_M_lltr
zzFNmPPEqlsLQQPlsPastePlsQLQ	{#insert zTPPaste}()={#insert zzLQQPlsPastePlsQLQ}	zzFNmPPEqlsLQQPlsPastePlsQLQ
zzFNmSetLCAltrCddFromL1c	{#insert zCutL1c}{#insert {#COND -if {#INSERTCLIPBOARD} = c -then zzSetCddToCddLltrToES -else {#COND -if {#insert zLowercaseCB} = d -then zzParamSetLCAltrCddIfUCFromCB -else {#COND -if {#insert zLowercaseCB} = o -then zzParamSetLCAltrCddIfUCFromCB -else {#COND -if {#insert zLowercaseCB} = p -then zzParamSetLCAltrCddIfUCFromCB -else {#COND -if {#insert zLowercaseCB} = q -then zzParamSetLCAltrCddIfUCFromCB -else {#COND -if {#insert zLowercaseCB} = s -then zzParamSetLCAltrCddIfUCFromCB -else {#COND -if {#INSERTCLIPBOARD} = + -then zzSetLltrToCBCddToES -else {#COND -if {#INSERTCLIPBOARD} = \ -then zzSetLltrToCBCddToES -else {#COND -if {#INSERTCLIPBOARD} = _ -then zzSetLltrToCBCddToES -else zzErrDlgFnmLltr_M_lltr}}}}}}}}}}	zzFNmSetLCAltrCddFromL1c
zzFNmSetLCAltrCddFromL1cGPNToNext	{#insert zzFNmSetLCAltrCddFromL1c}{#insert zvGPRV_NXT_stNext}	zzFNmSetLCAltrCddFromL1cGPNToNext
zzFNmSetLCAltrCddFromL1cGPNToPrev	{#insert zzFNmSetLCAltrCddFromL1c}{#insert zvGPRV_NXT_stPrev}	zzFNmSetLCAltrCddFromL1cGPNToPrev
zzFnlsyn_M_yon -- Needs zvSYNTAX_ON	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then fnlsyn -else z1slp}}	zzFnlsyn_M_yon
zzLQQPlsPastePlsQLQ	\{#insert zAscQQ}{#insert zzQPlsPastePlsQ}\{#insert zAscQQ}	zzLQQPlsPastePlsQLQ
zzLz23nSynTxt	[l]=sig up, [z]=sig down, [[2~3,n]]=2nd/3rd/n~th sig up/down	zzLz23nSynTxt
zzPasteParenDDDParen	{#insert zTPPaste}(...)	zzPasteParenDDDParen
zzPasteParenParen	{#insert zTPPaste}()	zzPasteParenParen
zzQPasteQ	'{#insert zTPPaste}'	zzQPasteQ
zzQPlsPastePlsQ	{#insert zAscQQ} + {#insert zTPPaste}() + {#insert zAscQQ}	zzQPlsPastePlsQ
zzQQPasteQQHtmlEsc	&quot;{#insert zTPPaste}&quot;	zzQQPasteQQHtmlEsc
zzQQPasteQQ_M_cde	{#insert zQQOrQQHtmlIfCdd_M_cde}{#insert zTPPaste}{#insert zQQOrQQHtmlIfCdd_M_cde}	zzQQPasteQQ_M_cde
zzSetCddLltrToESGpnToNext	{#insert zvCODED_ES_stES}{#insert zvLC_ALTR_stES}{#insert zvGPRV_NXT_stNext}	zzSetCddLltrToESGpnToNext
zzSetCddLltrToESGpnToPrev	{#insert zvCODED_ES_stES}{#insert zvLC_ALTR_stES}{#insert zvGPRV_NXT_stPrev}	zzSetCddLltrToESGpnToPrev
zzSetLltrToCBCddToES	{#SETPHRASE -description zvLC_ALTR -content {#INSERTCLIPBOARD} -autotext zvLC_ALTR -folder ctvv_folder}{#insert zvCODED_ES_stES}	zzSetLltrToCBCddToES
zzzEnterLcAltr2	{#insert zENTER}{#insert zzzTstLltr2}	zzzEnterLcAltr2
