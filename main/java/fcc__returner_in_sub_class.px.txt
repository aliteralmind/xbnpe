__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress: Large set of generically useful scripting tools for MS Windows, written in PhraseExpress and TextPad.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
oribcnp -- sribcnp, but not a self-returner (Other Returner)(**)	(*Call with the cursor somewhere in the signature line. The non-'y' phrases do not html-escape the @return value, including any generics that happen to be in it. oribcnp's sister-phrase, oribcnpy, does. For all phrases in this folder, the signature is expected to have the format [pub/priv/... ret-val func-name(params) open-curly], where spaces are any amount of tab/spaces. ***NOTE*** If you want to have a casted return for a NON-self-returner, use scribc*. These phrases names need to be clarified. Unexpected benefit, but confusing with phrase names as they are.*){#insert zzOribcnpRAW}	oribcnp
oribcnpn -- oribcnp loop, n times(**)	(*All signature lines must have the same indent, and must be in contiguous lines. Call with the cursor in the top-most signature.*){#insert zzOribcnpnRAW}	oribcnpn
oribcnpy -- oribcnp, escapes generics in ret-val	{#insert zzOribcnpyRAW}	oribcnpy
oribcnpyn -- oribcnpn, escapes generics in ret-val	{#insert zzOribcnpynRAW}	oribcnpyn
oribcwp -- sribcwp, but Not a self Returner (Other) (returns a diff type)	{#insert zzOribcwpRAW}	oribcwp
oribcwpn -- oribcwp	{#insert zzOribcwpnRAW}	oribcwpn
oribcwpy -- oribcwp, escapes generics in ret-val	{#insert zzOribcwpyRAW}	oribcwpy
oribcwpyn -- oribcwpn, escapes generics in ret-val	{#insert zzOribcwpynRAW}	oribcwpyn
scribcnp -- sribcnp, casted-return (**)	(*return (RET-TYPE)super.func(), instead of return super.func();return this;*){#insert zzScribcnpRAW}	scribcnp
scribcnpn -- sribcnpn, N times	{#insert zzScribcnpnRAW}	scribcnpn
scribcnpy -- sribcnpy, casted-return	{#insert zzScribcnpyRAW}	scribcnpy
scribcnpyn -- scribcnpy, N times	{#insert zzScribcnpynRAW}	scribcnpyn
scribcwp -- sribcwp, casted-return	{#insert zzScribcwpRAW}	scribcwp
scribcwpn -- sribcwpn, casted-return	{#insert zzScribcwpnRAW}	scribcwpn
scribcwpy -- sribcwpy, casted-return	{#insert zzScribcwpyRAW}	scribcwpy
scribcwpyn -- sribcwpyn, casted-return	{#insert zzScribcwpynRAW}	scribcwpyn
sribcnp -- Self-Returner In Sub-Class, No Params	{#insert zzSribcnpRAW}	sribcnp
sribcnpn -- sribcnp	{#insert zzSribcnpnRAW}	sribcnpn
sribcnpy -- sribcnp, escapes generics in ret-val	{#insert zzSribcnpyRAW}	sribcnpy
sribcnpyn -- sribcnpn, escapes generics in ret-val	{#insert zzSribcnpynRAW}	sribcnpyn
sribcwp -- Self-Returner In suB-Class, With Params	{#insert zzSribcwpRAW}	sribcwp
sribcwpn -- sribcwp	{#insert zzSribcwpnRAW}	sribcwpn
sribcwpy -- sribcwp, escapes generics in ret-val	{#insert zzSribcwpyRAW}	sribcwpy
sribcwpyn -- sribcwpn, escapes generics in ret-val	{#insert zzSribcwpynRAW}	sribcwpyn
