__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
jxsetgetter -- New var w/ set-getter code (**)	(*To add as a parameter to an eXisting setter. Call thi from an empty line. It is recommended to call this from the very bottom of your class file, but using the indentation expected or the initialization line (private int i = 1;).*){#insert zjsgbSetupAndInitLine}{#insert zjxsgLinesForConstructor}{#insert zjxsgSetCILockedInfo}{#insert zjxsgCopyCnstrLines}{#insert zjsgCrashIfNull}{#insert zjxsgSetterLines}{#insert zjsgbGtrTSLinesUnsetReformatDONE}	jxsetgetter

jsetgetter -- New var w/ set-getter code (**)	(*A new setter is created (none eXists). See jxsetgettter.*){#insert zKeyPressFast}{#insert zjsgbSetupAndInitLine}{#insert zjsgLinesForConstructor}{#insert zjsgSetCILockedInfo}{#insert zjsgCopyCnstrLines}{#insert jxsgCrashIfNull}{#insert zjsgSetter}{#insert zjsgbGtrTSLinesUnsetReformatDONE}	jsetgetter

jsgbpostreplacements -- To run the post-output replacemnts only (**)	(*This is all the replacements made after the output is complete. If something goes wrong during the replacements, but the output is all good, then try this. NOTE: Cursor must be just after the zjsgbMarkZ.*){#insert zsgbSelectBlockFDlg}{#insert zRplcDlgSelRE}{#insert zmrreJsgbDelEmptyLines2XREoff}{#insert zmrgJsgbDelInAllMarks}{#insert zRplcDlgClose}(*The jsgb block is still selected.*){#insert zRIGHT}{#insert zENTER}{#insert zVmark}(*Where the cursor ends*){#insert zzjsgbRplcDataPlaceHolders}{#insert zjsgbMarkAllDashFORLines}{#insert zUnindentMarksGo}{#insert zpcctDelInAllMarksGoTD}{#insert zTPGTDocTop}{#insert zVDownDelete}{#insert zjsgbDONEDlg}	jsgbpostreplacements
