pt4	{#SETPHRASE -description zvFUNC_COUNT -content 1 -autotext zvFUNC_COUNT -folder ctvv_folder}{#insert zz4protIntroDlg}{#insert zTPBookmarkClearAll}{#insert zz4protAtJFSigLnStartBkmkOnSetVdyCopyLnXDnWrtPubFunc}{#insert zXSetClsNmToSuperClassXDownDel}{#insert zz4protAtPubFuncEndBkmkUpWrtProtFunc_M_rcm}{#insert zzPt4syn_M_yon}	pt4
pt4n	{#SETPHRASE -description zvFUNC_COUNT -content {#INPUT -head How many _4prot func~sig lines? -single} -autotext zvFUNC_COUNT -folder ctvv_folder}{#insert zz4protIntroDlg}{#insert zzSetGpnToNextWycTo1}{#insert zTPBookmarkClearAll}{#insert zXSetClsNmToSuperClassXDownDel}{#LOOP {#insert zz4protAtJFSigLnStartBkmkOnSetVdyCopyLnXDnWrtPubFunc}{#insert zHOME}{#insert zXmark}{#insert zz4protAtPubFuncEndBkmkUpWrtProtFunc_M_rcm}{#insert zTPParaDown}{#insert zRIGHT} -count {#CALC {#insert zvFUNC_COUNT} - 1 -round 0 -thousands none}}{#insert zz4protAtJFSigLnStartBkmkOnSetVdyCopyLnXDnWrtPubFunc}{#insert zz4protAtPubFuncEndBkmkUpWrtProtFunc_M_rcm}{#insert zzPt4syn_M_yon}	pt4n
pt4nx -- All syntax-summaries in all XBN-PhraseExpress projects	{#SETPHRASE -description zvDIRECTORY -content {#insert zXPROOT_DIR_java}xbn_java\ -autotext zvDIRECTORY -folder ctvv_folder}{#SETPHRASE -description zvFILE_NAME -content 4prot_example_input_DO_NOT_IMPORT.txt -autotext zvFILE_NAME -folder ctvv_folder}{#insert zInsFileTextToNewWAboutToWarning_M_dirFnm}{#insert zTPGTDocTop}{#insert zDOWN}{#insert zzSqBrkCURSORSlk2Bksp8}{#insert zzPt4syn_M_yon}	pt4nx
pt4syn	{#BALLOON -title Syntax: XBN~Java {#insert zAscQQ}_4prot{#insert zAscQQ} functions -text pt4[n[x]]=Transform {#insert zAscQQ}_4prot{#insert zAscQQ} signature~lines to two functions--one protected, one public~don't~use--as required in the sub~class.  //  [n]=prompt~# sig~lines, [x]=example input  //  javasyn}	pt4syn
zz4protAtJFSigLnStartBkmkOnSetVdyCopyLnXDnWrtPubFunc	{#insert zzSetGpnToNextWycTo1}{#insert zTPBookmarkToggle}{#insert zTPMoveR1w}{#insert zRIGHT}{#insert zSelectR1wCopy}{#SETPHRASE -description zvVOID_YES -content {#COND -if {#INSERTCLIPBOARD} = void -then yes -else} -autotext zvVOID_YES -folder ctvv_folder}{#insert zSelCopyParagraph}{#insert zXDownRight}{#insert zPasteXUpDelete}{#insert zTPMoveR1w} final{#insert zGT1stNonWSCharInLine}{#insert zCrsrAtJFSigLnChr1UOXBlockThrowLn}{#insert zENTER}\\\}{#insert zENTER}	zz4protAtJFSigLnStartBkmkOnSetVdyCopyLnXDnWrtPubFunc
zz4protAtPubFuncEndBkmkUpWrtProtFunc_M_rcm -- Needs zvCLS_NM=super-class	{#insert zzSetGpnToNextWycTo1}{#insert zTPBookmarkGTPrev}(*Unmark:*){#insert zTPBookmarkToggle}{#insert zGT1stNonWSCharInLine}{#insert zTPSelectR1w}protected{#insert zFindDlgOpenUp}{#SETPHRASE -description zvFIND_WHAT -content <P> -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zFindBtnNext}{#insert zFindDlgClose}{#insert zLEFT}{#insert zBKSP}/**{#insert zEnterTab}{#insert zTPParaDown}{#insert zENTER2}{#insert {#COND -if {#insert zvVOID_YES} = yes -then zzJdqtJFSigDnForSpr_M_gnxtWyc1Rcm -else zzJDAtRtrnJFSigDnForSpr_M_gnxtWyc1Rcm}}{#insert zEnterBksp} **/{#insert zDownHome}{#insert zTMFindNextOpenParen}{#insert zLEFT}(*Del _4prot:*){#BKSP -count 6}{#insert zTPNewLineAfter}{#COND -if {#insert zvVOID_YES} != yes -then return  (*ends w 2 spcs*) -else}super.{#insert zvFOBJ_NAME}{#insert zvALL_PARAMS}{#insert zJavaPostAllParamsDelTypes};{#insert zEnterBksp}\\\}{#insert zRIGHT}	zz4protAtPubFuncEndBkmkUpWrtProtFunc_M_rcm
zz4protIntroDlg	{#MSGBOX -head _prot4 for sub~class -text About to transform {#insert zAscQQ}_4prot{#insert zAscQQ} function signature line(s) to two functions for the sub~class. The cursor must be in the top~most signature line (its JavaDoc introduction paragraph is in the line above it). There must be an x-mark ({#insert zAscQQ}{#insert zXmark}{#insert zAscQQ} somewhere below the signatures, on a line by itself, AT COLUMN ZERO, indicating where the public~final~do~not~use function goes. See pt4nx.  //  zvFUNC_COUNT='{#insert zvFUNC_COUNT}'  //  Warning: This will clear all bookmarks. If there are none, it will DING. Word~wrap MUST be on before proceeding.)}	zz4protIntroDlg
zzJDAtRtrnJFSigDnForSpr_M_gnxtWyc1Rcm -- Needs zvAWAY_CNT=1, zvGPRV_NXT=Next, zvCLS_NM=super-class	@return  <CODE>{#insert zzLinkSuperDotJFSigDown_M_rcmGnxtWyc1}</CODE>	zzJDAtRtrnJFSigDnForSpr_M_gnxtWyc1Rcm
zzJdqtJFSigDnForSpr_M_gnxtWyc1Rcm -- Needs zvAWAY_CNT=1, zvGPRV_NXT=Next, zvCLS_NM=super-class	<P>Equal to{#insert zENTER}<BR> &nbsp; &nbsp; <CODE>{#insert zzLinkSuperDotJFSigDown_M_rcmGnxtWyc1}</CODE></P>	zzJdqtJFSigDnForSpr_M_gnxtWyc1Rcm
zzLinkSuperDotJFSigDown_M_rcmGnxtWyc1 -- Needs zvCLS_NM=super-class	{#insert zvDRN_stU}{#insert zvPAP_stM}(*1 works with zero or 1+ params. 0 only works with zero params:*){#insert zv0_OR_1_st1}{#insert zvANG_stA}{#insert zvPREK_stRLower}{#insert zvDISPLAY_stFncObjNm}{#insert zSelCopyPrvNxtJFSigReturnToXCursor_M_gpnWyc}{#insert zSigInCBSetFuncNmSetCIBParams}{#insert zClassFuncLinkDispFNmOptPrk_M_cnmFnmPrmsPapPrk}	zzLinkSuperDotJFSigDown_M_rcmGnxtWyc1
zzPt4syn_M_yon -- Needs zvSYNTAX_ON	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then pt4syn -else z1slp}}	zzPt4syn_M_yon
zzPt4syns	pt4[n[x]]	zzPt4syns
zzSetGpnToNextWycTo1	{#insert zvAWAY_CNT_st1}{#insert zvGPRV_NXT_stNext}	zzSetGpnToNextWycTo1
