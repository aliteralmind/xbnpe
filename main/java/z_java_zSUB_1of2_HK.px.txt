__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zGenericsInSharpsIfNotES_M_gnr -*- Needs zvGENERICS	{#insert {#COND -if {#LENGTH {#insert zvGENERICS}} = 0 -then z1slp -else zGenericsInSharps_M_gnr}}	zGenericsInSharpsIfNotES_M_gnr
zGenericsInSharps_M_gnr -*- Needs zvGENERICS	<{#insert zvGENERICS}>	zGenericsInSharps_M_gnr
zGenericsInHEscSharpsIfNotES_M_gnr -*- Needs zvGENERICS	{#insert {#COND -if {#LENGTH {#insert zvGENERICS}} = 0 -then z1slp -else zGenericsInHEscSharps_M_gnr}}	zGenericsInHEscSharpsIfNotES_M_gnr
zGenericsInHEscSharps_M_gnr -*- Needs zvGENERICS	&lt;{#insert zvGENERICS}&gt;	zGenericsInHEscSharps_M_gnr
zvGENERICS_stPrompt_M_fom -*- zvTYPE=zvFOBJ_NAME	{#SETPHRASE -description zvTYPE -content {#insert zvFOBJ_NAME} -autotext zvTYPE -folder ctvv_folder}{#insert zvGENERICS_stPrompt_M_typ}	zvGENERICS_stPrompt_M_fom
zvGENERICS_stPrompt_M_typ -*- Needs zvTYPE	{#SETPHRASE -description zvGENERICS -content {#insert zzGenericsPrompt_M_typ} -autotext zvGENERICS -folder ctvv_folder}	zvGENERICS_stPrompt_M_typ
zzGenericsPrompt_M_typ -*-	{#INPUT -head Generics for '{#insert zvTYPE}'? (no <>, NOTHING if none) -def {#insert zvGENERICS} -single}	zzGenericsPrompt_M_typ
zJFSigLineSlctdGoToOpenParen -*-	{#insert zJFSigLineSlctdSelectOpenParen}{#insert zLEFT}	zJFSigLineSlctdGoToOpenParen
zJFSigLineSlctdSelectOpenParen -*-	{#insert zLEFT}{#insert zTMFindNextOpenParen}	zJFSigLineSlctdSelectOpenParen
zJFSigLineSlctd_copyFuncName	{#insert zzJFSigLineSlctd_selectFuncName}{#insert zTPCopy}	zJFSigLineSlctd_copyFuncName
zJFSigLineSlctd_selCopyAllParams -*-[zCApCLOSE_SQUAREB]-	{#insert zJFSigLineSlctd_selectAllParams}{#insert zTPCopy}	zJFSigLineSlctd_selCopyAllParams
zJFSigLineSlctd_selCopyEntireSig -*-[zCASpCLOSE_SQUAREB]-	{#insert zJFSigLineSlctd_selectEntireSig}{#insert zTPCopy}	zJFSigLineSlctd_selCopyEntireSig
zJFSigLineSlctd_selCopyFuncName -*-[zASpCLOSE_SQUAREB]-	{#insert zJFSigLineSlctdGoToOpenParen}{#insert zSelectL1wCopy}	zJFSigLineSlctd_selCopyFuncName
zJFSigLineSlctd_selectAllParams -*-	{#insert zJFSigLineSlctdGoToOpenParen}{#insert zTMSelThrNextCloseParen}	zJFSigLineSlctd_selectAllParams
zJFSigLineSlctd_selectEntireSig -*-	{#insert zJFSigLineSlctdGoToOpenParen}{#insert zTPMoveL1w}{#insert zTMSelThrNextCloseParen}	zJFSigLineSlctd_selectEntireSig
zJFSigLineSlctd_selectFNmThrClsParen -*-	{#insert zzJFSigLineSlctdGoToFuncName}{#insert zTMSelThrNextCloseParen}	zJFSigLineSlctd_selectFNmThrClsParen
zJavaPostAllParamsDelNmsGncrs4FQP -*-	{#insert zPostBracketSelect}{#insert zTMJavaDelNmsGnrcsFromSlctdParams4FQP}{#insert zRIGHT}	zJavaPostAllParamsDelNmsGncrs4FQP
zJavaPostAllParamsDelNmsGncrs4TV -*-	{#insert zPostBracketSelect}{#insert zTMJavaDelNmsGnrcsFromSlctdParams4TV}{#insert zRIGHT}	zJavaPostAllParamsDelNmsGncrs4TV
zJavaPostAllParamsDelTypes -*-	{#insert zPostBracketSelect}{#insert zTMJavaDelTypesFromSlctdParams}{#insert zRIGHT}	zJavaPostAllParamsDelTypes
zPrvNxtJFSigSelCopyParamsBackToX_M_gpnWyc	{#insert zPrvNxtJFSigSelCopyParams_M_gpnWyc}{#insert zXUpDownOppositeDir_M_gpn}	zPrvNxtJFSigSelCopyParamsBackToX_M_gpnWyc
zPrvNxtJFSigSelCopyParams_M_gpnWyc -*- Needs zvGPRV_NXT, zvAWAY_CNT	{#insert zPrvNxtJFSigSelectParams_M_gpnWyc}{#insert zTPCopy}	zPrvNxtJFSigSelCopyParams_M_gpnWyc
zPrvNxtJFSigSelectParams_M_gpnWyc -*- Needs zvGPRV_NXT, zvAWAY_CNT	{#insert zSelectPrvNxtJavaFuncSigLine_M_gpnWyc}{#insert zJFSigLineSlctd_selectAllParams}	zPrvNxtJFSigSelectParams_M_gpnWyc
zSelCopyPrvNxtJFSigReturnToXCursor_M_gpnWyc -(*!*)-	(*In order to be more useful to external phrases (wishing to navigate to and copy/paste Java function signatures), it is important that the x-mark and its corresponding back-to-x-mark phrase-calls be in the same phrase--and that it NOT paste the signature (not in this phrase).*){#insert zXSelCopyPrvNxtJFSig_M_gpnWyc}{#insert zXUpDownOppositeDir_M_gpn}	zSelCopyPrvNxtJFSigReturnToXCursor_M_gpnWyc
zSelCopyPrvNxtJFSig_M_gpnWyc -*- Needs zvGPRV_NXT, zvAWAY_CNT	{#insert zSelectPrvNxtJFSig_M_gpnWyc}{#insert zTPCopy}	zSelCopyPrvNxtJFSig_M_gpnWyc
zSelectPrvNxtJFSigLine_M_gpn -*-	{#insert zTMFind{#insert zvGPRV_NXT}JavaFuncSigLine}	zSelectPrvNxtJFSigLine_M_gpn
zSelectPrvNxtJFSig_M_gpnWyc -*- Needs zvGPRV_NXT, zvAWAY_CNT	{#insert zSelectPrvNxtJavaFuncSigLine_M_gpnWyc}{#insert zJFSigLineSlctd_selectEntireSig}	zSelectPrvNxtJFSig_M_gpnWyc
zSelectPrvNxtJavaFuncSigLine_M_gpnWyc -*-	{#LOOP {#insert zSelectPrvNxtJFSigLine_M_gpn} -count {#insert zvAWAY_CNT}}	zSelectPrvNxtJavaFuncSigLine_M_gpnWyc
zXSelCopyPrvNxtJFSig_M_gpnWyc -*-	{#insert zXSelectPrvNxtJFSig_M_gpnWyc}{#insert zTPCopy}	zXSelCopyPrvNxtJFSig_M_gpnWyc
zXSelectPrvNxtJFSig_M_gpnWyc -*-	{#insert zXmark}{#insert zSelectPrvNxtJFSig_M_gpnWyc}	zXSelectPrvNxtJFSig_M_gpnWyc
zXSetFObjNmToThsSprClassXDownLeft_M_hun	{#insert zXSetFObjNmToThsSprClassXDown_M_hun}(*x-mark currently selected. If the link is coded, the open <CODE> tag will overwrite it--it's still needed to get-then-return from the signature:*){#insert zLEFT}	zXSetFObjNmToThsSprClassXDownLeft_M_hun
zXUpDownOppositeDir_M_gpn -*-(**)- Needs zvGPRV_NXT - If 'Prev': DOWN, if 'Next': UP	(*For returning to cursor location from sig.*){#insert zX{#COND -if {#insert zvGPRV_NXT} = Prev -then Down -else Up}}	zXUpDownOppositeDir_M_gpn
zvAWAY_CNT_st1 -*-	{#SETPHRASE -description zvAWAY_CNT -content 1 -autotext zvAWAY_CNT -folder ctvv_folder}	zvAWAY_CNT_st1
zvAWAY_CNT_st2 -*-	{#SETPHRASE -description zvAWAY_CNT -content 2 -autotext zvAWAY_CNT -folder ctvv_folder}	zvAWAY_CNT_st2
zvAWAY_CNT_st3 -*-	{#SETPHRASE -description zvAWAY_CNT -content 3 -autotext zvAWAY_CNT -folder ctvv_folder}	zvAWAY_CNT_st3
zvAWAY_CNT_st4 -*-	{#SETPHRASE -description zvAWAY_CNT -content 4 -autotext zvAWAY_CNT -folder ctvv_folder}	zvAWAY_CNT_st4
zvAWAY_CNT_st5 -*-	{#SETPHRASE -description zvAWAY_CNT -content 5 -autotext zvAWAY_CNT -folder ctvv_folder}	zvAWAY_CNT_st5
zvAWAY_CNT_stPrompt -*-	{#SETPHRASE -description zvAWAY_CNT -content {#INPUT -head How many sigs away? (1+) -single} -autotext zvAWAY_CNT -folder ctvv_folder}	zvAWAY_CNT_stPrompt
zvJCD_ES_stCdd -*- -- 'JCoded'	{#SETPHRASE -description zvJCD_ES -content JCoded -autotext zvJCD_ES -folder ctvv_folder}	zvJCD_ES_stCdd
zvJCD_ES_stES -*-	{#SETPHRASE -description zvJCD_ES -content -autotext zvJCD_ES -folder ctvv_folder}	zvJCD_ES_stES
zvDISPLAY_stFutureFONm -*-	(*We don't know the class-name yet. This special string indicates it's needed. See xcck:*){#SETPHRASE -description zvDISPLAY -content __CLS_NM__ -autotext zvDISPLAY -folder ctvv_folder}	zvDISPLAY_stFutureFONm
zvDRN_stH -*-	{#SETPHRASE -description zvDRN -content h -autotext zvDRN -folder ctvv_folder}	zvDRN_stH
zvDRN_stR -*-	{#SETPHRASE -description zvDRN -content r -autotext zvDRN -folder ctvv_folder}	zvDRN_stR
zvFOBJ_NAME_stCB -*-	{#SETPHRASE -description zvFOBJ_NAME -content {#INSERTCLIPBOARD} -autotext zvFOBJ_NAME -folder ctvv_folder}	zvFOBJ_NAME_stCB
zvFOBJ_NAME_stL1w -*-	{#insert zCutL1w}{#insert zvFOBJ_NAME_stCB}	zvFOBJ_NAME_stL1w
zvGPRV_NXT_stNext -*-	{#SETPHRASE -description zvGPRV_NXT -content Next -autotext zvGPRV_NXT -folder ctvv_folder}	zvGPRV_NXT_stNext
zvGPRV_NXT_stPrev -*-	{#SETPHRASE -description zvGPRV_NXT -content Prev -autotext zvGPRV_NXT -folder ctvv_folder}	zvGPRV_NXT_stPrev
zvPARAM_NUM_st1 -*-	{#SETPHRASE -description zvPARAM_NUM -content 1 -autotext zvPARAM_NUM -folder ctvv_folder}	zvPARAM_NUM_st1
zvPARAM_NUM_st10 -*-	{#SETPHRASE -description zvPARAM_NUM -content 10 -autotext zvPARAM_NUM -folder ctvv_folder}	zvPARAM_NUM_st10
zvPARAM_NUM_st2 -*-	{#SETPHRASE -description zvPARAM_NUM -content 2 -autotext zvPARAM_NUM -folder ctvv_folder}	zvPARAM_NUM_st2
zvPARAM_NUM_st3 -*-	{#SETPHRASE -description zvPARAM_NUM -content 3 -autotext zvPARAM_NUM -folder ctvv_folder}	zvPARAM_NUM_st3
zvPARAM_NUM_st4 -*-	{#SETPHRASE -description zvPARAM_NUM -content 4 -autotext zvPARAM_NUM -folder ctvv_folder}	zvPARAM_NUM_st4
zvPARAM_NUM_st5 -*-	{#SETPHRASE -description zvPARAM_NUM -content 5 -autotext zvPARAM_NUM -folder ctvv_folder}	zvPARAM_NUM_st5
zvPARAM_NUM_st6 -*-	{#SETPHRASE -description zvPARAM_NUM -content 6 -autotext zvPARAM_NUM -folder ctvv_folder}	zvPARAM_NUM_st6
zvPARAM_NUM_st7 -*-	{#SETPHRASE -description zvPARAM_NUM -content 7 -autotext zvPARAM_NUM -folder ctvv_folder}	zvPARAM_NUM_st7
