__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress: Large set of generically useful scripting tools for MS Windows, written in PhraseExpress and TextPad.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zGTThenWritePrivAndPubVars	{#insert zzGTPrivKeyBlockThenRead}{#insert zzGTPubKeyBlockThenRead}(*Used by both priv and pub-->*){#insert zvVAL_PRNTBL_YN_stYes}(*<--Used by both priv and pub*){#insert zzReadyPrivKForLPDPSWrite_M_ALL}(*Only the private-key's KEY is the public-key.*){#SETPHRASE -description zvKEY_PRIV_OR_PUB_1C -content Pub -autotext zvKEY_PRIV_OR_PUB_1C -folder ctvv_folder}{#insert zzWriteLPDPhraseFileIf_M_ALL}(*The key for ALL other cv-types (the public-key and all non-keys) is the private-key.*){#SETPHRASE -description zvKEY_PRIV_OR_PUB_1C -content Priv -autotext zvKEY_PRIV_OR_PUB_1C -folder ctvv_folder}{#insert zzReadyPubKForLPDPSWrite_M_ALL}{#insert zzWriteLPDPhraseFileIf_M_ALL}	zGTThenWritePrivAndPubVars
zvPRVK_CVT_FRMV_1C_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESFrmV}{#SETPHRASE -description zvPRVK_CVT_FRMV_1C -content {#INSERTCLIPBOARD} -autotext zvPRVK_CVT_FRMV_1C -folder ctvv_folder}	zvPRVK_CVT_FRMV_1C_sfCurrLineCIES
zvPRVK_CVT_PHRSNM_PST_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESPhrsNmPost}{#SETPHRASE -description zvPRVK_CVT_PHRSNM_PST -content {#INSERTCLIPBOARD} -autotext zvPRVK_CVT_PHRSNM_PST -folder ctvv_folder}	zvPRVK_CVT_PHRSNM_PST_sfCurrLineCIES
zvPRVK_HELP_FOR_DLG_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBHelpForDlgESOrHasDsh}{#SETPHRASE -description zvPRVK_HELP_FOR_DLG -content {#INSERTCLIPBOARD} -autotext zvPRVK_HELP_FOR_DLG -folder ctvv_folder}	zvPRVK_HELP_FOR_DLG_sfCurrLineCIES
zvPRVK_INTERNL_VNAME_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESIntrnlVarNm}{#SETPHRASE -description zvPRVK_INTERNL_VNAME -content {#INSERTCLIPBOARD} -autotext zvPRVK_INTERNL_VNAME -folder ctvv_folder}	zvPRVK_INTERNL_VNAME_sfCurrLineCIES
zvPRVK_VLDT_VAL_PHRSNM_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESVldtVlPhrsNm}{#SETPHRASE -description zvPRVK_VLDT_VAL_PHRSNM -content {#INSERTCLIPBOARD} -autotext zvPRVK_VLDT_VAL_PHRSNM -folder ctvv_folder}(*...-->*){#insert {#COND -if {#insert zvPRVK_VLDT_VAL_PHRSNM} = {#insert zzValidateValueUnwantedFlag} -then {#insert zvPRVK_VLDT_VAL_PHRSNM_stES} -else z1slp}}(*<--ins-cond originates in zvVLDT_VAL_PHRSNM_sfCurrLineCIES, needed by zvPRVK_VLDT_VAL_PHRSNM_sfCurrLineCIES, zvPUBK_VLDT_VAL_PHRSNM_sfCurrLineCIES*)	zvPRVK_VLDT_VAL_PHRSNM_sfCurrLineCIES
zvPUBK_CVT_FRMV_1C_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESFrmV}{#SETPHRASE -description zvPUBK_CVT_FRMV_1C -content {#INSERTCLIPBOARD} -autotext zvPUBK_CVT_FRMV_1C -folder ctvv_folder}	zvPUBK_CVT_FRMV_1C_sfCurrLineCIES
zvPUBK_CVT_PHRSNM_PST_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESPhrsNmPost}{#SETPHRASE -description zvPUBK_CVT_PHRSNM_PST -content {#INSERTCLIPBOARD} -autotext zvPUBK_CVT_PHRSNM_PST -folder ctvv_folder}	zvPUBK_CVT_PHRSNM_PST_sfCurrLineCIES
zvPUBK_HELP_FOR_DLG_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBHelpForDlgESOrHasDsh}{#SETPHRASE -description zvPUBK_HELP_FOR_DLG -content {#INSERTCLIPBOARD} -autotext zvPUBK_HELP_FOR_DLG -folder ctvv_folder}	zvPUBK_HELP_FOR_DLG_sfCurrLineCIES
zvPUBK_INTERNL_VNAME_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESIntrnlVarNm}{#SETPHRASE -description zvPUBK_INTERNL_VNAME -content {#INSERTCLIPBOARD} -autotext zvPUBK_INTERNL_VNAME -folder ctvv_folder}	zvPUBK_INTERNL_VNAME_sfCurrLineCIES
zvPUBK_VLDT_VAL_PHRSNM_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESVldtVlPhrsNm}{#SETPHRASE -description zvPUBK_VLDT_VAL_PHRSNM -content {#INSERTCLIPBOARD} -autotext zvPUBK_VLDT_VAL_PHRSNM -folder ctvv_folder}(*...-->*){#insert {#COND -if {#insert zvPUBK_VLDT_VAL_PHRSNM} = {#insert zzValidateValueUnwantedFlag} -then {#insert zvPUBK_VLDT_VAL_PHRSNM_stES} -else z1slp}}(*<--ins-cond originates in zvVLDT_VAL_PHRSNM_sfCurrLineCIES, needed by zvPRVK_VLDT_VAL_PHRSNM_sfCurrLineCIES, zvPUBK_VLDT_VAL_PHRSNM_sfCurrLineCIES*)	zvPUBK_VLDT_VAL_PHRSNM_sfCurrLineCIES
zvVAL_PRNTBL_YN_stYes	{#SETPHRASE -description zvVAL_PRNTBL_YN -content yes -autotext zvVAL_PRNTBL_YN -folder ctvv_folder}	zvVAL_PRNTBL_YN_stYes
zzGTPrivKeyBlockThenRead	{#BALLOON -title {#insert zzBalloonPlpdcfHeader} -text Reading private_key}{#insert zzREonFindVerifyBypassPrivKeyKSC_M_rqsxReon}{#insert zzReadInPrivBlock}(*Debugging-->*)(*{#insert zzzLPDCheckPrivVars}<--Debugging*)	zzGTPrivKeyBlockThenRead
zzGTPubKeyBlockThenRead	{#BALLOON -title {#insert zzBalloonPlpdcfHeader} -text Reading public_key}{#insert zzREonFindVerifyBypassPublicKeyKSC_M_rqsxReon}{#insert zzReadInPubBlock}(*Debugging-->*)(*{#insert zzzLPDCheckPubVars}<--Debugging*)	zzGTPubKeyBlockThenRead
zzREonFindVerifyBypassPrivKeyKSC_M_rqsxReon	{#SETPHRASE -description zvRQD_CMT_START_TXT -content {#insert zzRqdCmtStartPrivKey} -autotext zvRQD_CMT_START_TXT -folder ctvv_folder}{#insert zREonFindVerifyBypassNextBlockStartCmt_M_rqsxReon}	zzREonFindVerifyBypassPrivKeyKSC_M_rqsxReon
zzREonFindVerifyBypassPublicKeyKSC_M_rqsxReon	{#SETPHRASE -description zvRQD_CMT_START_TXT -content {#insert zzRqdCmtStartPublicKey} -autotext zvRQD_CMT_START_TXT -folder ctvv_folder}{#insert zREonFindVerifyBypassNextBlockStartCmt_M_rqsxReon}	zzREonFindVerifyBypassPublicKeyKSC_M_rqsxReon
zzReadInPrivBlock	{#insert zvPRVK_CVT_FRMV_1C_sfCurrLineCIES}{#insert zvPRVK_CVT_PHRSNM_PST_sfCurrLineCIES}{#insert zvPRVK_INTERNL_VNAME_sfCurrLineCIES}{#insert zvPRVK_VLDT_VAL_PHRSNM_sfCurrLineCIES}{#insert zvPRVK_HELP_FOR_DLG_sfCurrLineCIES}	zzReadInPrivBlock
zzReadInPubBlock	{#insert zvPUBK_CVT_FRMV_1C_sfCurrLineCIES}{#insert zvPUBK_CVT_PHRSNM_PST_sfCurrLineCIES}{#insert zvPUBK_INTERNL_VNAME_sfCurrLineCIES}{#insert zvPUBK_VLDT_VAL_PHRSNM_sfCurrLineCIES}{#insert zvPUBK_HELP_FOR_DLG_sfCurrLineCIES}	zzReadInPubBlock
zzReadyPrivKForLPDPSWrite_M_ALL -(*Needs*)-	(*Needs zvPRVK_CVT_FRMV_1C, zvPRVK_CVT_PHRSNM_PST, zvPRVK_INTERNL_VNAME, zvPRVK_VLDT_VAL_PHRSNM, zvPRVK_HELP_FOR_DLG, zvPUBK_CVT_FRMV_1C, zvPUBK_INTERNL_VNAME*){#insert zvCVT_FRMV_1C_stFrmvForPrvk}{#SETPHRASE -description zvCVT_PHRSNM_POST -content {#insert zvPRVK_CVT_PHRSNM_PST} -autotext zvCVT_PHRSNM_POST -folder ctvv_folder}{#SETPHRASE -description zvINTRNL_VAR_NM -content {#insert zvPRVK_INTERNL_VNAME} -autotext zvINTRNL_VAR_NM -folder ctvv_folder}{#SETPHRASE -description zvVLDT_VAL_PHRSNM -content {#insert zvPRVK_VLDT_VAL_PHRSNM} -autotext zvVLDT_VAL_PHRSNM -folder ctvv_folder}{#SETPHRASE -description zvHELP_FOR_DLG -content {#insert zvPRVK_HELP_FOR_DLG} -autotext zvHELP_FOR_DLG -folder ctvv_folder}{#SETPHRASE -description zvKEY_CVTYPE_SABRV_1C -content {#insert zvPUBK_CVT_FRMV_1C} -autotext zvKEY_CVTYPE_SABRV_1C -folder ctvv_folder}{#SETPHRASE -description zvKEY_INTRNL_VNM -content {#insert zvPUBK_INTERNL_VNAME} -autotext zvKEY_INTRNL_VNM -folder ctvv_folder}{#SETPHRASE -description zvPRJ_CV_NUM -content {#insert zzPrjCVNumForPrivKey} -autotext zvPRJ_CV_NUM -folder ctvv_folder}	zzReadyPrivKForLPDPSWrite_M_ALL
zzReadyPubKForLPDPSWrite_M_ALL -(*Needs*)-	(*Needs zvPUBK_CVT_FRMV_1C, zvPUBK_CVT_PHRSNM_PST, zvPUBK_INTERNL_VNAME, zvPUBK_VLDT_VAL_PHRSNM, zvPUBK_HELP_FOR_DLG, zvPUBK_CVT_FRMV_1C, zvPUBK_INTERNL_VNAME*){#insert zvCVT_FRMV_1C_stFrmvForPubk}{#SETPHRASE -description zvCVT_PHRSNM_POST -content {#insert zvPUBK_CVT_PHRSNM_PST} -autotext zvCVT_PHRSNM_POST -folder ctvv_folder}{#SETPHRASE -description zvINTRNL_VAR_NM -content {#insert zvPUBK_INTERNL_VNAME} -autotext zvINTRNL_VAR_NM -folder ctvv_folder}{#SETPHRASE -description zvVLDT_VAL_PHRSNM -content {#insert zvPUBK_VLDT_VAL_PHRSNM} -autotext zvVLDT_VAL_PHRSNM -folder ctvv_folder}{#SETPHRASE -description zvHELP_FOR_DLG -content {#insert zvPUBK_HELP_FOR_DLG} -autotext zvHELP_FOR_DLG -folder ctvv_folder}{#insert zzSetCurrKeyShortAbrvAndIntrnlNmFromPrivKeyVars}{#SETPHRASE -description zvPRJ_CV_NUM -content {#insert zzPrjCVNumForPubKey} -autotext zvPRJ_CV_NUM -folder ctvv_folder}	zzReadyPubKForLPDPSWrite_M_ALL
zzSetCurrKeyShortAbrvAndIntrnlNmFromPrivKeyVars	{#SETPHRASE -description zvKEY_CVTYPE_SABRV_1C -content {#insert zvPRVK_CVT_FRMV_1C} -autotext zvKEY_CVTYPE_SABRV_1C -folder ctvv_folder}{#SETPHRASE -description zvKEY_INTRNL_VNM -content {#insert zvPRVK_INTERNL_VNAME} -autotext zvKEY_INTRNL_VNM -folder ctvv_folder}	zzSetCurrKeyShortAbrvAndIntrnlNmFromPrivKeyVars
zzzLPDCheckPrivVars -- Permanent debugging. Comment out call when live.	{#MSGBOX -head Debugging: zzzLPDCheckPrivVars -text zvPRVK_CVT_FRMV_1C='{#insert zvPRVK_CVT_FRMV_1C}', zvPRVK_CVT_PHRSNM_PST='{#insert zvPRVK_CVT_PHRSNM_PST}', zvPRVK_INTERNL_VNAME='{#insert zvPRVK_INTERNL_VNAME}', zvPRVK_VLDT_VAL_PHRSNM='{#insert zvPRVK_VLDT_VAL_PHRSNM}', zvPRVK_HELP_FOR_DLG='{#insert zvPRVK_HELP_FOR_DLG}', zvKEY_PRIV_OR_PUB_1C='{#insert zvKEY_PRIV_OR_PUB_1C}'}	zzzLPDCheckPrivVars
zzzLPDCheckPubVars -- Permanent debugging. Comment out call when live.	{#MSGBOX -head Debugging: zzzLPDCheckPubVars -text zvPUBK_CVT_FRMV_1C='{#insert zvPUBK_CVT_FRMV_1C}', zvPUBK_CVT_PHRSNM_PST='{#insert zvPUBK_CVT_PHRSNM_PST}', zvPUBK_INTERNL_VNAME='{#insert zvPUBK_INTERNL_VNAME}', zvPUBK_VLDT_VAL_PHRSNM='{#insert zvPUBK_VLDT_VAL_PHRSNM}', zvPUBK_HELP_FOR_DLG='{#insert zvPUBK_HELP_FOR_DLG}'}	zzzLPDCheckPubVars
