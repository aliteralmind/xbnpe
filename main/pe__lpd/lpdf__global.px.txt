__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress: Large set of generically useful scripting tools for MS Windows, written in PhraseExpress and TextPad.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zvCVT_FRMV_1C_stFrmvForPrvk	{#SETPHRASE -description zvCVT_FRMV_1C -content {#insert zvPRVK_CVT_FRMV_1C} -autotext zvCVT_FRMV_1C -folder ctvv_folder}	zvCVT_FRMV_1C_stFrmvForPrvk
zvCVT_FRMV_1C_stFrmvForPubk	{#SETPHRASE -description zvCVT_FRMV_1C -content {#insert zvPUBK_CVT_FRMV_1C} -autotext zvCVT_FRMV_1C -folder ctvv_folder}	zvCVT_FRMV_1C_stFrmvForPubk
zvDTYPE_ABRV_1C_stES -(**)- For LPD-prjs w/ only 1 datatype	(*To clear out the previous-project's data type.*){#SETPHRASE -description zvDTYPE_ABRV_1C -content  -autotext zvDTYPE_ABRV_1C -folder ctvv_folder}	zvDTYPE_ABRV_1C_stES
zzBalloonPlpdcfHeader	Process LPD{#insert zAscDash}Config{#insert zAscDash}File (plpdcf)	zzBalloonPlpdcfHeader
zzLpdAutoGeneratedDontTouchPhrase	__**WARNING**__: All phrases in this folder were created by 'plpdcf'. DO NOT EDIT.{#insert zTAB}.{#insert zTAB}{#insert zTAB}\(*Extra tab to allow for empty-string autotext*){#insert zENTER}	zzLpdAutoGeneratedDontTouchPhrase
zzLpdCfgVarPhrsNmPre1Z_M_prjv -- Needs zvPRJ_ABRV_1C	z{#insert zvPRJ_ABRV_1C}	zzLpdCfgVarPhrsNmPre1Z_M_prjv
zzLpdCfgVarPhrsNmPre2Zs_M_prjv -- Needs zvPRJ_ABRV_1C	zz{#insert zvPRJ_ABRV_1C}	zzLpdCfgVarPhrsNmPre2Zs_M_prjv
zzLpdDebugCVTypeDlgTxt_M_pjDtFrm1_README	(*zvCVT_PHRSNM_POST is needed by zCfgVarPhrsNmPost_M_pjDtFrm1*)	zzLpdDebugCVTypeDlgTxt_M_pjDtFrm1_README
zzLpdDebugCVTypeDlgTxt_M_pjDtFrm1	Debugging one LPD cv-type -- {#SETPHRASE -description zvCVT_PHRSNM_POST -content {#insert zCfgVarPhrsNmPost_M_pjDtFrm1} -autotext zvCVT_PHRSNM_POST -folder ctvv_folder}zvPRJ_ABRV_1C='{#insert zvPRJ_ABRV_1C}', zvDTYPE_ABRV_1C='{#insert zvDTYPE_ABRV_1C}', zvCVT_FRMV_1C='{#insert zvCVT_FRMV_1C}'  ///  Project/data-type abrvs (derived from LPD-metadata-file): '{#insert zProjectAbrv1C_M_pjDtv}'/'{#insert zDataTypeAbrv1C_M_pjDtv}', From-abrev='{#insert zCVTFromAbrv1C_M_pjDtPnmpst}'  ///  Phrase-name-postfix='{#insert zCfgVarPhrsNmPost_M_pjDtFrm1}', internal-var-name={#insert zIntrnlVarNm_M_pjDtFrm1}, key-cv-type='{#insert zKeyCVTFromAbrv1C_M_pjDtFrm1}', nkcv-list-num='{#insert zNKCVListNum_M_pjDtFrm1}', value-printable? (raw)='{#insert zValPrntblYNNoOverride_M_pjDtFrm1}' (zvPRNTBL_YN_OVERIDE_TO_Y_ONFF='{#insert zvPRNTBL_YN_OVERIDE_TO_Y_ONFF}'), validate-value-phrase-name='{#insert zVldtValPhrsNm_M_pjDtFrm1}', help-for-dialog='{#insert zHlpForDlg_M_pjDtFrm1}'	zzLpdDebugCVTypeDlgTxt_M_pjDtFrm1
zzLpdDebugCVTypeDlg_M_pjDtFrm1 -- Permanent debugging. Comment-out calls to this when live	{#MSGBOX -head Debugging one LPD cv-type -text {#insert zzLpdDebugCVTypeDlgTxt_M_pjDtFrm1}}	zzLpdDebugCVTypeDlg_M_pjDtFrm1
zzLpdDebugCVTypeIVarsDlg -- Permanent debugging. Comment-out calls to this when live	{#MSGBOX -head zzLpdDebugCVTypeIVarsDlg -text {#insert zzLpdDebugCVTypeIVarsDlgTxt}}	zzLpdDebugCVTypeIVarsDlg
zzLpdDebugCVTypeIVarsDlgTxt	Debugging all current internal vars for one LPD cv-type. Project: [zvPRJ_ABRV_1C='{#insert zvPRJ_ABRV_1C}', zvDTYPE_ABRV_1C='{#insert zvDTYPE_ABRV_1C}'] -- zvCVT_FRMV_1C='{#insert zvCVT_FRMV_1C}', zvCVT_PHRSNM_POST='{#insert zvCVT_PHRSNM_POST}', zvINTRNL_VAR_NM='{#insert zvINTRNL_VAR_NM}', zvHELP_FOR_DLG='{#insert zvHELP_FOR_DLG}', zvKEY_CVTYPE_SABRV_1C='{#insert zvKEY_CVTYPE_SABRV_1C}', zvKEY_INTRNL_VNM='{#insert zvKEY_INTRNL_VNM}', zvPRJ_CV_NUM='{#insert zvPRJ_CV_NUM}', zvKEY_PRIV_OR_PUB_1C='{#insert zvKEY_PRIV_OR_PUB_1C}', zvVAL_PRNTBL_YN='{#insert zvVAL_PRNTBL_YN}'	zzLpdDebugCVTypeIVarsDlgTxt
zzLpdDebugCVTypeText -- For printing at the cursor	LPD-config-var type:{#insert zEnterTab}zvPRJ_ABRV_1C='{#insert zvPRJ_ABRV_1C}'{#insert zENTER}zvDTYPE_ABRV_1C='{#insert zvDTYPE_ABRV_1C}'{#insert zENTER}zvCVT_FRMV_1C='{#insert zvCVT_FRMV_1C}'{#insert zENTER}zvCVT_PHRSNM_POST='{#insert zvCVT_PHRSNM_POST}'{#insert zENTER}zvINTRNL_VAR_NM='{#insert zvINTRNL_VAR_NM}'{#insert zENTER}zvHELP_FOR_DLG='{#insert zvHELP_FOR_DLG}'{#insert zENTER}zvKEY_CVTYPE_SABRV_1C='{#insert zvKEY_CVTYPE_SABRV_1C}'{#insert zENTER}zvKEY_INTRNL_VNM='{#insert zvKEY_INTRNL_VNM}'{#insert zENTER}zvPRJ_CV_NUM='{#insert zvPRJ_CV_NUM}'{#insert zENTER}zvKEY_PRIV_OR_PUB_1C='{#insert zvKEY_PRIV_OR_PUB_1C}'{#insert zENTER}zvVAL_PRNTBL_YN='{#insert zvVAL_PRNTBL_YN}'{#insert zEnterBksp}	zzLpdDebugCVTypeText
zzLpdDebugCVTypeText_M_pjDtFrm1	Debugging one LPD cv-type:{#insert zEnterTab}-zvPRJ_ABRV_1C='{#insert zvPRJ_ABRV_1C}'{#insert zENTER}-zvDTYPE_ABRV_1C='{#insert zvDTYPE_ABRV_1C}'{#insert zENTER}zvCVT_FRMV_1C='{#insert zvCVT_FRMV_1C}'{#insert zENTER}Project/data-type abrvs (derived from LPD-metadata-file): {#insert zProjectAbrv1C_M_pjDtv}/{#insert zDataTypeAbrv1C_M_pjDtv}{#insert zENTER}From-abrev={#insert zCVTFromAbrv1C_M_pjDtPnmpst}'{#insert zENTER}Phrase-name-postfix='{#insert zCfgVarPhrsNmPost_M_pjDtFrm1}'{#insert zENTER}internal-var-name={#insert zIntrnlVarNm_M_pjDtFrm1}{#insert zENTER}key-cv-type='{#insert zKeyCVTFromAbrv1C_M_pjDtFrm1}'{#insert zENTER}nkcv-list-num='{#insert zNKCVListNum_M_pjDtFrm1}'{#insert zENTER}value-printable? (raw)='{#insert zValPrntblYNNoOverride_M_pjDtFrm1}' (zvPRNTBL_YN_OVERIDE_TO_Y_ONFF='{#insert zvPRNTBL_YN_OVERIDE_TO_Y_ONFF}'){#insert zENTER}validate-value-phrase-name='{#insert zVldtValPhrsNm_M_pjDtFrm1}'{#insert zENTER}help-for-dialog='{#insert zHlpForDlg_M_pjDtFrm1}'{#insert zEnterBksp}	zzLpdDebugCVTypeText_M_pjDtFrm1
zzLpdmdPNmNKCVWithNumPreNum1Z_M_pjDtv	{#insert zzLpdpsPNmPre1Z_M_pjDtv}{#insert zzLpdmdPNmPstNKCVPreNum}	zzLpdmdPNmNKCVWithNumPreNum1Z_M_pjDtv
zzLpdmdPNmNKCVWithNumPreNum2Zs_M_pjDtv	{#insert zzLpdpsPNmPre2Zs_M_pjDtv}{#insert zzLpdmdPNmPstNKCVPreNum}	zzLpdmdPNmNKCVWithNumPreNum2Zs_M_pjDtv
zzLpdpsPNmPre1Z_M_pjDtv -- Needs zvPRJ_ABRV_1C, zvDTYPE_ABRV_1C	{#insert zzLpdCfgVarPhrsNmPre1Z_M_prjv}{#insert zvDTYPE_ABRV_1C}	zzLpdpsPNmPre1Z_M_pjDtv
zzLpdpsPNmPre2Zs_M_pjDtv -- Needs zvPRJ_ABRV_1C, zvDTYPE_ABRV_1C	{#insert zzLpdCfgVarPhrsNmPre2Zs_M_prjv}{#insert zvDTYPE_ABRV_1C}	zzLpdpsPNmPre2Zs_M_pjDtv
zzLpdpsPNmPreWCVTFromAbrv1Z_M_pjDtFrm1 -- Needs zvCVT_FRMV_1C. See ...__README	{#insert zzLpdpsPNmPre1Z_M_pjDtv}{#insert zvCVT_FRMV_1C}	zzLpdpsPNmPreWCVTFromAbrv1Z_M_pjDtFrm1
zzLpdpsPNmPreWCVTFromAbrv2Zs_M_pjDtFrm1 -- Needs zvCVT_FRMV_1C. See ...__README	{#insert zzLpdpsPNmPre2Zs_M_pjDtv}{#insert zvCVT_FRMV_1C}	zzLpdpsPNmPreWCVTFromAbrv2Zs_M_pjDtFrm1
zzLpdpsPNmPreWCVTFromAbrv2Zs_M_pjDtFrm1__README	Needs zvPRJ_ABRV_1C, zvDTYPE_ABRV_1C, zvCVT_FRMV_1C. Ends with an underscore. (zzLpdpsPNmPreWCVTFromAbrv2Zs_M_pjDtFrm1 is used in an INPUT dialog, so it can't have any internal comments.)	zzLpdpsPNmPreWCVTFromAbrv2Zs_M_pjDtFrm1__README
zzTempIntrnlVarNmForCVListMember_M_pjDtvNkcur	zv{#UPPERCASE {#insert zvPRJ_ABRV_1C}_{#insert zvDTYPE_ABRV_1C}_{#insert zvNKCV_CURR_NUM}}	zzTempIntrnlVarNmForCVListMember_M_pjDtvNkcur
zzzMsgLPDPrjPjvEqQvQDtvEqQvQ_M_pjDtv	LPD~project: project='{#insert zvPRJ_ABRV_1C}', data~type='{#insert zvDTYPE_ABRV_1C}'	zzzMsgLPDPrjPjvEqQvQDtvEqQvQ_M_pjDtv
zValidateAllIVarsPhraseNameFrmAll_M_pjDtv	{#insert zzLpdpsPNmPre1Z_M_pjDtv}CIBIntrnlVars_M_ALL	zValidateAllIVarsPhraseNameFrmAll_M_pjDtv
