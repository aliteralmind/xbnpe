__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zvCVT_FRMV_1C_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESFrmV}{#SETPHRASE -description zvCVT_FRMV_1C -content {#INSERTCLIPBOARD} -autotext zvCVT_FRMV_1C -folder ctvv_folder}	zvCVT_FRMV_1C_sfCurrLineCIES
zvCVT_PHRSNM_POST_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESPhrsNmPost}{#SETPHRASE -description zvCVT_PHRSNM_POST -content {#INSERTCLIPBOARD} -autotext zvCVT_PHRSNM_POST -folder ctvv_folder}	zvCVT_PHRSNM_POST_sfCurrLineCIES
zvDTYPE_ABRV_1C_stOptInlineCV	{#SETPHRASE -description zvCFG_VAR_NAME -content {#insert zzInlineCVDataTypeAbrv1C} -autotext zvCFG_VAR_NAME -folder ctvv_folder}{#insert zSetCBToNamedOptInlineCfgValESDfltIsESGTNxtLn_M_vnmDflt}{#SETPHRASE -description zvDTYPE_ABRV_1C -content {#INSERTCLIPBOARD} -autotext zvDTYPE_ABRV_1C -folder ctvv_folder}	zvDTYPE_ABRV_1C_stOptInlineCV
zvHELP_FOR_DLG_sfCurrLine	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBHelpForDlgESOrHasDsh}{#SETPHRASE -description zvHELP_FOR_DLG -content {#INSERTCLIPBOARD} -autotext zvHELP_FOR_DLG -folder ctvv_folder}	zvHELP_FOR_DLG_sfCurrLine
zvINTRNL_VAR_NM_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESIntrnlVarNm}{#SETPHRASE -description zvINTRNL_VAR_NM -content {#INSERTCLIPBOARD} -autotext zvINTRNL_VAR_NM -folder ctvv_folder}	zvINTRNL_VAR_NM_sfCurrLineCIES
zvMETADATA_ONFF_stOff	{#SETPHRASE -description zvMETADATA_ONFF -content off -autotext zvMETADATA_ONFF -folder ctvv_folder}	zvMETADATA_ONFF_stOff
zvMETADATA_ONFF_stOn	{#SETPHRASE -description zvMETADATA_ONFF -content on -autotext zvMETADATA_ONFF -folder ctvv_folder}	zvMETADATA_ONFF_stOn
zvPHRS_SET_ONFF_stOff	{#SETPHRASE -description zvPHRS_SET_ONFF -content off -autotext zvPHRS_SET_ONFF -folder ctvv_folder}	zvPHRS_SET_ONFF_stOff
zvPHRS_SET_ONFF_stOn	{#SETPHRASE -description zvPHRS_SET_ONFF -content on -autotext zvPHRS_SET_ONFF -folder ctvv_folder}	zvPHRS_SET_ONFF_stOn
zvPHRS_SET__METADATA_ONFF	{#insert zvPHRS_SET_ONFF}{#insert zvMETADATA_ONFF}	zvPHRS_SET__METADATA_ONFF
zvPRJ_ABRV_1C_stRqdInlineCV	{#SETPHRASE -description zvCFG_VAR_NAME -content {#insert zzInlineCVPrjAbrv1C} -autotext zvCFG_VAR_NAME -folder ctvv_folder}{#insert zSetCBToNamedInlineCVWRqdValGTNxtLn_M_vnm}{#SETPHRASE -description zvPRJ_ABRV_1C -content {#INSERTCLIPBOARD} -autotext zvPRJ_ABRV_1C -folder ctvv_folder}	zvPRJ_ABRV_1C_stRqdInlineCV
zvUTIL_ONFF_stOff	{#SETPHRASE -description zvUTIL_ONFF -content off -autotext zvUTIL_ONFF -folder ctvv_folder}	zvUTIL_ONFF_stOff
zvUTIL_ONFF_stOn	{#SETPHRASE -description zvUTIL_ONFF -content on -autotext zvUTIL_ONFF -folder ctvv_folder}	zvUTIL_ONFF_stOn
zvVAL_PRNTBL_YN_sfCurrLineCIB	{#insert zClearCBCopyToLineEndGTNext}{#SETPHRASE -description zvVAL_PRNTBL_YN -content {#INSERTCLIPBOARD} -autotext zvVAL_PRNTBL_YN -folder ctvv_folder}(*zvVAL_PRNTBL_YN is temporarily zzLpdValuePrintable or zzLpdValueNotPrintable*){#insert {#COND -if {#insert zvVAL_PRNTBL_YN} = {#insert zzLpdValuePrintable} -then z1slp -else {#COND -if {#insert zvVAL_PRNTBL_YN} = {#insert zzLpdValueNotPrintable} -then z1slp -else zzErrDlgBadValPrntblYN}}}{#insert zzSetValPrntblFlagToYesOrNo}(*zvVAL_PRNTBL_YN is now 'yes' or 'no'.*)	zvVAL_PRNTBL_YN_sfCurrLineCIB
zvVLDT_VAL_PHRSNM_sfCurrLineCIES	{#insert zClearCBCopyToLineEndGTNext}{#insert zzCrashIfCBESVldtVlPhrsNm}{#SETPHRASE -description zvVLDT_VAL_PHRSNM -content {#INSERTCLIPBOARD} -autotext zvVLDT_VAL_PHRSNM -folder ctvv_folder}(*...-->*){#insert {#COND -if {#insert zvVLDT_VAL_PHRSNM} = {#insert zzValidateValueUnwantedFlag} -then {#insert zvVLDT_VAL_PHRSNM_stES} -else z1slp}}(*<--ins-cond originates in zvVLDT_VAL_PHRSNM_sfCurrLineCIES, needed by zvPRVK_VLDT_VAL_PHRSNM_sfCurrLineCIES, zvPUBK_VLDT_VAL_PHRSNM_sfCurrLineCIES*)	zvVLDT_VAL_PHRSNM_sfCurrLineCIES
zvVLDT_VAL_PHRSNM_stES -(**)-	(*THEY can't provide empty-string, but when validation isn't wanted, that's what the value ends up as*){#SETPHRASE -description zvVLDT_VAL_PHRSNM -content  -autotext zvVLDT_VAL_PHRSNM -folder ctvv_folder}	zvVLDT_VAL_PHRSNM_stES
zzCrashIfCBESFrmV	{#SETPHRASE -description zvRQD_ITEM_NAME -content pre={#asc 34}_M_{#asc 34}=abbrev=1c -autotext zvRQD_ITEM_NAME -folder ctvv_folder}{#insert zzDbgThenCIRqdCBItemES_M_rqinDbgf}	zzCrashIfCBESFrmV
zzCrashIfCBESIntrnlVarNm	{#SETPHRASE -description zvRQD_ITEM_NAME -content name=of=internal=variable -autotext zvRQD_ITEM_NAME -folder ctvv_folder}{#insert zzDbgThenCIRqdCBItemES_M_rqinDbgf}	zzCrashIfCBESIntrnlVarNm
zzCrashIfCBESPhrsNmPost	{#SETPHRASE -description zvRQD_ITEM_NAME -content phrase=name=postfix=1c -autotext zvRQD_ITEM_NAME -folder ctvv_folder}{#insert zzDbgThenCIRqdCBItemES_M_rqinDbgf}	zzCrashIfCBESPhrsNmPost
zzCrashIfCBESVldtVlPhrsNm	{#SETPHRASE -description zvRQD_ITEM_NAME -content name=of=validate=value=phrase -autotext zvRQD_ITEM_NAME -folder ctvv_folder}{#insert zzDbgThenCIRqdCBItemES_M_rqinDbgf}	zzCrashIfCBESVldtVlPhrsNm
zzCrashIfCBHelpForDlgESOrHasDsh	{#SETPHRASE -description zvRQD_ITEM_NAME -content help~for~dialog -autotext zvRQD_ITEM_NAME -folder ctvv_folder}{#insert zzDbgThenCIRqdCBItemES_M_rqinDbgf}{#insert {#COND -if {#POS {#INSERTCLIPBOARD} -substr {#insert zAscDash}} = 0 -then z1slp -else zzErrDlgDashInHelpForDlg}}	zzCrashIfCBHelpForDlgESOrHasDsh
zzErrDlgBadValPrntblYN	{#MSGBOX -head ERROR -text ERROR: The 'value-is-printable' flag-line has an invalid value. Must equal either '{#insert zzLpdValuePrintable}' or '{#insert zzLpdValueNotPrintable}', with no whitespace around it.{#insert zCancelProcNowPostTxt}}	zzErrDlgBadValPrntblYN
zzErrDlgDashInHelpForDlg	{#MSGBOX -head ERROR: Help~for~dialog text contains a dash -text ERROR: The help~for~dialog text contains a dash. It can't. Use '{#insert zOYa}#insert zAscDash{#insert zCYa}', underscores ('_'), tildes ('~') or equal~signs ('=') instead.}	zzErrDlgDashInHelpForDlg
zzGTAndProcessNonKeyCfgVar_M_currkeyabrvlcIntrnlnmNkcnt -(*Needs*)-	(*zvKEY_CVTYPE_SABRV_1C, zvKEY_INTRNL_VNM*){#insert zvNKCV_CURR_NUM_incBy1}{#BALLOON -title {#insert zzBalloonPlpdcfHeader} -text Reading non_key cv_type {#insert zvNKCV_CURR_NUM} of {#insert zvNON_KEY_COUNT}.}{#insert zzREonFindVerifyBypassEmptyOkBSC_M_rqsxReon}{#insert zvCVT_FRMV_1C_sfCurrLineCIES}{#insert zzSetCVNumForMeta_M_nkvcSvlc}{#insert zvCVT_PHRSNM_POST_sfCurrLineCIES}{#insert zvINTRNL_VAR_NM_sfCurrLineCIES}{#insert zvVAL_PRNTBL_YN_sfCurrLineCIB}{#insert zvVLDT_VAL_PHRSNM_sfCurrLineCIES}{#insert zvHELP_FOR_DLG_sfCurrLine}{#insert zzWriteLPDPhraseFileIf_M_ALL}	zzGTAndProcessNonKeyCfgVar_M_currkeyabrvlcIntrnlnmNkcnt
zzGTTopSetAllInlineCVs	{#insert zTPGTDocTop}{#BALLOON -title {#insert zzBalloonPlpdcfHeader} -text Reading inline global configuration_variables}{#insert zvOUT_DIR_stRqdInlineCV}{#insert zvPRJ_ABRV_1C_stRqdInlineCV}{#insert zvDTYPE_ABRV_1C_stOptInlineCV}(*Debugging-->*)(*{#insert zzzInlineCVCheck}<--Debugging*)	zzGTTopSetAllInlineCVs
zzHighlightPromptNonKeyCountREon -- Turns and leaves RE on	{#insert zTPBookmarkClearAll}{#insert zFindDlgOpenRE}{#SETPHRASE -description zvFIND_WHAT -content ^\(\* -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zFindBtnMarkAll}{#MSGBOX -head Marked for block count -text All block-start-comments are marked. The number of marked lines is in the below status bar. Assuming your LPD-config-file is formatted as required, the TOTAL number of non-key configuration-variables in this LPD-config-file is equal to the number in the status bar, minus three. About to prompt you for the number of non-key cv-types to process.}{#insert zFindDlgClose}{#insert zTPBookmarkClearAll}{#SETPHRASE -description zvNON_KEY_COUNT -content {#INPUT -head How many non-key cv-types to process? -single} -autotext zvNON_KEY_COUNT -folder ctvv_folder}	zzHighlightPromptNonKeyCountREon
zzHighlightPromptNonKeyCountREonIf -(**)- Turns and leaves RE on	(*Count is not needed if ONLY the utility file is being written.*){#insert {#COND -if {#insert zvPHRS_SET__METADATA_ONFF} = offoff -then zFindDlgOpenRETglClose -else zzHighlightPromptNonKeyCountREon}}	zzHighlightPromptNonKeyCountREonIf
zzInlineCVDataTypeAbrv1C	DATA_TYPE_ABRV_1C	zzInlineCVDataTypeAbrv1C
zzInlineCVOutDir	OUTPUT_FILE_DIR	zzInlineCVOutDir
zzInlineCVPrjAbrv1C	PROJECT_ABRV_1C	zzInlineCVPrjAbrv1C
zzLpdValueNotPrintable	{#insert zzValPrntblPrefix}{#insert zzValPrntblNotMid}{#insert zzValPrntblPostfix}	zzLpdValueNotPrintable
zzLpdValuePrintable	{#insert zzValPrntblPrefix}{#insert zzValPrntblPostfix}	zzLpdValuePrintable
zzProcessLPDConfigFile_M_psMdUtlonf	{#insert zFindDialogFlagPreCheck}{#insert zzHighlightPromptNonKeyCountREonIf}(*RE now on, as needed by zzREonFindVerifyBypass*.*){#insert zWordWrapOffFromTPDfltState}{#insert zzGTTopSetAllInlineCVs}{#MSGBOX -head About to delete files-to-process... -text About to process: Phrase-set files are '{#insert zvPHRS_SET_ONFF}' // Metadata file is '{#insert zvMETADATA_ONFF}' // Utility file is '{#insert zvUTIL_ONFF}'}{#insert zvDIRECTORY_stOUT_DIR}{#insert zDelAllOutFilesDlg_M_dir}{#insert zGTThenWritePrivAndPubVars}(*zvKEY_PRIV_OR_PUB_1C is now equal to 'Priv'*){#insert zzProcessLPDNkcvsIfNotUtilOnly_M_ALL}{#insert zWordWrapOff}{#insert zzWriteLPDMetadataFileIf_M_ALL}{#insert zzWriteLPDUtilityFileIf_M_pjDtv}{#insert zFindDlgOpenRETglClose}{#MSGBOX -head DONE -text DONE. Files are currently open, and ready to import into PhraseExpress.}	zzProcessLPDConfigFile_M_psMdUtlonf
zzProcessLPDNkcvsIfNotUtilOnly_M_ALL	{#insert {#COND -if {#insert zvPHRS_SET__METADATA_ONFF} = offoff -then z1slp -else zzProcessLPDNkcvs_M_ALL}}	zzProcessLPDNkcvsIfNotUtilOnly_M_ALL
zzProcessLPDNkcvs_M_ALL	{#insert zzREonFindVerifyBypassNonKeySectionStartKSC_M_rqsxReon}{#insert zvNKCV_CURR_NUM_initTo0}{#LOOP {#insert zzGTAndProcessNonKeyCfgVar_M_currkeyabrvlcIntrnlnmNkcnt} -count {#insert zvNON_KEY_COUNT}(*<--Was set in zzHighlightPromptNonKeyCountREonIf*)}	zzProcessLPDNkcvs_M_ALL
zzREonFindVerifyBypassNonKeySectionStartKSC_M_rqsxReon	(*The value ends with the close-comment asterisk/paren. It must BE the required comment, not just start with it.-->*){#SETPHRASE -description zvRQD_CMT_START_TXT -content {#insert zzRqdCmtStartAllNKVarsBelow}*{#sleep 1}) -autotext zvRQD_CMT_START_TXT -folder ctvv_folder}{#insert zREonFindVerifyBypassNextBlockStartCmt_M_rqsxReon}	zzREonFindVerifyBypassNonKeySectionStartKSC_M_rqsxReon
zzRqdCmtStartAllNKVarsBelow	ALL LPD NON-KEY CV-TYPES BELOW THIS LINE	zzRqdCmtStartAllNKVarsBelow
zzRqdCmtStartPrivKey	LPD CV-TYPE: PRIVATE KEY	zzRqdCmtStartPrivKey
zzRqdCmtStartPublicKey	LPD CV-TYPE: PUBLIC KEY	zzRqdCmtStartPublicKey
zzSetCVNumForMeta_M_nkvcSvlc -- Needs zvCVT_FRMV_1C, zvNKCV_CURR_NUM	{#SETCLIPBOARD {#insert zzTempIntrnlVarNmForCVListMember_M_pjDtvNkcur}}{#SETPHRASE -description {#INSERTCLIPBOARD} -content {#insert zvCVT_FRMV_1C} -autotext {#INSERTCLIPBOARD} -folder ctvv_folder}{#SETPHRASE -description zvPRJ_CV_NUM -content {#insert zvNKCV_CURR_NUM} -autotext zvPRJ_CV_NUM -folder ctvv_folder}(*Debugging-->*)(*{#MSGBOX -head zzSetCVNumForMeta_M_nkvcSvlc -text zvNKCV_CURR_NUM='{#insert zvNKCV_CURR_NUM}', cb={#INSERTCLIPBOARD}, inscb={#insert {#INSERTCLIPBOARD}}}<--Debugging*)	zzSetCVNumForMeta_M_nkvcSvlc
zzSetValPrntblFlagToYesOrNo -- Translates zzLpdValuePrintable to yes and zzLpdValueNotPrintable to no	{#SETPHRASE -description zvVAL_PRNTBL_YN -content {#COND -if {#insert zvVAL_PRNTBL_YN} = {#insert zzLpdValuePrintable} -then yes -else no} -autotext zvVAL_PRNTBL_YN -folder ctvv_folder}	zzSetValPrntblFlagToYesOrNo
zzValPrntblNotMid	_NOT	zzValPrntblNotMid
zzValPrntblPostfix	_PRINTABLE__	zzValPrntblPostfix
zzValPrntblPrefix	__VALUE	zzValPrntblPrefix
zzValidateValueUnwantedFlag	__VALUE_NOT_VLDTD__	zzValidateValueUnwantedFlag
zzWriteLPDMetadataFileIf_M_ALL	{#insert {#COND -if {#insert zvMETADATA_ONFF} = on -then zWriteLPDMetadataFile_M_ALL -else z1slp}}	zzWriteLPDMetadataFileIf_M_ALL
zzWriteLPDPhraseFileIf_M_ALL	{#insert {#COND -if {#insert zvPHRS_SET_ONFF} = on -then zWriteLPDPhraseFile_M_ALL -else z1slp}}	zzWriteLPDPhraseFileIf_M_ALL
zzWriteLPDUtilityFileIf_M_pjDtv	{#insert {#COND -if {#insert zvUTIL_ONFF} = on -then zWriteLPDUtilityFile_M_pjDtv -else z1slp}}	zzWriteLPDUtilityFileIf_M_pjDtv
zzzInlineCVCheck -- Permanent debugging. Comment-out call to this when live	{#MSGBOX -head Debugging: zzzInlineCVCheck -text zvOUT_DIR='{#insert zvOUT_DIR}', zvPRJ_ABRV_1C='{#insert zvPRJ_ABRV_1C}', zvDTYPE_ABRV_1C='{#insert zvDTYPE_ABRV_1C}', zvVLDT_ALLIV_PNM='{#insert zvVLDT_ALLIV_PNM}'}	zzzInlineCVCheck
