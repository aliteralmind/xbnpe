__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
fbpb -- Func-name in clipboard to F()=[+F()+]	{#insert zTPPaste}()=[{#insert zzQQPlsFncPPPlusQQ}]{#insert zzFqplsyn_M_yon}	fbpb
fbpl -- fbpb, func-name word-left	{#insert zCutL1w}{#insert fbpb}	fbpl
fppb -- Func-name in CB to F() ('+F()+')	{#insert zTPPaste}() ({#insert zzQQPlsFncPPPlusQQ}){#insert zzFqplsyn_M_yon}	fppb
fppl -- fppb, func-name word-left	{#insert zCutL1w}{#insert fppb}	fppl
fqpb -- Func-name in clipboard to F()='+F()+'	{#insert zTPPaste}()={#insert zzQQPlsFncPPPlusQQ}{#insert zzFqplsyn_M_yon}	fqpb
fqpl -- fqpb, func-name word-left	{#insert zCutL1w}{#insert fqpb}	fqpl
fqplsyn	{#BALLOON -title Syntax: Func~nm in Java string -text {#insert zzFqplsyns}=function/variable name to...  //  [p]: F()={#insert zAscQQ}+F()+{#insert zAscQQ}, [p]=F() ({#insert zAscQQ}+F()+{#insert zAscQQ}), [q]: F()={#insert zAscQQ}+F()+{#insert zAscQQ}, [t]: F()=\{#insert zAscQQ}{#insert zAscQQ}+F()+{#insert zAscQQ}\{#insert zAscQQ}, [s]=F() is '+F()+', [b]: F()=[{#insert zAscQQ}+F()+{#insert zAscQQ}]  //  [b]=func~nm in clipboard, [l]=word~left  //  See: javasyn  //  xpesyn}	fqplsyn
fspb -- Func-name in CB to F() is '+F()+'	{#insert zTPPaste}() is {#insert zzQQPlsFncPPPlusQQ}{#insert zzFqplsyn_M_yon}	fspb
fspl -- fspb, func-name word-left	{#insert zCutL1w}{#insert fspb}	fspl
ftpb -- Func-name in clipboard to F()=\''+F()+'\'	{#insert zTPPaste}()=\{#insert zAscQQ}{#insert zzQQPlsFncPPPlusQQ}\{#insert zAscQQ}{#insert zzftplsyn_M_yon}	ftpb
ftpl -- ftpb, func-name word-left	{#insert zCutL1w}{#insert ftpb}	ftpl
vbpb -- Var-name in CB to V=['+V+']	{#insert zTPPaste}=[{#insert zJavaVarInStringPaste}]{#insert zzFqplsyn_M_yon}	vbpb
vbpl -- fppb, var-name word-left	{#insert zCutL1w}{#insert vbpb}	vbpl
vppb -- Var-name in CB to V ('+V+')	{#insert zTPPaste} ({#insert zJavaVarInStringPaste}){#insert zzFqplsyn_M_yon}	vppb
vppl -- fppb, var-name word-left	{#insert zCutL1w}{#insert vppb}	vppl
vqpb -- Var-name in clipboard to V='+V+'	{#insert zTPPaste}={#insert zJavaVarInStringPaste}{#insert zzFqplsyn_M_yon}	vqpb
vqpl -- fqpb, var-name word-left	{#insert zCutL1w}{#insert vqpb}	vqpl
vspb -- Var-name in CB to V is '+V+'	{#insert zTPPaste} is {#insert zJavaVarInStringPaste}{#insert zzFqplsyn_M_yon}	vspb
vspl -- fspb, var-name word-left	{#insert zCutL1w}{#insert vspb}	vspl
vtpb -- Func-name in clipboard to V=\''+V+'\'	{#insert zTPPaste}=\{#insert zAscQQ}{#insert zJavaVarInStringPaste}\{#insert zAscQQ}{#insert zzvtplsyn_M_yon}	vtpb
vtpl -- vtpb, func-name word-left	{#insert zCutL1w}{#insert vtpb}	vtpl
vupb -- Var-name in CB to V is '+V+'	{#insert zTPPaste} is {#insert zJavaVarInStringPaste}{#insert zzFqplsyn_M_yon}	vupb
vupl -- fspb, var-name word-left	{#insert zCutL1w}{#insert vupb}	vupl
zJavaVarInString -[zCSpACCENT]- ' + ... + '	{#insert zAscQQ} + {#insert zYmark} + {#insert zAscQQ}{#insert zYUp}	zJavaVarInString
zJavaVarInStringPaste -[zCApACCENT]- ' + [paste] + '	{#insert zAscQQ} + {#insert zTPPaste} + {#insert zAscQQ}	zJavaVarInStringPaste
zzFqplsyn_M_yon -- Needs zvSYNTAX_ON	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then fqplsyn -else z1slp}}	zzFqplsyn_M_yon
zzFqplsyns	[f,v][b,p,q,s,t,u]p[b,l]	zzFqplsyns
zzQQPlsFncPPPlusQQ	{#insert zAscQQ} + {#insert zTPPaste}() + {#insert zAscQQ}	zzQQPlsFncPPPlusQQ
