__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
(*
*DUPLICATE* this document, unindent every line in it, then import it with the following settings:
- No prefix
- Manual confirmation
- Assign the key-command (hotkey) to the first phrase
**All these phrases must be manually maintained.
*)
(*
FROM
...\xbnpe\tpkc\tpkc_bootstrap_phrases\zphrase_creator_pop_up_heirarchies\xbnpe_phrase_creator_popup_heirarchy_base.px.txt

Phrase-creators: XBN-PhraseExpress -- Call 'xh'   .   zXbnpeCmdPopupRoot
Phrase-creators: Other -- o   .   xh
*)
(*    Other -- t   .   xho  *)
Actions: Equal/not-equal to: qtn, nqn	.	xhoa
Actions: Question-colon block (... ? ... : ...): qcb[1,2,3]	.	xhoa
Block-start comments -- b	.	xho
Action: zzfvbbsctest	zzfvbbsctest	xhob
zREonFindVerifyBypassNextBlockStartCmt_M_rqsx (zvRQD_CMT_START_TXT)	\\\{#insert zREonFindVerifyBypassNextBlockStartCmt_M_rqsx\\\}	xhob
zzCBStartSubstrSameLenAs_rqsx	\\\{#insert zzCBStartSubstrSameLenAs_rqsx\\\}	xhob
zzREFindEOBlockStartCmtGTNextLine	\\\{#insert zzREFindEOBlockStartCmtGTNextLine\\\}	xhob
zzREFindNextNonWSInCol0Left	\\\{#insert zzREFindNextNonWSInCol0Left\\\}	xhob
zzREonFindVerifyBypassEmptyOkBSC_M_rqsx	\\\{#insert zzREonFindVerifyBypassEmptyOkBSC_M_rqsx\\\}	xhob
Inline configuration-variables -- i	.	xho
icvdemo[go]	(*actiononly=icvdemo*){#SETPHRASE -description zvACTN_NM -content icvdemo -autotext zvACTN_NM -folder ctvv_folder}{#insert zzMainActnNmOnlyCpExeOrCpDlg_M_actm}	xhoi
zSetCBToNamedInlineCVWRqdValGTNxtLn_M_cvm (zvCFG_VAR_NAME)	\\\{#insert zSetCBToNamedInlineCVWRqdValGTNxtLn_M_cvm\\\}	xhoi
zSetCBToNamedInlineCfgValWESDfltGTNxtLn_M_cvmDflt (zvES_VAL_DEFAULT)	\\\{#insert zSetCBToNamedInlineCfgValWESDfltGTNxtLn_M_cvmDflt\\\}	xhoi
zSetCBToNamedOptInlineCfgValESDfltIsESGTNxtLn_M_vnmDflt	\\\{#insert zSetCBToNamedOptInlineCfgValESDfltIsESGTNxtLn_M_vnmDflt\\\}	xhoi
zzErrDlgBadICVValue_M_cvm	\\\{#insert zzErrDlgBadICVValue_M_cvm\\\}	xhoi
zzErrDlgMissingICV_M_cvm	\\\{#insert zzErrDlgMissingICV_M_cvm\\\}	xhoi
zzErrDlgMissingRqdVal_M_cvm	\\\{#insert zzErrDlgMissingRqdVal_M_cvm\\\}	xhoi
Set variables -- v	.	xhoi
zSetCB_TO_dflt	\\\{#insert zSetCB_TO_dflt\\\}	xhoiv
zvES_VAL_DEFAULT_stES	\\\{#insert zvES_VAL_DEFAULT_stES\\\}	xhoiv
zvOUTPUT_FILE_NAME_stOptInlineCVOrThisFileNm	\\\{#insert zvOUTPUT_FILE_NAME_stOptInlineCVOrThisFileNm\\\}	xhoiv
zvOUT_DIR_stRqdInlineCV	\\\{#insert zvOUT_DIR_stRqdInlineCV\\\}	xhoiv
zzSqBrkCURSORSlk2Bksp8	\\\{#insert zzSqBrkCURSORSlk2Bksp8\\\}	xho
(*	  Spot-marks (x-mark) -- x   .   xho*)
zXDown[2-4] -- d	\\\{#insert zXDown\\\}	xhox
With paste -- p	\\\{#insert zXDown\\\}	xhoxd
zXDownPaste	\\\{#insert zXDownPaste\\\}	xhoxdp
zXDownPastePreBrcktGTP	\\\{#insert zXDownPastePreBrcktGTP\\\}	xhoxdp
zPasteXDown	\\\{#insert zPasteXDown\\\}	xhoxdp
zPasteXDownDelete	\\\{#insert zPasteXDownDelete\\\}	xhoxdp
zSlkXDown	\\\{#insert zSlkXDown\\\}	xhoxd
zXDownDelete	\\\{#insert zXDownDelete\\\}	xhoxd
zXDownLeft	\\\{#insert zXDownLeft\\\}	xhoxd
zXDownRight	\\\{#insert zXDownRight\\\}	xhoxd
zzSlkXDownEnter	\\\{#insert zzSlkXDownEnter\\\}	xhoxd
zXUp[2-4] -- u	\\\{#insert zXUp\\\}	xhox
With paste -- p	\\\{#insert zXDown\\\}	xhoxu
zPasteXUp	\\\{#insert zPasteXUp\\\}	xhoxup
zPasteXUpDelete	\\\{#insert zPasteXUpDelete\\\}	xhoxup
zXUpPaste	\\\{#insert zXUpPaste\\\}	xhoxup
zXUpPastePreBrcktGTP	\\\{#insert zXUpPastePreBrcktGTP\\\}	xhoxup
zSlkXUp	\\\{#insert zSlkXUp\\\}	xhoxu
zXUpDelete	\\\{#insert zXUpDelete\\\}	xhoxu
zXUpLeft	\\\{#insert zXUpLeft\\\}	xhoxu
zXUpRight	\\\{#insert zXUpRight\\\}	xhoxu
zzSlkXUpEnter	\\\{#insert zzSlkXUpEnter\\\}	xhoxu
zXmark -- k	\\\{#insert zXmark\\\}	xhox
zXThenSelect	\\\{#insert zXThenSelect\\\}	xhoxk
zXmarkCoded	\\\{#insert zXmarkCoded\\\}	xhoxk
zXCddThenSelect	\\\{#insert zXCddThenSelect\\\}	xhoxk
zXmarkMaybeCdd_M_cde (zvCDD_ES)	\\\{#insert zXmarkMaybeCdd_M_cde\\\}	xhoxk
zXmarkPostGTP	\\\{#insert zXmarkPostGTP\\\}	xhoxk
zXmarkThenGTP	\\\{#insert zXmarkThenGTP\\\}	xhoxk
zXDownUp	\\\{#insert zXDownUp\\\}	xhox
(*	  Spot-marks (y-mark) -- y   .   xho*)
zYDown[2-4] -- d	\\\{#insert zYDown\\\}	xhoy
With paste -- p	\\\{#insert zYDown\\\}	xhoyd
zYDownPaste	\\\{#insert zYDownPaste\\\}	xhoydp
zYDownPastePreBrcktGTP	\\\{#insert zYDownPastePreBrcktGTP\\\}	xhoydp
zPasteYDown	\\\{#insert zPasteYDown\\\}	xhoydp
zPasteYDownDelete	\\\{#insert zPasteYDownDelete\\\}	xhoydp
zSlkYDown	\\\{#insert zSlkYDown\\\}	xhoyd
zYDownDelete	\\\{#insert zYDownDelete\\\}	xhoyd
zYDownLeft	\\\{#insert zYDownLeft\\\}	xhoyd
zYDownRight	\\\{#insert zYDownRight\\\}	xhoyd
zzSlkYDownEnter	\\\{#insert zzSlkYDownEnter\\\}	xhoyd
zYUp[2-4] -- u	\\\{#insert zYUp\\\}	xhoy
With paste -- p	\\\{#insert zYDown\\\}	xhoyu
zPasteYUp	\\\{#insert zPasteYUp\\\}	xhoyup
zPasteYUpDelete	\\\{#insert zPasteYUpDelete\\\}	xhoyup
zYUpPaste	\\\{#insert zYUpPaste\\\}	xhoyup
zYUpPastePreBrcktGTP	\\\{#insert zYUpPastePreBrcktGTP\\\}	xhoyup
zSlkYUp	\\\{#insert zSlkYUp\\\}	xhoyu
zYUpDelete	\\\{#insert zYUpDelete\\\}	xhoyu
zYUpLeft	\\\{#insert zYUpLeft\\\}	xhoyu
zYUpRight	\\\{#insert zYUpRight\\\}	xhoyu
zzSlkYUpEnter	\\\{#insert zzSlkYUpEnter\\\}	xhoyu
zYmark -- k	\\\{#insert zYmark\\\}	xhoy
zYThenSelect	\\\{#insert zYThenSelect\\\}	xhoyk
zYmarkCoded	\\\{#insert zYmarkCoded\\\}	xhoyk
zYCddThenSelect	\\\{#insert zYCddThenSelect\\\}	xhoyk
zYmarkMaybeCdd_M_cde (zvCDD_ES)	\\\{#insert zYmarkMaybeCdd_M_cde\\\}	xhoyk
zYmarkPostGTP	\\\{#insert zYmarkPostGTP\\\}	xhoyk
zYmarkThenGTP	\\\{#insert zYmarkThenGTP\\\}	xhoyk
zYDownUp	\\\{#insert zYDownUp\\\}	xhoy
(* Math and sleep -- m*)
Sleep -- s	.	xhom
zSlpXMillsForEveryYWBal_xy	\\\{#insert zSlpXMillsForEveryYWBal_xy\\\}	xhoms
zSlpXMillsForEveryY_xy	\\\{#insert zSlpXMillsForEveryY_xy\\\}	xhoms
(*    Key-presses -- k   .   xho
Key-press combinations -- c   .   xhok
Enter-then-... -- e   .   xhokc*)
zEnterHome	\\\{#insert zEnterHome\\\}	xhokce
