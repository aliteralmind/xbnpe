__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zzParenCurlyBlock -[zCpACCENT]- ()  {...}  	({#insert zYmark})  (*Putting '\\\' here literally prints it!-->*){{#insert zENTER2}\\\}{#insert zYUpDelete}{#insert curlysyn}	zzParenCurlyBlock
zzCurlyBlock -[zApACCENT]- {...}  	(*starts with space*)  (*Putting '\\\' here literally prints it!-->*){{#insert zENTER}{#insert zYmark}{#insert zENTER}\\\}{#insert zYUp}{#insert curlysyn}	zzCurlyBlock
zzSquareBracketsPaste -[zApYY]- [{paste}]	[{#insert zTPPaste}]{#insert curlysyn}	zzSquareBracketsPaste
zzParensPaste -[zApBB]- ([paste])	({#insert zTPPaste}){#insert curlysyn}	zzParensPaste
zzParensSemicPaste -[zCApBB]- ([paste]);	({#insert zTPPaste});{#insert curlysyn}	zzParensSemicPaste
zzParensSemic -[zCSpBB]- ();	();{#insert zLEFT2}{#insert curlysyn}	zzParensSemic
zzSingleQuotesPaste -[zCApUPR_SLASH]- '[paste]'	'{#insert zTPPaste}'{#insert curlysyn}	zzSingleQuotesPaste
zzSingleQuotes -[zCSpUPR_SLASH]- ''	''{#insert zLEFT}{#insert curlysyn}	zzSingleQuotes
zzDoubleQuotesPaste -[zApUPR_SLASH]- '[paste]'	{#insert zAscQQ}{#insert zTPPaste}{#insert zAscQQ}{#insert curlysyn}	zzDoubleQuotesPaste
zzDoubleQuotesEsc -[zASpUPR_SLASH]- \{#insert zAscQQ}...\{#insert zAscQQ}	\{#insert zAscQQ}\{#insert zAscQQ}{#insert zLEFT2}{#insert curlysyn}	zzDoubleQuotesEsc
zzDoubleQuotesEscPaste -[zCASpUPR_SLASH]- \{#insert zAscQQ}[paste]\{#insert zAscQQ}	\{#insert zAscQQ}{#insert zTPPaste}\{#insert zAscQQ}{#insert curlysyn}	zzDoubleQuotesEscPaste
curlysyn	(*Putting '\\\' before literally-displayed open curlys, literally displays the slashes!*){#BALLOON -title Key-commands: Quotes, parens, curlys, sq-brkts -text ApACCENT=() {...\\\}  //  zCpACCENT=  {...\\\}  //  zApYY=[paste]  //  zApBB=(paste)  //  zC[S,A]pUPR_SLASH='' (A=paste)  //  z[A,CAS]pUPR_SLASH={#insert zAscQQ}paste{#insert zAscQQ} (CAS='\{#insert zAscQQ}')}	curlysyn
