_divisorquotienttestall	dq1quotient:{#ENTER}{#insert dq1quotient}{#ENTER}dq2qmod:{#ENTER}{#insert dq2qmod}{#ENTER}dq3qmod1if:{#ENTER}{#insert dq3qmod1if}{#ENTER}dq4qmod1ifblk:{#ENTER}{#insert dq4qmod1ifblk}{#ENTER}dq5splitevengroups:{#ENTER}{#insert dq5splitevengroups}	_divisorquotienttestall
dq1quotient	(*Input:*){#SETPHRASE -description zvDIVIDEND_TOP -content 65 -autotext zvDIVIDEND_TOP -folder ctvv_folder}{#SETPHRASE -description zvDIVISOR_BTM -content 10 -autotext zvDIVISOR_BTM -folder ctvv_folder}(*Go:*){#insert zQuotient_M_divisorDividend}(*Output:*){#insert zvDIVIDEND_TOP}/{#insert zvDIVISOR_BTM}={#insert zvQUOTIENT}	dq1quotient
dq2qmod	(*Input:*){#SETPHRASE -description zvDIVIDEND_TOP -content 65 -autotext zvDIVIDEND_TOP -folder ctvv_folder}{#SETPHRASE -description zvDIVISOR_BTM -content 10 -autotext zvDIVISOR_BTM -folder ctvv_folder}(*Go:*){#insert zQuotientModulo_M_divisorDividend}(*Output:*){#insert zvDIVIDEND_TOP}/{#insert zvDIVISOR_BTM}={#insert zvQUOTIENT}, remainder {#insert zvMODULO}	dq2qmod
dq3qmod1if	(*Input:*){#SETPHRASE -description zvDIVIDEND_TOP -content 65 -autotext zvDIVIDEND_TOP -folder ctvv_folder}{#SETPHRASE -description zvDIVISOR_BTM -content 10 -autotext zvDIVISOR_BTM -folder ctvv_folder}(*Go:*){#insert zQuotientModulo1IfMod_M_divisorDividend}(*Output:*){#insert zvDIVIDEND_TOP}/{#insert zvDIVISOR_BTM}={#insert zvQUOTIENT}, remainder {#insert zvMODULO} (if-mod-flag={#insert zv1_IF_MOD_GT0})	dq3qmod1if
dq4qmod1ifblk	(*Input:*){#SETPHRASE -description zvDIVIDEND_TOP -content 65 -autotext zvDIVIDEND_TOP -folder ctvv_folder}{#SETPHRASE -description zvDIVISOR_BTM -content 10 -autotext zvDIVISOR_BTM -folder ctvv_folder}(*Go:*){#insert zQuotientModulo1IfModTtlBlks_M_divisorDividend}(*Output:*){#insert zvDIVIDEND_TOP}/{#insert zvDIVISOR_BTM}={#insert zvQUOTIENT}, remainder {#insert zvMODULO} (if-mod-flag={#insert zv1_IF_MOD_GT0}, total-blocks={#insert zvTTL_DIV_BLKS})	dq4qmod1ifblk
dq5splitevengroups	(*Init:*){#SETPHRASE -description zvX_S -content xxxxxxxxxxxxxxxxxxxxxx -autotext zvX_S -folder ctvv_folder}{#SETPHRASE -description zvDIVIDEND_TOP -content {#LENGTH {#insert zvX_S}} -autotext zvDIVIDEND_TOP -folder ctvv_folder}{#SETPHRASE -description zvDIVISOR_BTM -content 5 -autotext zvDIVISOR_BTM -folder ctvv_folder}(*Determine group count:*){#insert zQuotientModulo1IfModTtlBlks_M_divisorDividend}Dividing {#insert zvDIVIDEND_TOP} x-s into groups of, AT MAXIMUM, {#insert zvDIVISOR_BTM}.{#ENTER}{#insert zvDIVIDEND_TOP}/{#insert zvDIVISOR_BTM}={#insert zvQUOTIENT}, remainder {#insert zvMODULO} (if-mod-flag={#insert zv1_IF_MOD_GT0}, total-blocks={#insert zvTTL_DIV_BLKS}){#ENTER -count 2}(*Output:*){#LOOP {#insert zzSplitNextXGroup_M_xsDvsr} -count {#insert zvTTL_DIV_BLKS}}	dq5splitevengroups
zzSplitNextXGroup_M_xsDvsr -- Needs zvX_S, zvDIVISOR_BTM	(*Get current group to clipboard, update all-Xs var:*){#SETCLIPBOARD {#SUBSTR {#insert zvX_S} -from 0 -count {#insert zvDIVISOR_BTM}}}{#SETPHRASE -description zvX_S -content {#SUBSTR {#insert zvX_S} -from {#CALC {#insert zvDIVISOR_BTM} + 1 -round 0 -thousands none} -count {#CALC {#LENGTH {#insert zvX_S}} - {#insert zvDIVISOR_BTM} -round 0 -thousands none}} -autotext zvX_S -folder ctvv_folder}(*Output:*){#INSERTCLIPBOARD}{#ENTER}	zzSplitNextXGroup_M_xsDvsr
