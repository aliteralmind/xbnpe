__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress: Large set of generically useful scripting tools for MS Windows, written in PhraseExpress and TextPad.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
hpltn -- zAddHashToPrevLink ALT KC	{#insert zAddHashToPrevLink}{#insert zzNmlnkSyn}	hpltn
nlcb -- zNameLinkFromCBWord ALT KC	{#insert zNameLinkFromCBWord}{#insert zzNmlnkSyn}	nlcb
nlcbc -- zNameLinkFromCBWordCoded ALT KC	{#insert zNameLinkFromCBWordCoded}{#insert zzNmlnkSyn}	nlcbc
nlwl -- zNameLinkFromWordLeft ALT KC	{#insert zNameLinkFromWordLeft}{#insert zzNmlnkSyn}	nlwl
nlwlc -- zNameLinkFromWordLeftCoded ALT KC	{#insert zNameLinkFromWordLeftCoded}{#insert zzNmlnkSyn}	nlwlc
ntcb -- zNameTargetFromCBWord ALT KC	{#insert zNameTargetFromCBWord}{#insert zzNmlnkSyn}	ntcb
ntwl -- zNameTargetFromWordLeft ALT KC	{#insert zNameTargetFromWordLeft}{#insert zzNmlnkSyn}	ntwl
zAddHashToPrevLink -- Add '#' to prev link [zApSIX]	{#insert zXmark}{#insert ztpmTagFindPrevHrefThrQQ}{#insert zRIGHT}#{#insert zSelectR1wCopy}{#insert zXDown}<a name={#asc 34}{#insert zTPPaste}{#asc 34}/>{#insert ztpmTagSelectL1}	zAddHashToPrevLink
zCodedLinkFromSel -- Link from sel CODE-d [zCASpFIVE]	{#insert zzRplcDlgOpenRERplcUrlSpcDscWLink}{#insert zTPCut}<CODE>{#insert zTPPaste}</CODE>	zCodedLinkFromSel
zLinkFromSel -- Link from sel (1st space-word url) [zCSpFIVE]	{#insert zzRplcDlgOpenRERplcUrlSpcDscWLink}{#insert zRIGHT}	zLinkFromSel
zNameLinkFromCBWord -- Transforms cb-word to <A HREF='#[CB]'>[CB]</A>	<A HREF={#insert zAscQQ}#{#insert zTPPaste}{#insert zAscQQ}>{#insert zTPPaste}</A>	zNameLinkFromCBWord
zNameLinkFromCBWordCoded -- zNameLinkFromCBWord, surrounded by <CODE>	<CODE>{#insert zNameLinkFromCBWord}</CODE>	zNameLinkFromCBWordCoded
zNameLinkFromWordLeft -- Select-copy word-left, zNameLinkFromCBWord	{#insert zSelectL1wCopy}{#insert zNameLinkFromCBWord}	zNameLinkFromWordLeft
zNameLinkFromWordLeftCoded -- Select-copy word-left, zNameLinkFromCBWordCoded	{#insert zSelectL1wCopy}{#insert zNameLinkFromCBWordCoded}	zNameLinkFromWordLeftCoded
zNameTargetFromCBWord -- Transforms word in clipboard to <A NAME='[CB]'/>	<A NAME={#insert zAscQQ}{#insert zTPPaste}{#insert zAscQQ}/>	zNameTargetFromCBWord
zNameTargetFromCBWordCoded -- Transforms word in clipboard to <A NAME='[CB]'/>	<A NAME={#insert zAscQQ}{#insert zTPPaste}{#insert zAscQQ}/>	zNameTargetFromCBWordCoded
zNameTargetFromWordLeft -- Select-copy word-left, zNameTargetFromCBWord	{#insert zSelectL1wCopy}{#insert zNameTargetFromCBWord}	zNameTargetFromWordLeft
zSelectedUrlDescToCodedNameLink -- zCodedLinkFromSel, hpltn [zCApSIX]	{#insert zCodedLinkFromSel}{#insert hpltn}	zSelectedUrlDescToCodedNameLink
zSelectedUrlDescToNameLink -- zLinkFromSel, hpltn [zCSpSIX]	{#insert zLinkFromSel}{#insert hpltn}	zSelectedUrlDescToNameLink
zzNmlnkSyn	{#BALLOON -title Syntax: '#NAME'~links -text hpltn=add '#' to prev link  //  nt[cb,wl]=clipboard or word-left to <A NAME='[cb]'/>  //  nl[cb,wl][c]=to full ('C'oded) name-link}	zzNmlnkSyn
zzRplcDlgOpenRERplcUrlSpcDscWLink	{#insert zRplcDlgOpenRE}([^ ]+) (.+){#sleep 5}{#insert zRplcFieldWith}<A HREF={#asc 34}$1{#asc 34}>$2</A>{#insert zRplcBtnAllSel}{#insert zRplcDlgClose}	zzRplcDlgOpenRERplcUrlSpcDscWLink
