__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zvPC_DESC_PST_stES	{#SETPHRASE -description zvPC_DESC_PST -content  -autotext zvPC_DESC_PST -folder ctvv_folder}	zvPC_DESC_PST_stES
zzAllBasicPCPhrss_pcOn_M_ALL	{#insert zPCNNAPhraseIf_pcOn_M_ALL}{#insert zzAllPCPhrssProper_M_ALL}	zzAllBasicPCPhrss_pcOn_M_ALL
zzAllLtrlPhrssProper_cmdOff_M_ALL	{#insert zvNUMBER_stCgmin}{#insert zzzSetLtrlPCPostChar_M_actonPcafpLtry}{#insert zzzSetDescPostForCmdOff_M_vivnNumMpn}{#insert zvNUMBER_decBy1}(*<--The 'Next' phrases increment as the first step*){#insert zzNextLtrlPCPhrsProper_cmdOff_M_actmlPstcNumDptVivnMpn}{#insert zvPC_DESC_PST_stES}{#LOOP {#insert zzNextLtrlPCPhrsProper_cmdOff_M_actmlPstcNumDptVivnMpn} -count {#insert zzCmdRangeSizeMinus1_M_minMx}}	zzAllLtrlPhrssProper_cmdOff_M_ALL
zzAllLtrlPhrssProper_cmdOnCmdStyl_M_ALL	{#insert zvNUMBER_stCgmin}{#insert zzzSetLtrlPCPostChar_M_actonPcafpLtry}{#SETPHRASE -description zvPC_DESC_PST -content : {#insert zzMnvCmdName_M_preNumPst}{#insert zzMnvSynPstMainPhrsCrtr} -autotext zvPC_DESC_PST -folder ctvv_folder}{#insert zvNUMBER_decBy1}(*<--The 'Next' phrases increment as the first step*){#insert zzNextLtrlPCPhrsProper_cmdOnCmdStyl_M_actmlPstcNumDptVivnMpn}{#insert zvPC_DESC_PST_stES}{#LOOP {#insert zzNextLtrlPCPhrsProper_cmdOnCmdStyl_M_actmlPstcNumDptVivnMpn} -count {#insert zzCmdRangeSizeMinus1_M_minMx}}	zzAllLtrlPhrssProper_cmdOnCmdStyl_M_ALL
zzAllLtrlPhrssProper_cmdOnCrlyStyl_M_ALL	{#insert zvNUMBER_stCgmin}{#insert zzzSetLtrlPCPostChar_M_actonPcafpLtry}{#SETPHRASE -description zvPC_DESC_PST -content : {#insert zzMnvCmdName_M_preNumPst} -autotext zvPC_DESC_PST -folder ctvv_folder}{#insert zvNUMBER_decBy1}{#insert zzNextLtrlPCPhrsProper_cmdOnCrlyStyl_M_actmlPstcNumDptVivnMpn}{#insert zvPC_DESC_PST_stES}{#LOOP {#insert zzNextLtrlPCPhrsProper_cmdOnCrlyStyl_M_actmlPstcNumDptVivnMpn} -count {#insert zzCmdRangeSizeMinus1_M_minMx}}	zzAllLtrlPhrssProper_cmdOnCrlyStyl_M_ALL
zzAllPCPhrssProper_M_ALL	{#insert {#COND -if {#insert zvCOMMANDS_ON} = on -then zzAllPCPhrssProper_cmdOn_M_actmlOnPcafpCmdpreNumPst -else zzAllPCPhrssProper_cmdOff_M_actmlOnPcafpCmdpreNumPst}}	zzAllPCPhrssProper_M_ALL
zzAllPCPhrssProper_cmdOff_M_actmlOnPcafpCmdpreNumPst	{#insert zvNUMBER_stCgmin}{#insert zzzSetPCPostChar_M_actonPcafp}{#insert zzzSetDescPostForCmdOff_M_vivnNumMpn}{#insert zvNUMBER_decBy1}{#insert zzNextPCPhrsProper_cmdOff_M_actmlPstcNumDptVivnMpn}{#insert zvPC_DESC_PST_stES}{#LOOP {#insert zzNextPCPhrsProper_cmdOff_M_actmlPstcNumDptVivnMpn} -count {#insert zzCmdRangeSizeMinus1_M_minMx}}	zzAllPCPhrssProper_cmdOff_M_actmlOnPcafpCmdpreNumPst
zzAllPCPhrssProper_cmdOn_M_actmlOnPcafpCmdpreNumPst	{#insert zvNUMBER_stCgmin}{#insert zzzSetPCPostChar_M_actonPcafp}{#SETPHRASE -description zvPC_DESC_PST -content : {#insert zzMnvCmdName_M_preNumPst} -autotext zvPC_DESC_PST -folder ctvv_folder}{#insert zvNUMBER_decBy1}(*<--Each next increments this as its first step*){#insert zzNextPCPhrsProper_cmdOn_M_actmlPstcNumDptCmdPrePst}{#insert zvPC_DESC_PST_stES}{#LOOP {#insert zzNextPCPhrsProper_cmdOn_M_actmlPstcNumDptCmdPrePst} -count {#insert zzCmdRangeSizeMinus1_M_minMx}}	zzAllPCPhrssProper_cmdOn_M_actmlOnPcafpCmdpreNumPst
zzCallPCWithNum_M_actmlPstcNum -(**)- For use by literal and non-literal pc-s	(*Just be sure the pc-postfix char is properly set*){#insert zzzCINnaTgtES_cmdOff_M_nnlg}(*Redundant check. It's assumed that, when not empty-string, that the target num is indeed in the command-range. This was verified when the minv-config was read in, via plpdcf. Unless the LPD-phrase-set files were manually edited, there should be no problem.*){#insert zOY}#insert {#insert zzzPhrsCrtrName_M_actmlPcafpcNum}{#insert zCY}	zzCallPCWithNum_M_actmlPstcNum
zzMnvCmdTrplyLtrlCall_M_preNumPst -- For literal phrase-creators, 'curly' style	\\\\\\\\\{#insert {#insert zzMnvCmdName_M_preNumPst}\\\\\\\\\}	zzMnvCmdTrplyLtrlCall_M_preNumPst
zzNextLtrlPCPhrsProper_cmdOff_M_actmlPstcNumDptVivnMpn	{#insert zvNUMBER_incBy1}{#insert zzzLtrlPCDesc_M_actmlPstcNumDpt}{#insert zTAB}{#insert zOYp}#insert {#insert zzMnvVarIVarSetToNumLtrlPhrsNm_M_vivnNum}{#insert zCYp}{#insert zOY}#insert {#insert zzMnvMstrPhrsNmDblyLtrl_M_mpn}{#insert zCY}{#insert zTAB}{#insert zzzPhrsCrtrName_M_actmlPcafpcNum}{#insert zENTER}	zzNextLtrlPCPhrsProper_cmdOff_M_actmlPstcNumDptVivnMpn
zzNextLtrlPCPhrsProper_cmdOnCmdStyl_M_actmlPstcNumDptVivnMpn	{#insert zvNUMBER_incBy1}{#insert zzzLtrlPCDesc_M_actmlPstcNumDpt}{#insert zTAB}\\\\\\{#insert {#insert zzMnvCmdName_M_preNumPst}{#insert zzMnvSynPstMainPhrsCrtr}\\\\\\}{#insert zTAB}{#insert zzzPhrsCrtrName_M_actmlPcafpcNum}{#insert zENTER}	zzNextLtrlPCPhrsProper_cmdOnCmdStyl_M_actmlPstcNumDptVivnMpn
zzNextLtrlPCPhrsProper_cmdOnCrlyStyl_M_actmlPstcNumDptVivnMpn	{#insert zvNUMBER_incBy1}{#insert zzzLtrlPCDesc_M_actmlPstcNumDpt}{#insert zTAB}{#insert zzMnvCmdTrplyLtrlCall_M_preNumPst}{#insert zTAB}{#insert zzzPhrsCrtrName_M_actmlPcafpcNum}{#insert zENTER}	zzNextLtrlPCPhrsProper_cmdOnCrlyStyl_M_actmlPstcNumDptVivnMpn
zzNextPCPhrsProper_cmdOff_M_actmlPstcNumDptVivnMpn	{#insert zvNUMBER_incBy1}{#insert zzzPCDesc_M_actmlPstcNumDpt}{#insert zTAB}{#insert zOY}#insert {#insert zzMnvVarIVarSetToNumLtrlPhrsNm_M_vivnNum}{#insert zCY}{#insert zOY}#insert {#insert zzMnvMstrPhrsNmLtrl_M_mpn}{#insert zCY}{#insert zTAB}{#insert zzzPhrsCrtrName_M_actmlPcafpcNum}{#insert zENTER}	zzNextPCPhrsProper_cmdOff_M_actmlPstcNumDptVivnMpn
zzNextPCPhrsProper_cmdOn_M_actmlPstcNumDptCmdPrePst	{#insert zvNUMBER_incBy1}{#insert zzzPCDesc_M_actmlPstcNumDpt}{#insert zTAB}{#insert zzMnvCmdDblyLtrlCall_M_preNumPst}{#insert zTAB}{#insert zzzPhrsCrtrName_M_actmlPcafpcNum}{#insert zENTER}	zzNextPCPhrsProper_cmdOn_M_actmlPstcNumDptCmdPrePst
zzzCINnaTgtES_cmdOff_M_nnlg	{#insert {#COND -if {#LENGTH {#insert zvNNL_TGT_NUM}} >= 1 -then z1slp -else zzErrDlgBadNNLTgtNum_M_selfCgminMx}}	zzzCINnaTgtES_cmdOff_M_nnlg
zzzLtrlPCDesc_M_actmlPstcNumDpt -(**)-	{#insert {#COND -if {#insert zvLTRL_STYL_ESYC} = command -then zzzPCDesc_M_actmlPstcNumDpt -else zzzLtrlPCDesc_crlyStyl_M_actmlPstcNumDpt}}	zzzLtrlPCDesc_M_actmlPstcNumDpt
zzzLtrlPCDesc_crlyStyl_M_actmlPstcNumDpt	(*Needs zvACTION_NM_1C_LC, zvPC_POST_CHAR, zvNUMBER, zvPC_DESC_PST*){#insert zzzPhrsCrtrName_M_actmlPcafpcNum} -- Literal phrase{#insert zvPC_DESC_PST}	zzzLtrlPCDesc_crlyStyl_M_actmlPstcNumDpt
zzzPCDesc_M_actmlPstcNumDpt -(**)-	(*Needs zvACTION_NM_1C_LC, zvPC_POST_CHAR, zvNUMBER, zvPC_DESC_PST*){#insert zzzPhrsCrtrName_M_actmlPcafpcNum} -- Phrase{#insert zvPC_DESC_PST}	zzzPCDesc_M_actmlPstcNumDpt
zzzPCNnaPhrsName_M_actmlOnPcafp -(**)- For use by literal and non-literal pc-s	(*Just be sure the *){#insert zvNUMBER_stES}(*Empty-String, because it's a no num alias!*){#insert zzzPhrsCrtrName_M_actmlPcafpcNum}	zzzPCNnaPhrsName_M_actmlOnPcafp
zzzPhrsCrtrName_M_actmlPcafpcNum	{#insert zvACTION_NM_1C_LC}{#insert zvPC_POST_CHAR}{#insert zvNUMBER}	zzzPhrsCrtrName_M_actmlPcafpcNum
zzzSetDescPostForCmdOff_M_vivnNumMpn	{#SETPHRASE -description zvPC_DESC_PST -content : {#insert zzMnvVarIVarSetToNumPhrsNm_M_vivnNum}, {#insert zvMSTR_PHRS_NM} -autotext zvPC_DESC_PST -folder ctvv_folder}	zzzSetDescPostForCmdOff_M_vivnNumMpn
zzzSetLtrlPCPostChar_M_actonPcafpLtry	{#SETPHRASE -description zvPC_POST_CHAR -content {#insert zzPCLtrlPstChar_M_actonnfPcafpLtry} -autotext zvPC_POST_CHAR -folder ctvv_folder}	zzzSetLtrlPCPostChar_M_actonPcafpLtry
zzzSetPCPostChar_M_actonPcafp	{#SETPHRASE -description zvPC_POST_CHAR -content {#insert zzPCPstChar_M_actonPcafpLtry} -autotext zvPC_POST_CHAR -folder ctvv_folder}	zzzSetPCPostChar_M_actonPcafp
