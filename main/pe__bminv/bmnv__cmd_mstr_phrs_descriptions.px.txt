__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress: Large set of generically useful scripting tools for MS Windows, written in PhraseExpress and TextPad.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
__zMasterPhraseDescAndBSC_README__	[[insertfile{#insert zEnterTab}{#insert zzz__zMasterPhraseDescAndBSC_README__file}...]]{#insert zENTER2}{#insert zBKSP}{#setclipboard {#insertfile {#insert zzz__zMasterPhraseDescAndBSC_README__file}}}{#insert zTPPaste}{#insert zENTER2}[[insertfile...END]]{#insert zENTER}{#insert zTPGTDocTop}	__zMasterPhraseDescAndBSC_README__
zMasterPhraseDescAndBSC_M_ALL	{#insert zvMSTR_PHRS_NM} -\(**)- {#insert zzActnNmWPCSntpPstIf_M_pcActnSntponPcafpLtry}{#insert zzMnvActnVarSynMstrPhrsSyntax_M_actnm1}{#insert zzMnvVarAbrvSyntax_M_vrv1}{#insert zENTER}\(*Needs {#insert zvVAR_IVAR_NAME} (var-abrv-lc={#insert zvVAR_ABRV_1C_LC}, var-phrs-nm-abrv={#insert zvVAR_PNMV_1C}). This command: (action-name-lc={#insert zvACTION_NM_1C_LC}, cmd-phrs-nm-abrv={#insert zvCMD_PNMV_1C}){#insert zzDefinePCPstAsteriskIf_M_daynActnmLtry}*){#insert zENTER}	zMasterPhraseDescAndBSC_M_ALL
zMnvMstrPhrsAndCmdDescsIf_M_ALL	{#insert zMasterPhraseDescAndBSC_M_ALL}{#insert {#COND -if {#insert zvCOMMANDS_ON} = {#insert zzEmptyString} -then z1slp -else zzAllCmdDescs_cmdOn_M_ALL}}	zMnvMstrPhrsAndCmdDescsIf_M_ALL
zzActnNmWPCSntpPstIf_M_pcActnSntponPcafpLtry -- If actions OR pcs on	{#SETPHRASE -description zvDEFINE_ASTERISK_YN -content no -autotext zvDEFINE_ASTERISK_YN -folder ctvv_folder}{#insert {#COND -if {#insert zvACTIONS_ON}{#insert zvPHRS_CRTRS_ON} = {#insert zzEmptyString} -then z1slp -else zzActnNmWPCSntpPstYesNeeded_M_pcActnSntponPcafpLtry}}	zzActnNmWPCSntpPstIf_M_pcActnSntponPcafpLtry
zzActnNmWPCSntpPstYesNeeded_M_pcActnSntponPcafpLtry	{#insert zvACTION_NM_1C_LC}{#insert zMnvCmdMstrPhrsPstActmSyntax_cmdOrPcOn_M_actSntpaPconPoreLtryAstryn}#, (*ends with space*)	zzActnNmWPCSntpPstYesNeeded_M_pcActnSntponPcafpLtry
zzAllCmdDescs_cmdOnNnlcxNo_M_ALL	{#insert zzNnlCmdInternalDescIf_M_cnmprePst}{#insert zvNUMBER_stCgminMinus1}{#LOOP {#insert zzNextMnvCmdDesc_M_preNumPstPconPstLtry} -count {#insert zzCmdRangeSize_M_minMx}}	zzAllCmdDescs_cmdOnNnlcxNo_M_ALL
zzAllCmdDescs_cmdOnNnlcxYes_M_ALL	{#insert zvNUMBER_stCgmin}{#LOOP {#insert zzNextMnvCmdDesc_M_preNumPstPconPstLtry} -count {#insert zzCmdRangeSizeMinus1_M_minMx}}	zzAllCmdDescs_cmdOnNnlcxYes_M_ALL
zzAllCmdDescs_cmdOn_M_ALL -(**)-	(*If the no-num-alias is external, then the lowest-number command is going to point to it. In this case, that lowest-numbered command is going to be auto-generated in the 'other' actions-output (zMnvAllOtherActionPhrases_M_sntpmsgVivnActm1LNnlgActmlMpn), not here. NOTE that the 'Next' function increments the number as its first step.*){#insert {#COND -if {#insert zvNO_NUM_ALIAS_ON}{#insert zvNNLC_XTRNL_YES} = onyes -then zzAllCmdDescs_cmdOnNnlcxYes_M_ALL -else zzAllCmdDescs_cmdOnNnlcxNo_M_ALL}}	zzAllCmdDescs_cmdOn_M_ALL
zzDefinePCPstAsteriskIf_M_daynActnmLtry	{#insert {#COND -if {#insert zvDEFINE_ASTERISK_YN} = no -then z1slp -else zzPcPstAsteriskDefinition_M_actnmLtry}}	zzDefinePCPstAsteriskIf_M_daynActnmLtry
zzMnvActnVarSynMstrPhrsSyntax_M_actnm1	{#insert zvACTION_NM_1C_LC}[{#insert zzMnvSynPstCmdInfoSyntax},[[{#insert zzMnvSynPstNumSetphrsPreCallMstr},{#insert zzMnvSynPstSetToNumPreCallMstr},{#insert zzMnvSynPstSetphrsToPrompt}]]{#insert zzMnvSynPstMstrPhrsNm}], (*ends with space*)	zzMnvActnVarSynMstrPhrsSyntax_M_actnm1
zzMnvActnmPstSyntaxForCmdIf_M_actPconPstLtry	{#insert {#COND -if {#insert zvPHRS_CRTRS_ON} = {#insert zzEmptyString} -then z1slp -else zzMnvActnmPstSyntaxForCmd_pcOn_M_actonPcafpLtry}}	zzMnvActnmPstSyntaxForCmdIf_M_actPconPstLtry
zzMnvActnmPstSyntaxForCmd_pcActOn_M_pcafpLtry	[{#COND -if {#insert zvLTRL_STYL_ESYC} != {#insert zzEmptyString} -then [ -else}{#insert zzMnvSynPstMainPhrsCrtr}{#COND -if {#insert zvLTRL_STYL_ESYC} != {#insert zzEmptyString} -then ,{#insert zzMnvSynPstLtrlPhrsCrtr}] -else}]	zzMnvActnmPstSyntaxForCmd_pcActOn_M_pcafpLtry
zzMnvActnmPstSyntaxForCmd_pcOnActOff_M_pcafpLtry	{#COND -if {#insert zvLTRL_STYL_ESYC} != {#insert zzEmptyString} -then [ -else}{#COND -if {#insert zvPCAF_PST_PORES} = {#insert zzMnvSynPstMainPhrsCrtr} -then {#insert zzMnvSynPstMainPhrsCrtr} -else *}{#COND -if {#insert zvLTRL_STYL_ESYC} != {#insert zzEmptyString} -then ,{#COND -if {#insert zvPCAF_PST_PORES} = {#insert zzMnvSynPstMainPhrsCrtr} -then {#insert zzMnvSynPstLtrlPhrsCrtr} -else {#insert zzMnvSynPstMainPhrsCrtr}}] -else}	zzMnvActnmPstSyntaxForCmd_pcOnActOff_M_pcafpLtry
zzMnvActnmPstSyntaxForCmd_pcOn_M_actonPcafpLtry	{#insert {#COND -if {#insert zvACTIONS_ON} = on -then zzMnvActnmPstSyntaxForCmd_pcActOn_M_pcafpLtry -else zzMnvActnmPstSyntaxForCmd_pcOnActOff_M_pcafpLtry}}	zzMnvActnmPstSyntaxForCmd_pcOn_M_actonPcafpLtry
zzMnvCmcdDesc_M_cnmPreNumPstActnmActPcon	{#insert zzMnvCmdName_M_preNumPst}{#insert zzMnvPstCmdNameDesc_M_preNumPstActPconPstLtry}	zzMnvCmcdDesc_M_cnmPreNumPstActnmActPcon
zzMnvPstCmdNameDesc_M_preNumPstActPconPstLtry	{#insert {#COND -if {#insert zvACTIONS_ON}{#insert zvPHRS_CRTRS_ON} = {#insert zzEmptyString} -then z1slp -else zzMnvPstCmdNameDesc_actOrPcOn_M_preNumPstActnmPconPstLtry}}	zzMnvPstCmdNameDesc_M_preNumPstActPconPstLtry
zzMnvPstCmdNameDesc_actOrPcOn_M_preNumPstActnmPconPstLtry	(*starts with space*) -- {#insert zvACTION_NM_1C_LC}{#insert zzMnvActnmPstSyntaxForCmdIf_M_actPconPstLtry}{#insert zvNUMBER}{#insert zENTER}	zzMnvPstCmdNameDesc_actOrPcOn_M_preNumPstActnmPconPstLtry
zzMnvVarAbrvSyntax_M_vrv1	{#insert zvVAR_ABRV_1C_LC}[[{#insert zzMnvSynPstMainPhrsCrtr},{#insert zzMnvSynPstVarInfoSyntax}]]	zzMnvVarAbrvSyntax_M_vrv1
zzNextMnvCmdDesc_M_preNumPstPconPstLtry	{#insert zvNUMBER_incBy1}{#insert zzMnvCmcdDesc_M_cnmPreNumPstActnmActPcon}	zzNextMnvCmdDesc_M_preNumPstPconPstLtry
zzNnlCmdInternalDescIf_M_cnmprePst	{#insert {#COND -if {#insert zvNO_NUM_ALIAS_ON}{#insert zvNNL_INTRNLC_YES} = onyes -then zzNnlCmdInternalDesc_M_cnmprePst -else z1slp}}	zzNnlCmdInternalDescIf_M_cnmprePst
zzNnlCmdInternalDesc_M_cnmprePst	{#insert zzMnvCmdNameNoNum_M_prePst} -- no-num-alias (nna-cmd is internal){#insert zENTER}	zzNnlCmdInternalDesc_M_cnmprePst
zzPcPstAsteriskDefForLtrl_M_actnm	(*starts with space*) Literal phrase-creators are named '[action-name]{#insert zzMnvSynPstMainPhrsCrtr}#' (for example: '{#insert zvACTION_NM_1C_LC}{#insert zzMnvSynPstMainPhrsCrtr}3')	zzPcPstAsteriskDefForLtrl_M_actnm
zzPcPstAsteriskDefinition_M_actnmLtry	[*]=<<<[FYI: phrase-creators are ON, actions are OFF, the pc-postfix is '' (empty-string), and the pc-literal-style is '{#insert zvLTRL_STYL_ESYC}'] The section defines the asterisk ('*') that in the phrase-description -- Normally, MINV-phrase-creators are named '[action-name]{#insert zzMnvSynPstMainPhrsCrtr}#'. That is not the case for this MINV-Command. You configured actions to not be printed, and the pc-postfix to be '' (empty-string)--therefore, the phrase-creators for this MINV-Command are EQUAL to the action-name: '[action-name]#' (for example: '{#insert zvACTION_NM_1C_LC}3').{#insert {#COND -if {#insert zvLTRL_STYL_ESYC} = {#insert zzEmptyString} -then z1slp -else zzPcPstAsteriskDefForLtrl_M_actnm}}>>>	zzPcPstAsteriskDefinition_M_actnmLtry
zzz__zMasterPhraseDescAndBSC_README__file	{#insert zXPROOT_DIR_peBuildMinv}bmnv__zzcmd_mstr_phrs_descriptions_README.txt	zzz__zMasterPhraseDescAndBSC_README__file


(*{#insert zzMnvSynPstMainPhrsCrtr}{#COND -if {#insert zvLTRL_STYL_ESYC} != {#insert zzEmptyString} -then ,{#insert zzMnvSynPstLtrlPhrsCrtr}] -else}
{#insert zzMnvDebugCmdThenVar}{#COND -if {#insert zvLTRL_STYL_ESYC} != {#insert zzEmptyString} -then [ -else}{#COND -if {#insert zvACTIONS_ON} -then [p{#COND -if {#insert zvLTRL_STYL_ESYC} != {#insert zzEmptyString} -then ,{#insert zzMnvSynPstLtrlPhrsCrtr}}] -else}] -else XXX}
{#COND -if {#insert zvPCAF_PST_PORES} = {#insert zzMnvSynPstMainPhrsCrtr} -then {#insert zzMnvSynPstMainPhrsCrtr} -else *}{#COND -if {#insert zvLTRL_STYL_ESYC} != {#insert zzEmptyString} -then ,{#COND -if {#insert zvPCAF_PST_PORES} = {#insert zzMnvSynPstMainPhrsCrtr} -then {#insert zzMnvSynPstLtrlPhrsCrtr} -else {#insert zzMnvSynPstMainPhrsCrtr}}] -else}*)
