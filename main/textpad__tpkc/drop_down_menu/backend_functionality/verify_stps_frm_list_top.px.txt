__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
zConfirmAllCmdsInAllCats_fromListTopSteps	{#insert zzzVrfyFLTStepsIntroAndCfgPrompts}{#insert zzzOpenVrfyFLTStepsLog}{#insert zTPPrefsOpenGTKBCatTop}{#SETPHRASE -description zvPNM_FOR_CAT -content zzAtCatLstTp_vrfyAllCmdsInCatFLTStpsWCatPrmpt_M_cat1SkstpsStw -autotext zvPNM_FOR_CAT -folder ctvv_folder}{#insert zzTpkcCallPhrsNmForEachCat_M_catpm}{#insert zTPPrefsClose}{#BALLOON -title DONE -text Done. Correct these 'bad' commands, if any, and then rebuild the TPKC project.}	zConfirmAllCmdsInAllCats_fromListTopSteps
zvCMDS_SKIPPED_incBy1	{#SETPHRASE -description zvCMDS_SKIPPED -content {#CALC {#insert zvCMDS_SKIPPED} + 1 -round 0 -thousands none} -autotext zvCMDS_SKIPPED -folder ctvv_folder}{#BALLOON -title Please wait... -text This cmd num={#insert zvTHIS_CMD_NUM}, total cmds in cat={#insert zzTpkcCatCmdCount_M_catl}, [skip~count]={#insert zvSKIP_COUNT}. Skipped so far={#insert zvCMDS_SKIPPED}}	zvCMDS_SKIPPED_incBy1
zzAtCatLstTp_vrfyAllCmdsInCatFLTStpsThnNGTStw_M_cat1SkstpsStw	{#insert zzzInitFLTStepsCounters}{#insert zzTpkcCatStpsFrmLstTop_M_catl}(*THIS cat is selected in Categroy list (it is assumed that the category's steps-from-cat-list-top are correct)*){#insert zTAB}{#sleep 10}(*At cmd list top*){#SETPHRASE -description zvQB_STR_LIST -content {#insert zzTpkcCatAllCmdNamesTCQbl_M_catl} -autotext zvQB_STR_LIST -folder ctvv_folder}{#LOOP {#insert zzzAtCmdListTop_confirmNxtCmdsFLTStpsIf_M_cmdqblCatlThcnThckStnSkn} -count {#insert zzTpkcCatCmdCount_M_catl}}{#insert zSpTAB}{#sleep 10}{#insert zHOME}{#sleep 10}	zzAtCatLstTp_vrfyAllCmdsInCatFLTStpsThnNGTStw_M_cat1SkstpsStw
zzAtCatLstTp_vrfyAllCmdsInCatFLTStpsWCatPrmpt_M_cat1SkstpsStw -(*Needs*)-	{#MSGBOX -head Verify cmds in cat '{#insert zvCAT_ABRV_LC}' -text Verify from~list~top steps for commands in category '{#insert zvCAT_ABRV_LC}'? -yes zzAtCatLstTp_vrfyAllCmdsInCatFLTStps_M_cat1SkstpsStw -no z1slp -defaultno}	zzAtCatLstTp_vrfyAllCmdsInCatFLTStpsWCatPrmpt_M_cat1SkstpsStw
zzAtCatLstTp_vrfyAllCmdsInCatFLTStps_M_cat1SkstpsStw	(*Needs zvSKIP_COUNT, zvSTART_NUM, zvTHIS_CMD_NUM, zvCMDS_SKIPPED.*){#BALLOON -title Please wait... -text About to verify all requested commands in category '{#insert zvCAT_ABRV_LC}'. If the [start~with] number is high, this may take a while.}{#sleep 2000}{#insert {#COND -if {#insert zvSTART_NUM} > {#insert zzTpkcCatCmdCount_M_catl} -then zzStartNumGTCatCmdCnt_catlStn -else zzAtCatLstTp_vrfyAllCmdsInCatFLTStpsThnNGTStw_M_cat1SkstpsStw}}	zzAtCatLstTp_vrfyAllCmdsInCatFLTStps_M_cat1SkstpsStw
zzStartNumGTCatCmdCnt_catlStn	{#BALLOON -title Nothing to verify -text The [start~with] number ({#insert zvSTART_NUM}) is greater than the number of commands in this category (category '{#insert zvCAT_ABRV_LC}' has {#insert zzTpkcCatCmdCount_M_catl} commands). Skipping this category.}	zzStartNumGTCatCmdCnt_catlStn
zzVrfy1CmdFLTSteps_M_cmd1CatlThsk -- DO verify for this cmd	{#SETPHRASE -description zvCMDS_SKIPPED -content 0 -autotext zvCMDS_SKIPPED -folder ctvv_folder}{#insert zzTpCmdStpsFrmLstTop_M_cmd1}{#MSGBOX -head Confirm from~list~top steps: '{#insert zzTpCmdNameTC_M_cmd1}' -text Just executed the go~to~the~command~from~the~'Commands'~list~top steps for the command '{#insert zzTpCmdNameTC_M_cmd1}' (abrv='{#insert zvCMD_ABRV_1C}', category='{#insert zzTpkcCatForCmdAbrvLC_M_cmd1}'). If the currently~selected command is indeed '{#insert zzTpCmdNameTC_M_cmd1}', press [Yes]. If not: [No]  //  TIP: Move the Preferences dialog so this PhraseExpress dialog doesn't block the 'Commands' list. -yes z1slp -no zzzAddBadStpsCmdToOpenErrDoc_M_cmd1Cat1}{#insert zHOME}	zzVrfy1CmdFLTSteps_M_cmd1CatlThsk
zzzAddBadStpsCmdToOpenErrDoc_M_cmd1Cat1	{#insert zTPPrefsClose}{#insert zzTpkcCatForCmdAbrvLC_M_cmd1}  {#insert zzTpCmdNameTC_M_cmd1}{#insert zENTER}{#insert zzOpenPrefsDlgGotoCmdListTop_M_catl}(*Back in the dialog, at the top of the 'Commands' list for THIS command's category*)	zzzAddBadStpsCmdToOpenErrDoc_M_cmd1Cat1
zzzAtCmdListTop_confirmNxtCmdsFLTStpsIf_M_cmdqblCatlThcnThckStnSkn -(*Needs*)-	(*{#MSGBOX -head Debug verify cmd flt-steps -text zzzAtCmdListTop_confirmNxtCmdsFLTStpsIf_M_cmdqblCatlThcnThckStnSkn, zvCMD_ABRV_1C='{#insert zvCMD_ABRV_1C}', zzTpCmdNameTC_M_cmd1='{#insert zzTpCmdNameTC_M_cmd1}', zvCAT_ABRV_LC='{#insert zvCAT_ABRV_LC}', zvCMDS_SKIPPED='{#insert zvCMDS_SKIPPED}', zvSKIP_COUNT='{#insert zvSKIP_COUNT}', zvTHIS_CMD_NUM='{#insert zvTHIS_CMD_NUM}', zvSTART_NUM='{#insert zvSTART_NUM}'}Needs zvCMD_ABRV_1C, zvCAT_ABRV_LC, zvTHIS_CMD_NUM, zvCMDS_SKIPPED, zvSKIP_COUNT, zvSTART_NUM.*)(*Needs zvCMD_ABRV_1C, zvCAT_ABRV_LC, zvTHIS_CMD_NUM, zvCMDS_SKIPPED, zvSKIP_COUNT, zvSTART_NUM*){#insert zzExtrElimSetCmd1SetQBL_M_cmdnameqbl}(*PERMANENT DEBUGGING-->{#MSGBOX -head Debug verify cmd flt~steps -text zzzAtCmdListTop_confirmNxtCmdsFLTStpsIf_M_cmdqblCatlThcnThckStnSkn, zvCMD_ABRV_1C='{#insert zvCMD_ABRV_1C}', zzTpCmdNameTC_M_cmd1='{#insert zzTpCmdNameTC_M_cmd1}', zvCAT_ABRV_LC='{#insert zvCAT_ABRV_LC}', zvCMDS_SKIPPED='{#insert zvCMDS_SKIPPED}', zvSKIP_COUNT='{#insert zvSKIP_COUNT}', zvTHIS_CMD_NUM='{#insert zvTHIS_CMD_NUM}', zvSTART_NUM='{#insert zvSTART_NUM}'}*)(*<--PERMANENT DEBUGGING*){#insert zzzvTHIS_CMD_NUM_incBy1}{#insert {#COND -if {#insert zvTHIS_CMD_NUM} < {#insert zvSTART_NUM} -then zzzBalNotYetStarted_M_stnThcn -else {#COND -if {#insert zvTHIS_CMD_NUM} = {#insert zvSTART_NUM} -then zzVrfy1CmdFLTSteps_M_cmd1CatlThsk -else zzzVrfy1CmdLFTStpsIfNotSkipped_M_cmd1CatlThcnThskSkn}}}	zzzAtCmdListTop_confirmNxtCmdsFLTStpsIf_M_cmdqblCatlThcnThckStnSkn
zzzBalNotYetStarted_M_stnThcn	{#BALLOON -title Please wait... -text [start~with] is {#insert zvSTART_NUM}. This command's number={#insert zvTHIS_CMD_NUM}.}	zzzBalNotYetStarted_M_stnThcn
zzzInitFLTStepsCounters	{#SETPHRASE -description zvTHIS_CMD_NUM -content 0 -autotext zvTHIS_CMD_NUM -folder ctvv_folder}{#SETPHRASE -description zvCMDS_SKIPPED -content 0 -autotext zvCMDS_SKIPPED -folder ctvv_folder}(*Counters initialized*)	zzzInitFLTStepsCounters
zzzOpenVrfyFLTStepsLog	{#insert zFcsTPFileNew}Commands with incorrect from-list-top steps{#insert zENTER}-------------------------------------------{#insert zENTER}	zzzOpenVrfyFLTStepsLog
zzzVrfy1CmdLFTStpsIfNotSkipped_M_cmd1CatlThcnThskSkn	{#insert {#COND -if {#insert zvCMDS_SKIPPED} = {#insert zvSKIP_COUNT} -then zzVrfy1CmdFLTSteps_M_cmd1CatlThsk -else zvCMDS_SKIPPED_incBy1}}	zzzVrfy1CmdLFTStpsIfNotSkipped_M_cmd1CatlThcnThskSkn
zzzVrfyFLTStepsIntroAndCfgPrompts	{#MSGBOX -head Proceed? -text About to verify every command's from~list~top steps (the steps from the 'Commands'~list top, to a particular command), in every category. About to ask you to set the 'skip count' and 'start with' numbers. [Skip count]=How many commands should be skipped before confirming another? To check every one in the category, set this to 0 (skip none). [Start with]=In each category, which command number, should be the first one checked? For example, to check every fifth command, starting with the third (so start~with is '3'), then in each category, commands 3, 8, 13, 18, 23, (and so on) will be checked. Another example: To verify every command, but skipping the first twenty, set start~with to 20, and skip~count to 0.  //  **WARNING** This process iterates through a sQuare~Bracketed List (qb~list) for the commands in each category. Therefore, there is about a one~second pause between each command. So if the [skip~count] is 5, then there will be about a five~second pause between each checked command.}{#SETPHRASE -description zvSTART_NUM -content {#INPUT -head Start with? -def 1 -single} -autotext zvSTART_NUM -folder ctvv_folder}{#SETPHRASE -description zvSKIP_COUNT -content {#INPUT -head Skip steps? -def 0 -single} -autotext zvSKIP_COUNT -folder ctvv_folder}	zzzVrfyFLTStepsIntroAndCfgPrompts
zzzvTHIS_CMD_NUM_incBy1	{#SETPHRASE -description zvTHIS_CMD_NUM -content {#CALC {#insert zvTHIS_CMD_NUM} + 1 -round 0 -thousands none} -autotext zvTHIS_CMD_NUM -folder ctvv_folder}	zzzvTHIS_CMD_NUM_incBy1
