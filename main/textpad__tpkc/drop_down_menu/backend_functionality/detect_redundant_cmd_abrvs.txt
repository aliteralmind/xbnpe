zDetectRedundantCmdAbrvs	{#BALLOON -title Please wait... -text Printing ALL command abbreviations in the TPKC-Project, for the purpose of detecting redundant abbreviations. Total commands in TPKC-Project={#insert zzTpkcTotalCmdsInAllCatsForTestOrLivePost06}}{#SETPHRASE -description zvPNM_FOR_CAT -content zzTpkcCallVarPNmForEachCmdInCat_M_catlCmdpm -autotext zvPNM_FOR_CAT -folder ctvv_folder}{#SETPHRASE -description zvPNM_FOR_CMD -content zzCmdAbrvEtr_M_cmd1 -autotext zvPNM_FOR_CMD -folder ctvv_folder}{#insert zFcsTPFileNew}{#insert zzTpkcCallPhrsNmForEachCat_M_catpm}(*Now file with all cmd-abrvs, 1-per-line, is printed.*){#insert zDupCurrFileTextToNewFile}{#insert zREoffGetSetNonEmptyRqdLineCountForCurrentDocXsInCB}{#insert zFileCloseDiscardChanges}{#MSGBOX -head Result -text There are SUPPOSED to be {#insert zzTpkcTotalCmdsInAllCatsForTestOrLivePost06} commands (that's the number I came up with after adding every category's 'command~count' config~variables). In THIS file, there are {#insert zvLINE_COUNT} total command abbreviations. So first of all, if these numbers are equal, then good.  //  Now sort this file and eliminate duplicates. There should STILL be {#insert zvLINE_COUNT} lines. If there are less, then at least one command~abbreviation is duplicated. Use UNDO and then sort lines WITHOUT eliminating duplicate lines, in order to detect the duplicates.}	zDetectRedundantCmdAbrvs
zzCmdAbrvEtr_M_cmd1	{#insert zvCMD_ABRV_1C}{#insert zENTER}	zzCmdAbrvEtr_M_cmd1

