__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress: Large set of generically useful scripting tools for MS Windows, written in PhraseExpress and TextPad.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
(*Transforms the regex-config file to be two phrase-files: One accessible via an autotext pop-up heirarchy, and another only accessible by its explicit autotext. The autotexts in the heirarchy begin 'reh'. The autotexts in the 'explicit' file begin re. This is to encourage learning a complicated set of related phrases.*)
pephconfigtoheir -- Dup peph-config file, and create the manual-confirm heirarchy.	{#insert zzPephBuildFromConfig}	pephconfigtoheir
pephconfigtoheirq -- pephconfigtoheir, Quiet (no info-only dialogs or pre-check)	{#insert zzPephBuildFromConfigQuiet}	pephconfigtoheirq
pephcth -- pephconfigtoheir ALT KC	{#insert pephconfigtoheir}	pephcth
pephcthq -- pephconfigtoheirq ALT KC	{#insert pephconfigtoheirq}	pephcthq
zzDirSaveHeirFile	{#insert zzPephFileSaveDstDirSlpEnter}{#insert zzPephRegexHeirFileName}{#insert zKSlpEtr}	zzDirSaveHeirFile
zzDirSaveXATFile	{#insert zzPephFileSaveDstDirSlpEnter}{#insert zzPephRegexExplicitAutoTextFileName}{#insert zKSlpEtr}	zzDirSaveXATFile
zzNewFileInsCfgFileUscOC	{#insert zFcsTPFileNew}{#setclipboard {#insertfile {#insert zzPephRegexConfigDirFile}}}{#insert zTPPaste}	zzNewFileInsCfgFileUscOC
zzPEPopupHeirParentOnlyDivToken -- Plain text (not esc for regex)	(*starts with space*) ***	zzPEPopupHeirParentOnlyDivToken
zzPEPopupHeirParentOnlyDivTokenForRE -- Escaped for regex	(*starts with space*) \*\*\*	zzPEPopupHeirParentOnlyDivTokenForRE
zzPephBuildFromConfig	{#insert zFindDialogFlagPreCheck}{#insert zzPephBuildFromConfigQuiet}	zzPephBuildFromConfig
zzPephBuildFromConfigQuiet	{#insert zzPephDelExistingFiles}{#insert zzPephCreateHeirFromCfg}{#insert zzPephCreateExplicitPhrasesFromCfg}{#msgbox -head DONE. -text DONE. Unindent and resave both files before importing into PhraseExpress. After importing, for all phrases in the {#insert zzPephRegexHeirFileName} folder, set the Postfix to 'None', and turn on 'Manual confirmation'.}	zzPephBuildFromConfigQuiet
zzPephCreateExplicitPhrasesFromCfg	{#insert zzNewFileInsCfgFileUscOC}{#insert zTPFindDlgOpen}{#insert zzPEPopupHeirParentOnlyDivToken}{#insert zFindMarkAllCloseDelMarked}{#insert zRplcDlgRE}{#insert zzPephMRGRehToRe}{#insert zzPephMRGREPopulateYmksAndAddAutoTxtWAllChars}{#insert zzPephMRGREAddAutoTxtToPasteChild}{#insert zRplcDlgClose}{#insert zzPephMarkPromptElimAllPhraseCallsFromDescs}{#insert zTPGTDocTop}{#insert zzDirSaveXATFile}	zzPephCreateExplicitPhrasesFromCfg
zzPephCreateHeirFromCfg	{#insert zzNewFileInsCfgFileUscOC}{#insert zTPGTDocTop}{#insert zHOME}{#insert zSelectR1wCopy}{#insert zEND}{#insert zTAB}.{#insert zTAB}{#insert zTPPaste}{#insert zRIGHT}{#insert zSTDocBottom}{#insert zRplcDlgSelRE}{#insert zzPephMRGREAddDtTbKCNotLastCharToParentOnlyLine}{#insert zzPephMRGREPopulateYmksAndAddAutoTxtNotLastChar}{#insert zzPephMRGREAddAutoTxtNotLastCharToPasteChild}{#insert zzPephMGREElimLastCharFromExceptionAutotexts}{#insert zzPephMarkPromptElimAllPhraseCallsFromDescs}{#insert zTPGTDocTop}{#insert zzDirSaveHeirFile}	zzPephCreateHeirFromCfg
zzPephDelExistingFiles	{#insert zFcsTPFileOpen}{#insert zzPephRegexDestinationDir}{#insert zENTER}{#msgbox -head Delete destination files -text Delete existing destination files: '{#insert zzPephRegexHeirFileName}' and '{#insert zzPephRegexExplicitAutoTextFileName}'. **ALSO** ensure that these files are not currently open in the text-editor.{#insert zMsgProceedOrNot}}{#insert zESC}	zzPephDelExistingFiles
zprePlainPhrase	({#insert zOY}#[^{#insert zCY}]+})	zprePlainPhrase
zzPephElimPhrasesFromDescREon	{#insert zFindOpenDown}{#insert zzPephREPhrasesInPreBody}{#insert zFindBtnNext}{#insert zFindDlgClose}{#insert zRplcDlgSel}{#insert zprePlainPhrase}(*Replace WITH-term already established.*){#insert zRplcAllClose}	zzPephElimPhrasesFromDescREon
zzPephFileSaveDstDirSlpEnter	{#insert zFileSave1750slp}{#insert zzPephRegexDestinationDir}{#sleep 500}{#insert zENTER}{#sleep 1000}	zzPephFileSaveDstDirSlpEnter
zzPephMGREElimLastCharFromExceptionAutotexts	{#sleep 1}	zzPephMGREElimLastCharFromExceptionAutotexts
zzPephMRGREAddDtTbKCNotLastCharToParentOnlyLine	{#insert zzPephREParentOnlyLine}{#insert zRplcFieldWith}$1$2$3{#insert zzPEPopupHeirParentOnlyDivTokenForRE}$4\t.\t$2{#insert zRplcBtnAllSelHnr}	zzPephMRGREAddDtTbKCNotLastCharToParentOnlyLine
zzPephMRGRENonParentForBdyInYmkPREFIX	{#insert zzPephRENonParentLineWYmkForBody}{#insert zRplcFieldWith}$1$2$3$4 -- $6$5\t$6\t$2	zzPephMRGRENonParentForBdyInYmkPREFIX
zzPephMRGREPasteChildAutotxtNotLastChrPREFIX	{#insert zzPephRENonParentLinePasteChild}{#insert zRplcFieldWith}$1$2$3 -- $4\t$5\t$2	zzPephMRGREPasteChildAutotxtNotLastChrPREFIX
zzPephMRGREPasteChildAutotxtPREFIX	{#insert zzPephRENonParentLinePasteChild}{#insert zRplcFieldWith}$1$2$3 -- $4\t$5\t$2$3	zzPephMRGREPasteChildAutotxtPREFIX
zzPephMRGREPopulateYmksAndAddAutoTxtNotLastChar -- To non-parent lines only	{#insert zzPephMRGRENonParentForBdyInYmkPREFIX}{#insert zRplcBtnAll}	zzPephMRGREPopulateYmksAndAddAutoTxtNotLastChar
zzPephMRGREAddAutoTxtNotLastCharToPasteChild -- To non-parent lines only	{#insert zzPephMRGREPasteChildAutotxtNotLastChrPREFIX}{#insert zRplcBtnAll}	zzPephMRGREAddAutoTxtNotLastCharToPasteChild
zzPephMRGREAddAutoTxtToPasteChild -- To non-parent lines only	{#insert zzPephMRGREPasteChildAutotxtPREFIX}{#insert zRplcBtnAll}	zzPephMRGREAddAutoTxtToPasteChild
zzPephMRGREPopulateYmksAndAddAutoTxtWAllChars	{#insert zzPephMRGRENonParentForBdyInYmkPREFIX}$3{#insert zRplcBtnAll}	zzPephMRGREPopulateYmksAndAddAutoTxtWAllChars
zzPephMRGRehToRe	reh{#insert zRplcFieldWith}re{#insert zRplcBtnAll}	zzPephMRGRehToRe
zzPephMarkPromptElimAllPhraseCallsFromDescs	{#insert zFindOpenDown}{#insert zzPephREPhrasesInPreBody}{#insert zFindBtnMarkAll}{#msgbox -head Proceed? -text The phrases that have phrase-calls in their descriptions is now in the status bar. I'm about to ask you for that number. (If this is the second time you're seeing this, I already know. Just press the button to proceed.){#insert zMsgProceedOrNot}}{#insert zFindDlgClose}{#insert zTPBookmarkClearAll}{#insert zTPGTDocTop}(*RE is ON. Establish replace-WITH term and scope. No replacement is made.*){#insert zRplcDlgSelRAW}{#insert zRplcWithNOTHING}{#insert zRplcDlgClose}{#loop {#insert zzPephElimPhrasesFromDescREon} -count {#insert zzPephPromptPhraseCallPhrases}}{#insert zFindDlgOpenRETglClose}	zzPephMarkPromptElimAllPhraseCallsFromDescs
zzPephPromptPhraseCallPhrases	{#input -head How many phrases have phrase-calls in their descriptions? -single}	zzPephPromptPhraseCallPhrases
zzPephRENonParentLineWYmkForBody -(**)- 6 groups	(*1=whitespace, 2=var-name-word BUT NOT LAST CHAR, 3=last char in var-name word, 4=optional asterisk indicating sub-items, 5=btw y-mark and tab1, 6=phrase-body, which is the last item in the line (through EOL)*){#insert zzRELineStartWSEntireVarName}(\*{0,1}) -- {#insert zYmark}([^\t]*)\t([^\t]+)$	zzPephRENonParentLineWYmkForBody
zzPephRENonParentLinePasteChild -(**)- 5 groups	(*1=whitespace, 2=var-name-word BUT NOT LAST CHAR, 3=last char in var-name word, 4='[autotext], paste(optional ' clipBoard')' plus any other text preceding the tab, 5=phrase-body (post tab), which is the last item in the line (through EOL)*){#insert zzRELineStartWSEntireVarName} -- ([a-z0-9]+, paste[ clipBoard]*[^\t]*)\t([^\t]+)$	zzPephRENonParentLinePasteChild
zzPephREParentOnlyLine -(**)- 4 groups	(*1=Whitespace before the description-autotext (the first word in the description is the phrase's autotext), 2=desc-autotext all-chars-but-last, 3=last char in desc-autotext, 4=post div token to EOL*){#insert zzRELineStartWSEntireVarName}{#insert zzPEPopupHeirParentOnlyDivTokenForRE}(.*)$	zzPephREParentOnlyLine
zzPephREPhrasesInPreBody	^([\t]*)(([^\t]*){#insert zprePlainPhrase})+([^\t]*)\t	zzPephREPhrasesInPreBody
zzPephRegexConfigDirFile	{#insert zXPROOT_DIR_regex}{#insert zzPephRegexConfigFileName}	zzPephRegexConfigDirFile
zzPephRegexConfigFileName	z_regex_mnl_cnfrm_heirarchy_config.txt	zzPephRegexConfigFileName
zzPephRegexDestinationDir	{#insert zXPROOT_DIR_AG_regex}	zzPephRegexDestinationDir
zzPephRegexExplicitAutoTextFileName	regex_elements_explicit.px.txt	zzPephRegexExplicitAutoTextFileName
zzPephRegexHeirFileName	regex_elements_pep_heirarchy.px.txt	zzPephRegexHeirFileName
zzRELineStartWSEntireVarName -(**)- 3 groups: 1: WS, 2: All v-n chrs but last, 3: last char	(*1: Whitespase from SOL through just-before first non-WS char, 2: The entire first var-name word EXCEPT the final character, 3: The final character.*){#insert zzRELineStartWSOneOrMoreVNmChars}([A-Za-z0-9_])\>	zzRELineStartWSEntireVarName
zzRELineStartWSOneOrMoreVNmChars -(**)- Start of line, then whitespace, then one-or-more chars	(*1=Whitespace from start-of-line through just-before first non-ws char, 2: one or more var-name characters--must follow with \> to truly capture the first word!*)^([ \t]*)([A-Za-z0-9_]+)	zzRELineStartWSOneOrMoreVNmChars
