__XBN-PhraseExpress is released under the LGPL 2.1	(*XBN-PhraseExpress is a large set of generically-useful Microsoft Windows scripting tools, written in PhraseExpress, using the plain-text editor TextPad as its foundation.  //  Copyright (C) 2013 Jeff Epstein  //  This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.  //  This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.  //  You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA*)		(*Two tabs plus this comment, to force this phrase to be (a) imported, and (b) with NO autotext*)
nwrq	{#insert zTPGTDocTop}{#insert zWordWrapOffFromTPDfltState}{#insert zzNwrqIntroDlg}{#insert zzAtDocTopSetCountFindWhats_reOn}{#insert zGTDlgOpenBookmarkExtendGo}{#insert zTPCopy}{#insert zvHNR_YES_stES}{#insert zGetNonWSLineCountForCB_M_hnry}{#insert zLEFT}{#insert zzAtLine2StartMakeRplcSetRplcWithsLoop_M_stcFwsLnc}{#insert zzNwrqsyn_M_yon}	nwrq
nwrqsyn	{#BALLOON -title Syntax: Rplc-sequence for below text -text nwrq[x]=Non~WW, non~RE replacement sequence for text at bottom of current document.  //  [x]=example input  //  nwrqdbg[on,off]  //  snrsyn}	nwrqsyn
nwrqx -- nwrq example input	{#insert zTPFileNew}char Character Char{#insert zENTER}byte Byte Byte{#insert zENTER}short Short Short{#insert zENTER}long Long Long{#insert zENTER}float Float Float{#insert zENTER}boolean Boolean Boolean{#insert zENTER2}{#insert zUP}{#insert zTPBookmarkToggle}{#insert zDOWN}{#insert zTAB}/**{#insert zEnterTab}<P>Get a new array of <CODE>char</CODE>-s containing all element-values in the <CODE>charArrayable</CODE>, inculding <CODE>null</CODE>-value management.</P>{#insert zENTER2}<P><I>See: <CODE><A HREF={#insert zAscQQ}charArrayable.html#getPrimitiveArray(_4FQP_String){#insert zAscQQ}>getPrimitiveArray</A>(s)</CODE></I></P>{#insert zENTER2}@param  pa_bl  May not be <CODE>null</CODE>.{#insert zENTER}@param  s_clgFunc  For potential error messages. <I>Should</I> not be <CODE>null</CODE> or empty.{#insert zEnterBksp} **/{#insert zEnterBksp}public static final char[] getCharArray(charArrayable pa_bl, String s_clgFunc)  {{#insert zENTER}IWPrimitiveArrayable<Character> iwpap = (IWPrimitiveArrayable<Character>)iwpa;{#insert zENTER2}iwpap.setGetIInstance(null, pa_bl);{#insert zENTER2}...{#insert zENTER2}{#insert zBKSP2}{#insert zBalloonDone}{#sleep 2000}{#insert zzNwrqsyn_M_yon}	nwrqx
zzAtDocTopSetCountFindWhats_reOn	{#insert zSelCopyEntireLineNoNL}{#insert zFileNewPaste}{#insert zRplcDlgOpenRE}{#SETPHRASE -description zvFIND_WHAT -content \w+ -autotext zvFIND_WHAT -folder ctvv_folder}{#insert zvFIND_WHAT}{#insert zRplcWithNOTHING}{#insert zRplcBtnAllTD}{#insert zRplcDlgCloseRE}{#insert zSelectAllCopy}{#SETPHRASE -description zvSRCH_TRM_CNT -content {#CALC {#insert zCBLen} + 1 -round 0 -thousands none} -autotext zvSRCH_TRM_CNT -folder ctvv_folder}{#BALLOON -title Number of search~terms -text {#insert zvSRCH_TRM_CNT} (all lines above the bookmark must have this number of words)}{#insert zFileCloseDiscardChanges}{#insert zLEFT}{#insert zzAtDocTopSetFindWhats_M_stc}	zzAtDocTopSetCountFindWhats_reOn
zzAtDocTopSetFindWhats_M_stc -- Needs zvSRCH_TRM_CNT	{#insert zvNUMBER_st0}{#LOOP {#insert zzSetNextFindWhat_M_num} -count {#insert zvSRCH_TRM_CNT}}	zzAtDocTopSetFindWhats_M_stc
zzAtLine2StartMakeRplcSetRplcWithsLoop_M_stcFwsLnc -(*Needs*)-	(*Needs zvSRCH_TRM_CNT, zvFIND_WHAT[#], zvLINE_COUNT*){#insert zFindFlagMConOnly}{#LOOP {#insert zzAtRplcWithLnStartSetRplcWsMakeRplcs_M_stcFws}{#insert zTPGTDocTop}{#insert zTPBookmarkGTNextToggle} -count {#CALC {#insert zvLINE_COUNT} - 1 -round 0 -thousands none}}{#insert zzAtRplcWithLnStartSetRplcWsMakeRplcs_M_stcFws}{#insert zTPGTDocTop}	zzAtLine2StartMakeRplcSetRplcWithsLoop_M_stcFwsLnc
zzAtRplcWithLnStartSetRplcWsMakeRplcs_M_stcFws -(*Needs*)-	(*Needs zvSRCH_TRM_CNT, zvNUMBER (inc 1st), zvFIND_WHAT[zvNUMBER]*){#insert zvNUMBER_st0}{#LOOP {#insert zzSetPassNextRplcWith_M_num} -count {#insert zvSRCH_TRM_CNT}}(*At start of NEXT set of search terms*){#insert zTPBookmarkToggle}{#insert zTPBookmarkGTNext}{#insert zRIGHT}{#insert zTPSTDocBottom}{#insert zTPCopy}{#insert zFileNewPaste}{#insert zzBalSearchTerms_M_num0}{#insert zvNUMBER_st0}{#insert zTPRplcDlgOpen}{#LOOP {#insert zzRplcNextSearchTerm_M_numStms} -count {#insert zvSRCH_TRM_CNT}}{#insert zRplcDlgClose}{#insert zTPGTDocTop}{#insert zSystemGTPrevDoc}	zzAtRplcWithLnStartSetRplcWsMakeRplcs_M_stcFws
zzBalSearchTerms_M_num0	{#BALLOON -title Search terms -text {#insert zvNUMBER_st0}{#LOOP {#insert zvNUMBER_incBy1}zvFIND_WHAT{#insert zvNUMBER}='{#insert zvFIND_WHAT{#insert zvNUMBER}}', (**) -count {#insert zvSRCH_TRM_CNT}}{#insert zvNUMBER_st0}{#LOOP {#insert zvNUMBER_incBy1}zvRPLC_WITH{#insert zvNUMBER}='{#insert zvRPLC_WITH{#insert zvNUMBER}}', (**) -count {#insert zvSRCH_TRM_CNT}}}	zzBalSearchTerms_M_num0
zzNwrqIntroDlg	{#MSGBOX -head nwrq intro -text About to start 'nwrq' ~~ Non~whole~word, non~regex replacement~sequence. See 'nwrqx' for example input.  //  Line one is the find~what's. The order of replacements is left to right.  //  Line two through the bookmarked~line, are the replace~with's. Each of these lines must have the same number of words. All words are space~delimited, and must contain only letters, digits and underscores. There may not be any whitespace at the start or end of lines.  //  Below the bookmarked line is the text to be replaced (WARNING: There must be only one bookmark in the document).  Each result will be in a new document. // About to count the number of find~what strings, and the number of replace~with lines. Both will use a temporary document.  //  WARNING: Word~wrap must currently be off (should have been on when you called this)  //  WARNING: If there are any other bookmarks aside from the one between the search~terms and the text, this will fail.}	zzNwrqIntroDlg
zzNwrqsyn_M_yon -- Needs zvSYNTAX_ON	{#insert {#COND -if {#insert zvSYNTAX_ON} = on -then nwrqsyn -else z1slp}}	zzNwrqsyn_M_yon
zzRplcNextSearchTerm_M_numStms	{#insert zvNUMBER_incBy1}{#insert zvFIND_WHAT{#insert zvNUMBER}}{#insert zRplcFieldWith}{#insert zvRPLC_WITH{#insert zvNUMBER}}{#insert zRplcBtnAllTD}	zzRplcNextSearchTerm_M_numStms
zzSetNextFindWhat_M_num -- Needs zvNUMBER=counter, inc 1st	{#insert zvNUMBER_incBy1}{#insert zSelectR1wCopy}{#SETPHRASE -description zvFIND_WHAT{#insert zvNUMBER} -content {#INSERTCLIPBOARD} -autotext zvFIND_WHAT{#insert zvNUMBER} -folder ctvv_folder}{#insert zRIGHT2}	zzSetNextFindWhat_M_num
zzSetPassNextRplcWith_M_num	{#insert zvNUMBER_incBy1}{#insert zSelectR1wCopy}{#SETPHRASE -description zvRPLC_WITH{#insert zvNUMBER} -content {#INSERTCLIPBOARD} -autotext zvRPLC_WITH{#insert zvNUMBER} -folder ctvv_folder}{#insert zRIGHT2}	zzSetPassNextRplcWith_M_num
